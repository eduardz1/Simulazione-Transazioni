==9590== Memcheck, a memory error detector
==9590== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9590== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9590== Command: ./master
==9590== 
[MASTER] semPIDs_ID is 13
[MASTER] semLedger_ID is 14
[PARSER] assigned defaults
--------------------------------------------
----------- Configuration input ------------
SO_USER_NUM 100
SO_NODES_NUM 10
SO_FRIENDS_NUM 3
SO_SIM_SEC 100
SO_HOPS 10
SO_BUDGET_INIT 1000
SO_REWARD 1
SO_MIN_TRANS_GEN_NSEC 100000000
SO_MAX_TRANS_GEN_NSEC 200000000
SO_RETRY 20
SO_TP_SIZE 1000
SO_MIN_TRANS_PROC_NSEC 100000000
SO_MAX_TRANS_PROC_NSEC 200000000
--------------------------------------------
[MASTER] conf file read successful
[MASTER] IPC_array={26,25,24,27,13,14}
[MASTER] argv[uPID] = 26
[MASTER] argv[nPID] = 25
[MASTER] argv[par] = 24
[MASTER] argv[ledger] = 27
[MASTER] argv[sem_pids] = 13
[MASTER] argv[sem_ledger] = 14
[PROCESS 9590] queueID is 52
[MASTER] argv values for nodes: ./nodes 26 25 24 27 13 14 (null)
[MASTER] filling nodesPID
[MASTER SPAWN 9590] timestamp=1643456717
[MASTER] Spawning node with associated queue
[PROCESS 9591] queueID is 53
[MASTER] filling nodesPID
[MASTER SPAWN 9590] timestamp=1643456717
[MASTER] filling nodesPID
[MASTER SPAWN 9590] timestamp=1643456717
[MASTER] Spawning node with associated queue
[PROCESS 9592] queueID is 54
[MASTER] filling nodesPID
[MASTER SPAWN 9590] timestamp=1643456717
[MASTER] filling nodesPID
[MASTER] Spawning node with associated queue
[MASTER SPAWN 9590] timestamp=1643456717
[PROCESS 9593] queueID is 55
[MASTER] filling nodesPID
[MASTER SPAWN 9590] timestamp=1643456717
[MASTER] Spawning node with associated queue
[PROCESS 9594] queueID is 56
[MASTER] filling nodesPID
[MASTER SPAWN 9590] timestamp=1643456717
[MASTER] Spawning node with associated queue
[PROCESS 9595] queueID is 57
[MASTER] filling nodesPID
[MASTER SPAWN 9590] timestamp=1643456717
[MASTER] Spawning node with associated queue
[PROCESS 9596] queueID is 58
[MASTER] filling nodesPID
[MASTER] Spawning node with associated queue
[MASTER SPAWN 9590] timestamp=1643456717
[PROCESS 9597] queueID is 59
[MASTER] filling nodesPID
[MASTER SPAWN 9590] timestamp=1643456717
[MASTER] Spawning node with associated queue
==9591== Memcheck, a memory error detector
==9591== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9591== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9591== Command: ./nodes 26 25 24 27 13 14
==9591== 
[PROCESS 9598] queueID is 60
[MASTER] Spawning node with associated queue
[PROCESS 9599] queueID is 61
==9592== Memcheck, a memory error detector
==9592== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9592== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9592== Command: ./nodes 26 25 24 27 13 14
==9592== 
[MASTER] Spawning node with associated queue
[PROCESS 9600] queueID is 62
[MASTER] extracted friend: 9596
[MASTER] extracted friend: 9598
[MASTER] extracted friend: 9600
[MASTER] please have this be a friend that makes sense: 9596
[MASTER] trying msgget for nodesPID[x].9591
[MASTER] nodePID.pid=9591 queue=53
==9590== Syscall param msgsnd(msgp->mtext) points to uninitialised byte(s)
==9590==    at 0x4975F4A: msgsnd (msgsnd.c:27)
==9590==    by 0x10BFD4: send_message (msg.c:6)
==9590==    by 0x109DD2: send_friend_list (master.c:180)
==9590==    by 0x10A5C7: main (master.c:441)
==9590==  Address 0x1fff000130 is on thread 1's stack
==9590==  in frame #2, created by send_friend_list (master.c:157)
==9590==  Uninitialised value was created by a stack allocation
==9590==    at 0x109CBF: send_friend_list (master.c:157)
==9590== 
[MASTER] sent friend to 9591
[MASTER] sent friend to 9591
[MASTER] sent friend to 9591
==9593== Memcheck, a memory error detector
==9593== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9593== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9593== Command: ./nodes 26 25 24 27 13 14
==9593== 
[MASTER] extracted friend: 9596
[MASTER] extracted friend: 9598
[MASTER] extracted friend: 9600
[MASTER] please have this be a friend that makes sense: 9596
[MASTER] trying msgget for nodesPID[x].9592
[MASTER] nodePID.pid=9592 queue=54
[MASTER] sent friend to 9592
[MASTER] sent friend to 9592
[MASTER] sent friend to 9592
[MASTER] extracted friend: 9596
[MASTER] extracted friend: 9598
[MASTER] extracted friend: 9600
[MASTER] please have this be a friend that makes sense: 9596
[MASTER] trying msgget for nodesPID[x].9593
[MASTER] nodePID.pid=9593 queue=55
[MASTER] sent friend to 9593
[MASTER] sent friend to 9593
[MASTER] sent friend to 9593
[MASTER] extracted friend: 9596
[MASTER] extracted friend: 9598
[MASTER] extracted friend: 9600
[MASTER] please have this be a friend that makes sense: 9596
[MASTER] trying msgget for nodesPID[x].9594
[MASTER] nodePID.pid=9594 queue=56
[MASTER] sent friend to 9594
[MASTER] sent friend to 9594
[MASTER] sent friend to 9594
[MASTER] extracted friend: 9596
[MASTER] extracted friend: 9598
[MASTER] extracted friend: 9600
[MASTER] please have this be a friend that makes sense: 9596
[MASTER] trying msgget for nodesPID[x].9595
[MASTER] nodePID.pid=9595 queue=57
[MASTER] sent friend to 9595
[MASTER] sent friend to 9595
[MASTER] sent friend to 9595
[MASTER] extracted friend: 9596
[MASTER] extracted friend: 9598
[MASTER] extracted friend: 9600
[MASTER] please have this be a friend that makes sense: 9596
[MASTER] trying msgget for nodesPID[x].9596
[MASTER] nodePID.pid=9596 queue=58
[MASTER] sent friend to 9596
[MASTER] sent friend to 9596
[MASTER] sent friend to 9596
==9594== Memcheck, a memory error detector
==9594== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9594== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9594== Command: ./nodes 26 25 24 27 13 14
==9594== 
==9595== Memcheck, a memory error detector
==9595== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9595== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9595== Command: ./nodes 26 25 24 27 13 14
==9595== 
[MASTER] extracted friend: 9596
[MASTER] extracted friend: 9598
[MASTER] extracted friend: 9600
[MASTER] please have this be a friend that makes sense: 9596
[MASTER] trying msgget for nodesPID[x].9597
[MASTER] nodePID.pid=9597 queue=59
[MASTER] sent friend to 9597
[MASTER] sent friend to 9597
[MASTER] sent friend to 9597
[MASTER] extracted friend: 9596
[MASTER] extracted friend: 9598
[MASTER] extracted friend: 9600
[MASTER] please have this be a friend that makes sense: 9596
[MASTER] trying msgget for nodesPID[x].9598
[MASTER] nodePID.pid=9598 queue=60
[MASTER] sent friend to 9598
[MASTER] sent friend to 9598
[MASTER] sent friend to 9598
[MASTER] extracted friend: 9596
[MASTER] extracted friend: 9598
[MASTER] extracted friend: 9600
[MASTER] please have this be a friend that makes sense: 9596
[MASTER] trying msgget for nodesPID[x].9599
[MASTER] nodePID.pid=9599 queue=61
[MASTER] sent friend to 9599
[MASTER] sent friend to 9599
[MASTER] sent friend to 9599
[MASTER] extracted friend: 9596
[MASTER] extracted friend: 9598
[MASTER] extracted friend: 9600
[MASTER] please have this be a friend that makes sense: 9596
[MASTER] trying msgget for nodesPID[x].9600
[MASTER] nodePID.pid=9600 queue=62
[MASTER] sent friend to 9600
[MASTER] sent friend to 9600
[MASTER] sent friend to 9600
==9596== Memcheck, a memory error detector
==9596== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9596== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9596== Command: ./nodes 26 25 24 27 13 14
==9596== 
[MASTER] argv values for users: ./users 26 25 24 27 13 14 (null)
==9597== Memcheck, a memory error detector
==9597== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9597== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9597== Command: ./nodes 26 25 24 27 13 14
==9597== 
==9599== Memcheck, a memory error detector
==9599== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9599== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9599== Command: ./nodes 26 25 24 27 13 14
==9599== 
==9598== Memcheck, a memory error detector
==9598== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
[MASTER] Spawning user
==9598== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9598== Command: ./nodes 26 25 24 27 13 14
==9598== 
==9600== Memcheck, a memory error detector
==9600== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9600== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9600== Command: ./nodes 26 25 24 27 13 14
==9600== 
[MASTER] Spawning user
==9601== Memcheck, a memory error detector
==9601== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9601== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9601== Command: ./users 26 25 24 27 13 14
==9601== 
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
==9604== Memcheck, a memory error detector
==9604== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9604== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9604== Command: ./users 26 25 24 27 13 14
==9604== 
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
==9605== Memcheck, a memory error detector
==9605== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9605== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9605== Command: ./users 26 25 24 27 13 14
==9605== 
==9602== Memcheck, a memory error detector
==9602== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9602== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9602== Command: ./users 26 25 24 27 13 14
==9602== 
==9606== Memcheck, a memory error detector
==9606== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9606== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9606== Command: ./users 26 25 24 27 13 14
==9606== 
==9603== Memcheck, a memory error detector
==9603== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9603== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9603== Command: ./users 26 25 24 27 13 14
==9603== 
==9607== Memcheck, a memory error detector
==9607== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9607== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9607== Command: ./users 26 25 24 27 13 14
==9607== 
[MASTER] Spawning user
[MASTER] Spawning user
==9609== Memcheck, a memory error detector
==9609== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9609== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9609== Command: ./users 26 25 24 27 13 14
==9609== 
==9608== Memcheck, a memory error detector
==9608== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9608== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9608== Command: ./users 26 25 24 27 13 14
==9608== 
==9611== Memcheck, a memory error detector
==9611== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9611== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9611== Command: ./users 26 25 24 27 13 14
==9611== 
[MASTER] Spawning user
[MASTER] Spawning user
==9610== Memcheck, a memory error detector
==9610== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9610== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9610== Command: ./users 26 25 24 27 13 14
==9610== 
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
==9612== Memcheck, a memory error detector
==9612== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9612== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9612== Command: ./users 26 25 24 27 13 14
==9612== 
[MASTER] Spawning user
==9613== Memcheck, a memory error detector
==9613== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9613== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9613== Command: ./users 26 25 24 27 13 14
==9613== 
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
==9621== Memcheck, a memory error detector
==9621== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9621== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9621== Command: ./users 26 25 24 27 13 14
==9621== 
==9615== Memcheck, a memory error detector
==9615== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9615== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9615== Command: ./users 26 25 24 27 13 14
==9615== 
==9622== Memcheck, a memory error detector
==9622== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9622== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9622== Command: ./users 26 25 24 27 13 14
==9622== 
[MASTER] Spawning user
==9619== Memcheck, a memory error detector
==9619== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9619== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9619== Command: ./users 26 25 24 27 13 14
==9619== 
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
==9620== Memcheck, a memory error detector
==9620== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9620== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9620== Command: ./users 26 25 24 27 13 14
==9620== 
[MASTER] Spawning user
[MASTER] Spawning user
==9614== Memcheck, a memory error detector
==9614== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9614== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9614== Command: ./users 26 25 24 27 13 14
==9614== 
==9617== Memcheck, a memory error detector
==9617== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9617== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9617== Command: ./users 26 25 24 27 13 14
==9617== 
[MASTER] Spawning user
==9626== Memcheck, a memory error detector
==9626== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9626== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9626== Command: ./users 26 25 24 27 13 14
==9626== 
==9618== Memcheck, a memory error detector
==9618== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9618== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9618== Command: ./users 26 25 24 27 13 14
==9618== 
[MASTER] Spawning user
[MASTER] Spawning user
==9616== Memcheck, a memory error detector
==9616== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9616== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9616== Command: ./users 26 25 24 27 13 14
==9616== 
[MASTER] Spawning user
[MASTER] Spawning user
==9625== Memcheck, a memory error detector
==9625== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9625== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9625== Command: ./users 26 25 24 27 13 14
==9625== 
==9623== Memcheck, a memory error detector
==9623== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
[MASTER] Spawning user
==9623== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9623== Command: ./users 26 25 24 27 13 14
==9623== 
[MASTER] Spawning user
==9633== Memcheck, a memory error detector
==9633== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9633== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9633== Command: ./users 26 25 24 27 13 14
==9633== 
==9628== Memcheck, a memory error detector
==9628== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9628== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9628== Command: ./users 26 25 24 27 13 14
==9628== 
==9627== Memcheck, a memory error detector
==9627== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9627== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9627== Command: ./users 26 25 24 27 13 14
==9627== 
==9629== Memcheck, a memory error detector
==9629== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9629== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9629== Command: ./users 26 25 24 27 13 14
==9629== 
[MASTER] Spawning user
==9631== Memcheck, a memory error detector
==9631== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9631== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9631== Command: ./users 26 25 24 27 13 14
==9631== 
==9624== Memcheck, a memory error detector
==9624== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9624== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9624== Command: ./users 26 25 24 27 13 14
==9624== 
==9635== Memcheck, a memory error detector
==9635== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9635== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9635== Command: ./users 26 25 24 27 13 14
==9635== 
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
==9632== Memcheck, a memory error detector
==9632== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9632== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9632== Command: ./users 26 25 24 27 13 14
==9632== 
==9630== Memcheck, a memory error detector
==9630== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9630== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9630== Command: ./users 26 25 24 27 13 14
==9630== 
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
==9637== Memcheck, a memory error detector
==9637== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9637== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9637== Command: ./users 26 25 24 27 13 14
==9637== 
[MASTER] Spawning user
==9639== Memcheck, a memory error detector
==9639== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9639== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9639== Command: ./users 26 25 24 27 13 14
==9639== 
==9640== Memcheck, a memory error detector
==9640== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9640== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9640== Command: ./users 26 25 24 27 13 14
==9640== 
==9634== Memcheck, a memory error detector
==9636== Memcheck, a memory error detector
==9636== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9634== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9636== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9634== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9636== Command: ./users 26 25 24 27 13 14
==9634== Command: ./users 26 25 24 27 13 14
==9636== 
==9634== 
[MASTER] Spawning user
==9641== Memcheck, a memory error detector
==9641== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9641== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9641== Command: ./users 26 25 24 27 13 14
==9641== 
==9638== Memcheck, a memory error detector
==9638== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9638== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9638== Command: ./users 26 25 24 27 13 14
==9638== 
[MASTER] Spawning user
==9645== Memcheck, a memory error detector
==9645== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9645== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9645== Command: ./users 26 25 24 27 13 14
==9645== 
[MASTER] Spawning user
==9642== Memcheck, a memory error detector
==9642== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9642== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9642== Command: ./users 26 25 24 27 13 14
==9642== 
==9646== Memcheck, a memory error detector
==9646== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9646== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9646== Command: ./users 26 25 24 27 13 14
==9646== 
==9644== Memcheck, a memory error detector
==9644== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9644== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9644== Command: ./users 26 25 24 27 13 14
==9644== 
==9648== Memcheck, a memory error detector
==9648== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9648== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9648== Command: ./users 26 25 24 27 13 14
==9648== 
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
==9647== Memcheck, a memory error detector
==9647== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9647== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9647== Command: ./users 26 25 24 27 13 14
==9647== 
==9643== Memcheck, a memory error detector
==9643== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9643== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9643== Command: ./users 26 25 24 27 13 14
==9643== 
==9649== Memcheck, a memory error detector
==9649== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9649== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9649== Command: ./users 26 25 24 27 13 14
==9649== 
==9659== Memcheck, a memory error detector
==9659== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9659== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9659== Command: ./users 26 25 24 27 13 14
==9659== 
==9663== Memcheck, a memory error detector
==9663== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9663== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9663== Command: ./users 26 25 24 27 13 14
==9663== 
[MASTER] Spawning user
==9650== Memcheck, a memory error detector
==9650== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9650== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9650== Command: ./users 26 25 24 27 13 14
==9650== 
==9654== Memcheck, a memory error detector
==9654== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9654== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9654== Command: ./users 26 25 24 27 13 14
==9654== 
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
[MASTER] Spawning user
==9651== Memcheck, a memory error detector
==9651== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9651== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9651== Command: ./users 26 25 24 27 13 14
==9651== 
[MASTER] Spawning user
==9652== Memcheck, a memory error detector
==9652== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9652== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9652== Command: ./users 26 25 24 27 13 14
==9652== 
[MASTER] Spawning user
[MASTER] Spawning user
==9662== Memcheck, a memory error detector
==9662== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9662== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9662== Command: ./users 26 25 24 27 13 14
==9662== 
==9667== Memcheck, a memory error detector
==9661== Memcheck, a memory error detector
==9667== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9667== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9667== Command: ./users 26 25 24 27 13 14
==9667== 
==9666== Memcheck, a memory error detector
==9668== Memcheck, a memory error detector
==9668== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9668== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9669== Memcheck, a memory error detector
==9669== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9669== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9669== Command: ./users 26 25 24 27 13 14
==9669== 
==9671== Memcheck, a memory error detector
==9664== Memcheck, a memory error detector
==9671== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9671== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9671== Command: ./users 26 25 24 27 13 14
==9671== 
==9664== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9664== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9664== Command: ./users 26 25 24 27 13 14
==9664== 
==9661== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9661== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9661== Command: ./users 26 25 24 27 13 14
==9661== 
==9666== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9666== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9665== Memcheck, a memory error detector
==9665== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9665== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9665== Command: ./users 26 25 24 27 13 14
==9665== 
==9666== Command: ./users 26 25 24 27 13 14
==9666== 
==9668== Command: ./users 26 25 24 27 13 14
==9668== 
==9660== Memcheck, a memory error detector
==9660== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9660== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9660== Command: ./users 26 25 24 27 13 14
==9660== 
==9653== Memcheck, a memory error detector
==9653== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9653== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9653== Command: ./users 26 25 24 27 13 14
==9653== 
==9670== Memcheck, a memory error detector
==9670== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9670== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==9670== Command: ./users 26 25 24 27 13 14
==9670== 
src/users.c:124: PID= 9667: Error 22 (Invalid argument)
src/users.c:126: PID= 9667: Error 22 (Invalid argument)
src/users.c:128: PID= 9667: Error 22 (Invalid argument)
src/users.c:130: PID= 9667: Error 22 (Invalid argument)
src/users.c:124: PID= 9637: Error 22 (Invalid argument)
src/users.c:126: PID= 9637: Error 22 (Invalid argument)
src/users.c:128: PID= 9637: Error 22 (Invalid argument)
src/users.c:130: PID= 9637: Error 22 (Invalid argument)
==9637== Invalid read of size 4
==9637==    at 0x10A020: main (users.c:389)
==9637==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9637== 
==9637== 
==9637== Process terminating with default action of signal 11 (SIGSEGV)
==9637==  Access not within mapped region at address 0x7
==9637==    at 0x10A020: main (users.c:389)
==9637==  If you believe this happened as a result of a stack
==9637==  overflow in your program's main thread (unlikely but
==9637==  possible), you can try to increase the size of the
==9637==  main thread stack using the --main-stacksize= flag.
==9637==  The main thread stack size used in this run was 8388608.
==9667== Invalid read of size 4
==9667==    at 0x10A020: main (users.c:389)
==9667==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9667== 
==9667== 
==9667== Process terminating with default action of signal 11 (SIGSEGV)
==9667==  Access not within mapped region at address 0x7
==9667==    at 0x10A020: main (users.c:389)
==9667==  If you believe this happened as a result of a stack
==9667==  overflow in your program's main thread (unlikely but
==9667==  possible), you can try to increase the size of the
==9667==  main thread stack using the --main-stacksize= flag.
==9667==  The main thread stack size used in this run was 8388608.
==9637== 
==9637== HEAP SUMMARY:
==9637==     in use at exit: 0 bytes in 0 blocks
==9637==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9637== 
==9637== All heap blocks were freed -- no leaks are possible
==9637== 
==9637== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9637== 
==9637== 1 errors in context 1 of 1:
==9637== Invalid read of size 4
==9637==    at 0x10A020: main (users.c:389)
==9637==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9637== 
==9637== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9667== 
==9667== HEAP SUMMARY:
==9667==     in use at exit: 0 bytes in 0 blocks
==9667==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9667== 
==9667== All heap blocks were freed -- no leaks are possible
==9667== 
==9667== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9667== 
==9667== 1 errors in context 1 of 1:
==9667== Invalid read of size 4
==9667==    at 0x10A020: main (users.c:389)
==9667==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9667== 
==9667== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9616: Error 22 (Invalid argument)
src/users.c:126: PID= 9616: Error 22 (Invalid argument)
src/users.c:128: PID= 9616: Error 22 (Invalid argument)
src/users.c:130: PID= 9616: Error 22 (Invalid argument)
==9616== Invalid read of size 4
==9616==    at 0x10A020: main (users.c:389)
==9616==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9616== 
==9616== 
==9616== Process terminating with default action of signal 11 (SIGSEGV)
==9616==  Access not within mapped region at address 0x7
==9616==    at 0x10A020: main (users.c:389)
==9616==  If you believe this happened as a result of a stack
==9616==  overflow in your program's main thread (unlikely but
==9616==  possible), you can try to increase the size of the
==9616==  main thread stack using the --main-stacksize= flag.
==9616==  The main thread stack size used in this run was 8388608.
==9616== 
==9616== HEAP SUMMARY:
==9616==     in use at exit: 0 bytes in 0 blocks
==9616==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9616== 
==9616== All heap blocks were freed -- no leaks are possible
==9616== 
==9616== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9616== 
==9616== 1 errors in context 1 of 1:
==9616== Invalid read of size 4
==9616==    at 0x10A020: main (users.c:389)
==9616==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9616== 
==9616== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9670: Error 22 (Invalid argument)
src/users.c:126: PID= 9670: Error 22 (Invalid argument)
src/users.c:128: PID= 9670: Error 22 (Invalid argument)
src/users.c:130: PID= 9670: Error 22 (Invalid argument)
==9670== Invalid read of size 4
==9670==    at 0x10A020: main (users.c:389)
==9670==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9670== 
==9670== 
==9670== Process terminating with default action of signal 11 (SIGSEGV)
==9670==  Access not within mapped region at address 0x7
==9670==    at 0x10A020: main (users.c:389)
==9670==  If you believe this happened as a result of a stack
==9670==  overflow in your program's main thread (unlikely but
==9670==  possible), you can try to increase the size of the
==9670==  main thread stack using the --main-stacksize= flag.
==9670==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9638: Error 22 (Invalid argument)
src/users.c:124: PID= 9619: Error 22 (Invalid argument)
src/users.c:126: PID= 9619: Error 22 (Invalid argument)
src/users.c:128: PID= 9619: Error 22 (Invalid argument)
src/users.c:130: PID= 9619: Error 22 (Invalid argument)
==9670== 
==9670== HEAP SUMMARY:
==9670==     in use at exit: 0 bytes in 0 blocks
==9670==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9670== 
==9670== All heap blocks were freed -- no leaks are possible
==9670== 
==9670== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9670== 
==9670== 1 errors in context 1 of 1:
==9670== Invalid read of size 4
==9670==    at 0x10A020: main (users.c:389)
==9670==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9670== 
==9670== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9619== Invalid read of size 4
==9619==    at 0x10A020: main (users.c:389)
==9619==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9619== 
==9619== 
==9619== Process terminating with default action of signal 11 (SIGSEGV)
==9619==  Access not within mapped region at address 0x7
==9619==    at 0x10A020: main (users.c:389)
==9619==  If you believe this happened as a result of a stack
==9619==  overflow in your program's main thread (unlikely but
==9619==  possible), you can try to increase the size of the
==9619==  main thread stack using the --main-stacksize= flag.
==9619==  The main thread stack size used in this run was 8388608.
src/users.c:126: PID= 9638: Error 22 (Invalid argument)
src/users.c:128: PID= 9638: Error 22 (Invalid argument)
src/users.c:130: PID= 9638: Error 22 (Invalid argument)
src/users.c:124: PID= 9661: Error 22 (Invalid argument)
src/users.c:126: PID= 9661: Error 22 (Invalid argument)
src/users.c:128: PID= 9661: Error 22 (Invalid argument)
src/users.c:130: PID= 9661: Error 22 (Invalid argument)
==9661== Invalid read of size 4
==9661==    at 0x10A020: main (users.c:389)
==9661==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9661== 
==9661== 
==9661== Process terminating with default action of signal 11 (SIGSEGV)
==9661==  Access not within mapped region at address 0x7
==9661==    at 0x10A020: main (users.c:389)
==9661==  If you believe this happened as a result of a stack
==9661==  overflow in your program's main thread (unlikely but
==9661==  possible), you can try to increase the size of the
==9661==  main thread stack using the --main-stacksize= flag.
==9661==  The main thread stack size used in this run was 8388608.
==9638== Invalid read of size 4
==9638==    at 0x10A020: main (users.c:389)
==9638==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9638== 
==9638== 
==9638== Process terminating with default action of signal 11 (SIGSEGV)
==9638==  Access not within mapped region at address 0x7
==9638==    at 0x10A020: main (users.c:389)
==9638==  If you believe this happened as a result of a stack
==9638==  overflow in your program's main thread (unlikely but
==9638==  possible), you can try to increase the size of the
==9638==  main thread stack using the --main-stacksize= flag.
==9638==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9666: Error 22 (Invalid argument)
src/users.c:126: PID= 9666: Error 22 (Invalid argument)
src/users.c:128: PID= 9666: Error 22 (Invalid argument)
src/users.c:130: PID= 9666: Error 22 (Invalid argument)
==9666== Invalid read of size 4
==9666==    at 0x10A020: main (users.c:389)
==9666==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9666== 
==9666== 
==9666== Process terminating with default action of signal 11 (SIGSEGV)
==9666==  Access not within mapped region at address 0x7
==9666==    at 0x10A020: main (users.c:389)
==9666==  If you believe this happened as a result of a stack
==9666==  overflow in your program's main thread (unlikely but
==9666==  possible), you can try to increase the size of the
==9666==  main thread stack using the --main-stacksize= flag.
==9666==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9622: Error 22 (Invalid argument)
src/users.c:126: PID= 9622: Error 22 (Invalid argument)
src/users.c:128: PID= 9622: Error 22 (Invalid argument)
src/users.c:130: PID= 9622: Error 22 (Invalid argument)
src/users.c:124: PID= 9642: Error 22 (Invalid argument)
==9661== 
==9661== HEAP SUMMARY:
==9661==     in use at exit: 0 bytes in 0 blocks
==9661==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9661== 
==9661== All heap blocks were freed -- no leaks are possible
==9661== 
==9661== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9661== 
==9661== 1 errors in context 1 of 1:
==9661== Invalid read of size 4
==9661==    at 0x10A020: main (users.c:389)
==9661==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9661== 
==9661== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:126: PID= 9642: Error 22 (Invalid argument)
src/users.c:128: PID= 9642: Error 22 (Invalid argument)
src/users.c:130: PID= 9642: Error 22 (Invalid argument)
==9619== 
==9619== HEAP SUMMARY:
==9619==     in use at exit: 0 bytes in 0 blocks
==9619==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9619== 
==9619== All heap blocks were freed -- no leaks are possible
==9619== 
==9619== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9619== 
==9619== 1 errors in context 1 of 1:
==9619== Invalid read of size 4
==9619==    at 0x10A020: main (users.c:389)
==9619==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9619== 
==9619== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9642== Invalid read of size 4
==9642==    at 0x10A020: main (users.c:389)
==9642==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9642== 
==9642== 
==9642== Process terminating with default action of signal 11 (SIGSEGV)
==9642==  Access not within mapped region at address 0x7
==9642==    at 0x10A020: main (users.c:389)
==9642==  If you believe this happened as a result of a stack
==9642==  overflow in your program's main thread (unlikely but
==9642==  possible), you can try to increase the size of the
==9642==  main thread stack using the --main-stacksize= flag.
==9642==  The main thread stack size used in this run was 8388608.
==9666== 
==9666== HEAP SUMMARY:
==9666==     in use at exit: 0 bytes in 0 blocks
==9666==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9666== 
==9666== All heap blocks were freed -- no leaks are possible
==9666== 
==9666== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9666== 
==9666== 1 errors in context 1 of 1:
==9666== Invalid read of size 4
==9666==    at 0x10A020: main (users.c:389)
==9666==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9666== 
==9666== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9642== 
==9642== HEAP SUMMARY:
==9642==     in use at exit: 0 bytes in 0 blocks
==9642==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9642== 
==9642== All heap blocks were freed -- no leaks are possible
==9642== 
==9642== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9642== 
==9642== 1 errors in context 1 of 1:
==9642== Invalid read of size 4
==9642==    at 0x10A020: main (users.c:389)
==9642==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9642== 
==9642== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9622== Invalid read of size 4
==9622==    at 0x10A020: main (users.c:389)
==9622==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9622== 
==9622== 
==9622== Process terminating with default action of signal 11 (SIGSEGV)
==9622==  Access not within mapped region at address 0x7
==9622==    at 0x10A020: main (users.c:389)
==9622==  If you believe this happened as a result of a stack
==9622==  overflow in your program's main thread (unlikely but
==9622==  possible), you can try to increase the size of the
==9622==  main thread stack using the --main-stacksize= flag.
==9622==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9662: Error 22 (Invalid argument)
src/users.c:126: PID= 9662: Error 22 (Invalid argument)
src/users.c:128: PID= 9662: Error 22 (Invalid argument)
src/users.c:130: PID= 9662: Error 22 (Invalid argument)
src/users.c:124: PID= 9647: Error 22 (Invalid argument)
==9638== 
==9638== HEAP SUMMARY:
==9638==     in use at exit: 0 bytes in 0 blocks
==9638==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9638== 
==9638== All heap blocks were freed -- no leaks are possible
==9638== 
==9638== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9638== 
==9638== 1 errors in context 1 of 1:
==9638== Invalid read of size 4
==9638==    at 0x10A020: main (users.c:389)
==9638==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9638== 
==9638== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9622== 
==9622== HEAP SUMMARY:
==9622==     in use at exit: 0 bytes in 0 blocks
==9622==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9622== 
==9622== All heap blocks were freed -- no leaks are possible
==9622== 
==9622== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9622== 
==9622== 1 errors in context 1 of 1:
==9622== Invalid read of size 4
==9622==    at 0x10A020: main (users.c:389)
==9622==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9622== 
==9622== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:126: PID= 9647: Error 22 (Invalid argument)
src/users.c:128: PID= 9647: Error 22 (Invalid argument)
src/users.c:130: PID= 9647: Error 22 (Invalid argument)
==9662== Invalid read of size 4
==9662==    at 0x10A020: main (users.c:389)
==9662==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9662== 
==9662== 
==9662== Process terminating with default action of signal 11 (SIGSEGV)
==9662==  Access not within mapped region at address 0x7
==9662==    at 0x10A020: main (users.c:389)
==9662==  If you believe this happened as a result of a stack
==9662==  overflow in your program's main thread (unlikely but
==9662==  possible), you can try to increase the size of the
==9662==  main thread stack using the --main-stacksize= flag.
==9662==  The main thread stack size used in this run was 8388608.
==9647== Invalid read of size 4
==9647==    at 0x10A020: main (users.c:389)
==9647==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9647== 
==9647== 
==9647== Process terminating with default action of signal 11 (SIGSEGV)
==9647==  Access not within mapped region at address 0x7
==9647==    at 0x10A020: main (users.c:389)
==9647==  If you believe this happened as a result of a stack
==9647==  overflow in your program's main thread (unlikely but
==9647==  possible), you can try to increase the size of the
==9647==  main thread stack using the --main-stacksize= flag.
==9647==  The main thread stack size used in this run was 8388608.
==9647== 
==9647== HEAP SUMMARY:
==9647==     in use at exit: 0 bytes in 0 blocks
==9647==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9647== 
==9647== All heap blocks were freed -- no leaks are possible
==9647== 
==9647== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9647== 
==9647== 1 errors in context 1 of 1:
==9647== Invalid read of size 4
==9647==    at 0x10A020: main (users.c:389)
==9647==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9647== 
==9647== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9662== 
==9662== HEAP SUMMARY:
==9662==     in use at exit: 0 bytes in 0 blocks
==9662==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9662== 
==9662== All heap blocks were freed -- no leaks are possible
==9662== 
==9662== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9662== 
==9662== 1 errors in context 1 of 1:
==9662== Invalid read of size 4
==9662==    at 0x10A020: main (users.c:389)
==9662==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9662== 
==9662== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9621: Error 22 (Invalid argument)
src/users.c:126: PID= 9621: Error 22 (Invalid argument)
src/users.c:128: PID= 9621: Error 22 (Invalid argument)
src/users.c:130: PID= 9621: Error 22 (Invalid argument)
src/users.c:124: PID= 9617: Error 22 (Invalid argument)
==9621== Invalid read of size 4
==9621==    at 0x10A020: main (users.c:389)
==9621==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9621== 
==9621== 
==9621== Process terminating with default action of signal 11 (SIGSEGV)
==9621==  Access not within mapped region at address 0x7
==9621==    at 0x10A020: main (users.c:389)
==9621==  If you believe this happened as a result of a stack
==9621==  overflow in your program's main thread (unlikely but
==9621==  possible), you can try to increase the size of the
==9621==  main thread stack using the --main-stacksize= flag.
==9621==  The main thread stack size used in this run was 8388608.
src/users.c:126: PID= 9617: Error 22 (Invalid argument)
src/users.c:128: PID= 9617: Error 22 (Invalid argument)
src/users.c:130: PID= 9617: Error 22 (Invalid argument)
==9617== Invalid read of size 4
==9617==    at 0x10A020: main (users.c:389)
==9617==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9617== 
==9617== 
==9617== Process terminating with default action of signal 11 (SIGSEGV)
==9617==  Access not within mapped region at address 0x7
==9617==    at 0x10A020: main (users.c:389)
==9617==  If you believe this happened as a result of a stack
==9617==  overflow in your program's main thread (unlikely but
==9617==  possible), you can try to increase the size of the
==9617==  main thread stack using the --main-stacksize= flag.
==9617==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9634: Error 22 (Invalid argument)
src/users.c:124: PID= 9668: Error 22 (Invalid argument)
src/users.c:126: PID= 9668: Error 22 (Invalid argument)
src/users.c:128: PID= 9668: Error 22 (Invalid argument)
src/users.c:130: PID= 9668: Error 22 (Invalid argument)
==9621== 
==9621== HEAP SUMMARY:
==9621==     in use at exit: 0 bytes in 0 blocks
==9621==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9621== 
==9621== All heap blocks were freed -- no leaks are possible
==9621== 
==9621== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9621== 
==9621== 1 errors in context 1 of 1:
==9621== Invalid read of size 4
==9621==    at 0x10A020: main (users.c:389)
==9621==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9621== 
==9621== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9632: Error 22 (Invalid argument)
src/users.c:126: PID= 9634: Error 22 (Invalid argument)
src/users.c:128: PID= 9634: Error 22 (Invalid argument)
src/users.c:130: PID= 9634: Error 22 (Invalid argument)
src/users.c:126: PID= 9632: Error 22 (Invalid argument)
src/users.c:128: PID= 9632: Error 22 (Invalid argument)
src/users.c:130: PID= 9632: Error 22 (Invalid argument)
==9632== Invalid read of size 4
==9632==    at 0x10A020: main (users.c:389)
==9632==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9632== 
==9632== 
==9632== Process terminating with default action of signal 11 (SIGSEGV)
==9632==  Access not within mapped region at address 0x7
==9632==    at 0x10A020: main (users.c:389)
==9632==  If you believe this happened as a result of a stack
==9632==  overflow in your program's main thread (unlikely but
==9632==  possible), you can try to increase the size of the
==9632==  main thread stack using the --main-stacksize= flag.
==9632==  The main thread stack size used in this run was 8388608.
==9617== 
==9617== HEAP SUMMARY:
==9617==     in use at exit: 0 bytes in 0 blocks
==9617==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9617== 
==9617== All heap blocks were freed -- no leaks are possible
==9617== 
==9617== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9617== 
==9617== 1 errors in context 1 of 1:
==9617== Invalid read of size 4
==9617==    at 0x10A020: main (users.c:389)
==9617==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9617== 
==9617== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9634== Invalid read of size 4
==9634==    at 0x10A020: main (users.c:389)
==9634==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9634== 
==9634== 
==9634== Process terminating with default action of signal 11 (SIGSEGV)
==9634==  Access not within mapped region at address 0x7
==9634==    at 0x10A020: main (users.c:389)
==9634==  If you believe this happened as a result of a stack
==9634==  overflow in your program's main thread (unlikely but
==9634==  possible), you can try to increase the size of the
==9634==  main thread stack using the --main-stacksize= flag.
==9634==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9644: Error 22 (Invalid argument)
src/users.c:124: PID= 9665: Error 22 (Invalid argument)
src/users.c:126: PID= 9644: Error 22 (Invalid argument)
src/users.c:128: PID= 9644: Error 22 (Invalid argument)
src/users.c:130: PID= 9644: Error 22 (Invalid argument)
src/users.c:126: PID= 9665: Error 22 (Invalid argument)
src/users.c:128: PID= 9665: Error 22 (Invalid argument)
src/users.c:130: PID= 9665: Error 22 (Invalid argument)
==9644== Invalid read of size 4
==9644==    at 0x10A020: main (users.c:389)
==9644==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9644== 
==9644== 
==9644== Process terminating with default action of signal 11 (SIGSEGV)
==9644==  Access not within mapped region at address 0x7
==9644==    at 0x10A020: main (users.c:389)
==9644==  If you believe this happened as a result of a stack
==9644==  overflow in your program's main thread (unlikely but
==9644==  possible), you can try to increase the size of the
==9644==  main thread stack using the --main-stacksize= flag.
==9644==  The main thread stack size used in this run was 8388608.
==9665== Invalid read of size 4
==9665==    at 0x10A020: main (users.c:389)
==9665==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9665== 
==9665== 
==9665== Process terminating with default action of signal 11 (SIGSEGV)
==9665==  Access not within mapped region at address 0x7
==9665==    at 0x10A020: main (users.c:389)
==9665==  If you believe this happened as a result of a stack
==9665==  overflow in your program's main thread (unlikely but
==9665==  possible), you can try to increase the size of the
==9665==  main thread stack using the --main-stacksize= flag.
==9665==  The main thread stack size used in this run was 8388608.
==9668== Invalid read of size 4
==9668==    at 0x10A020: main (users.c:389)
==9668==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9668== 
==9668== 
==9668== Process terminating with default action of signal 11 (SIGSEGV)
==9668==  Access not within mapped region at address 0x7
==9668==    at 0x10A020: main (users.c:389)
==9668==  If you believe this happened as a result of a stack
==9668==  overflow in your program's main thread (unlikely but
==9668==  possible), you can try to increase the size of the
==9668==  main thread stack using the --main-stacksize= flag.
==9668==  The main thread stack size used in this run was 8388608.
==9632== 
==9632== HEAP SUMMARY:
==9632==     in use at exit: 0 bytes in 0 blocks
==9632==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9632== 
==9632== All heap blocks were freed -- no leaks are possible
==9632== 
==9632== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9632== 
==9632== 1 errors in context 1 of 1:
==9632== Invalid read of size 4
==9632==    at 0x10A020: main (users.c:389)
==9632==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9632== 
==9632== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9644== 
==9644== HEAP SUMMARY:
==9644==     in use at exit: 0 bytes in 0 blocks
==9644==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9644== 
==9644== All heap blocks were freed -- no leaks are possible
==9644== 
==9644== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9644== 
==9644== 1 errors in context 1 of 1:
==9644== Invalid read of size 4
==9644==    at 0x10A020: main (users.c:389)
==9644==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9644== 
==9644== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9665== 
==9665== HEAP SUMMARY:
==9665==     in use at exit: 0 bytes in 0 blocks
==9665==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9665== 
==9665== All heap blocks were freed -- no leaks are possible
==9665== 
==9665== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9665== 
==9665== 1 errors in context 1 of 1:
==9665== Invalid read of size 4
==9665==    at 0x10A020: main (users.c:389)
==9665==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9665== 
==9665== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9618: Error 22 (Invalid argument)
==9634== 
==9634== HEAP SUMMARY:
==9634==     in use at exit: 0 bytes in 0 blocks
==9634==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9634== 
==9634== All heap blocks were freed -- no leaks are possible
==9634== 
==9634== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9634== 
==9634== 1 errors in context 1 of 1:
==9634== Invalid read of size 4
==9634==    at 0x10A020: main (users.c:389)
==9634==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9634== 
==9634== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:126: PID= 9618: Error 22 (Invalid argument)
src/users.c:128: PID= 9618: Error 22 (Invalid argument)
==9668== 
==9668== HEAP SUMMARY:
==9668==     in use at exit: 0 bytes in 0 blocks
==9668==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9668== 
==9668== All heap blocks were freed -- no leaks are possible
==9668== 
==9668== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9668== 
==9668== 1 errors in context 1 of 1:
==9668== Invalid read of size 4
==9668==    at 0x10A020: main (users.c:389)
==9668==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9668== 
==9668== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:130: PID= 9618: Error 22 (Invalid argument)
==9618== Invalid read of size 4
==9618==    at 0x10A020: main (users.c:389)
==9618==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9618== 
==9618== 
==9618== Process terminating with default action of signal 11 (SIGSEGV)
==9618==  Access not within mapped region at address 0x7
==9618==    at 0x10A020: main (users.c:389)
==9618==  If you believe this happened as a result of a stack
==9618==  overflow in your program's main thread (unlikely but
==9618==  possible), you can try to increase the size of the
==9618==  main thread stack using the --main-stacksize= flag.
==9618==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9626: Error 22 (Invalid argument)
src/users.c:126: PID= 9626: Error 22 (Invalid argument)
src/users.c:128: PID= 9626: Error 22 (Invalid argument)
src/users.c:130: PID= 9626: Error 22 (Invalid argument)
src/users.c:124: PID= 9628: Error 22 (Invalid argument)
src/users.c:126: PID= 9628: Error 22 (Invalid argument)
src/users.c:128: PID= 9628: Error 22 (Invalid argument)
src/users.c:130: PID= 9628: Error 22 (Invalid argument)
==9618== 
==9618== HEAP SUMMARY:
==9618==     in use at exit: 0 bytes in 0 blocks
==9618==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9618== 
==9618== All heap blocks were freed -- no leaks are possible
==9618== 
==9618== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9618== 
==9618== 1 errors in context 1 of 1:
==9618== Invalid read of size 4
==9618==    at 0x10A020: main (users.c:389)
==9618==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9618== 
==9618== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9628== Invalid read of size 4
==9628==    at 0x10A020: main (users.c:389)
==9628==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9628== 
==9628== 
==9628== Process terminating with default action of signal 11 (SIGSEGV)
==9628==  Access not within mapped region at address 0x7
==9628==    at 0x10A020: main (users.c:389)
==9628==  If you believe this happened as a result of a stack
==9628==  overflow in your program's main thread (unlikely but
==9628==  possible), you can try to increase the size of the
==9628==  main thread stack using the --main-stacksize= flag.
==9628==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9640: Error 22 (Invalid argument)
src/users.c:126: PID= 9640: Error 22 (Invalid argument)
src/users.c:128: PID= 9640: Error 22 (Invalid argument)
src/users.c:130: PID= 9640: Error 22 (Invalid argument)
==9628== 
==9628== HEAP SUMMARY:
==9628==     in use at exit: 0 bytes in 0 blocks
==9628==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9628== 
==9628== All heap blocks were freed -- no leaks are possible
==9628== 
==9628== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9628== 
==9628== 1 errors in context 1 of 1:
==9628== Invalid read of size 4
==9628==    at 0x10A020: main (users.c:389)
==9628==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9628== 
==9628== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9640== Invalid read of size 4
==9640==    at 0x10A020: main (users.c:389)
==9640==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9640== 
==9640== 
==9640== Process terminating with default action of signal 11 (SIGSEGV)
==9640==  Access not within mapped region at address 0x7
==9640==    at 0x10A020: main (users.c:389)
==9640==  If you believe this happened as a result of a stack
==9640==  overflow in your program's main thread (unlikely but
==9640==  possible), you can try to increase the size of the
==9640==  main thread stack using the --main-stacksize= flag.
==9640==  The main thread stack size used in this run was 8388608.
==9640== 
==9640== HEAP SUMMARY:
==9640==     in use at exit: 0 bytes in 0 blocks
==9640==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9640== 
==9640== All heap blocks were freed -- no leaks are possible
==9640== 
==9640== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9640== 
==9640== 1 errors in context 1 of 1:
==9640== Invalid read of size 4
==9640==    at 0x10A020: main (users.c:389)
==9640==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9640== 
==9640== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9650: Error 22 (Invalid argument)
src/users.c:126: PID= 9650: Error 22 (Invalid argument)
src/users.c:128: PID= 9650: Error 22 (Invalid argument)
src/users.c:130: PID= 9650: Error 22 (Invalid argument)
==9650== Invalid read of size 4
==9650==    at 0x10A020: main (users.c:389)
==9650==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9650== 
==9650== 
==9650== Process terminating with default action of signal 11 (SIGSEGV)
==9650==  Access not within mapped region at address 0x7
==9650==    at 0x10A020: main (users.c:389)
==9650==  If you believe this happened as a result of a stack
==9650==  overflow in your program's main thread (unlikely but
==9650==  possible), you can try to increase the size of the
==9650==  main thread stack using the --main-stacksize= flag.
==9650==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9641: Error 22 (Invalid argument)
src/users.c:126: PID= 9641: Error 22 (Invalid argument)
src/users.c:128: PID= 9641: Error 22 (Invalid argument)
src/users.c:130: PID= 9641: Error 22 (Invalid argument)
==9650== 
==9650== HEAP SUMMARY:
==9650==     in use at exit: 0 bytes in 0 blocks
==9650==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9650== 
==9650== All heap blocks were freed -- no leaks are possible
==9650== 
==9650== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9650== 
==9650== 1 errors in context 1 of 1:
==9650== Invalid read of size 4
==9650==    at 0x10A020: main (users.c:389)
==9650==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9650== 
==9650== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9641== Invalid read of size 4
==9641==    at 0x10A020: main (users.c:389)
==9641==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9641== 
==9641== 
==9641== Process terminating with default action of signal 11 (SIGSEGV)
==9641==  Access not within mapped region at address 0x7
==9641==    at 0x10A020: main (users.c:389)
==9641==  If you believe this happened as a result of a stack
==9641==  overflow in your program's main thread (unlikely but
==9641==  possible), you can try to increase the size of the
==9641==  main thread stack using the --main-stacksize= flag.
==9641==  The main thread stack size used in this run was 8388608.
==9626== Invalid read of size 4
==9626==    at 0x10A020: main (users.c:389)
==9626==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9626== 
==9626== 
==9626== Process terminating with default action of signal 11 (SIGSEGV)
==9626==  Access not within mapped region at address 0x7
==9626==    at 0x10A020: main (users.c:389)
==9626==  If you believe this happened as a result of a stack
==9626==  overflow in your program's main thread (unlikely but
==9626==  possible), you can try to increase the size of the
==9626==  main thread stack using the --main-stacksize= flag.
==9626==  The main thread stack size used in this run was 8388608.
==9641== 
==9641== HEAP SUMMARY:
==9641==     in use at exit: 0 bytes in 0 blocks
==9641==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9641== 
==9641== All heap blocks were freed -- no leaks are possible
==9641== 
==9641== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9641== 
==9641== 1 errors in context 1 of 1:
==9641== Invalid read of size 4
==9641==    at 0x10A020: main (users.c:389)
==9641==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9641== 
==9641== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9626== 
==9626== HEAP SUMMARY:
==9626==     in use at exit: 0 bytes in 0 blocks
==9626==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9626== 
==9626== All heap blocks were freed -- no leaks are possible
==9626== 
==9626== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9626== 
==9626== 1 errors in context 1 of 1:
==9626== Invalid read of size 4
==9626==    at 0x10A020: main (users.c:389)
==9626==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9626== 
==9626== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9627: Error 22 (Invalid argument)
src/users.c:126: PID= 9627: Error 22 (Invalid argument)
src/users.c:128: PID= 9627: Error 22 (Invalid argument)
src/users.c:130: PID= 9627: Error 22 (Invalid argument)
==9627== Invalid read of size 4
==9627==    at 0x10A020: main (users.c:389)
==9627==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9627== 
==9627== 
==9627== Process terminating with default action of signal 11 (SIGSEGV)
==9627==  Access not within mapped region at address 0x7
==9627==    at 0x10A020: main (users.c:389)
==9627==  If you believe this happened as a result of a stack
==9627==  overflow in your program's main thread (unlikely but
==9627==  possible), you can try to increase the size of the
==9627==  main thread stack using the --main-stacksize= flag.
==9627==  The main thread stack size used in this run was 8388608.
==9627== 
==9627== HEAP SUMMARY:
==9627==     in use at exit: 0 bytes in 0 blocks
==9627==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9627== 
==9627== All heap blocks were freed -- no leaks are possible
==9627== 
==9627== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9627== 
==9627== 1 errors in context 1 of 1:
==9627== Invalid read of size 4
==9627==    at 0x10A020: main (users.c:389)
==9627==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9627== 
==9627== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9664: Error 22 (Invalid argument)
src/users.c:126: PID= 9664: Error 22 (Invalid argument)
src/users.c:128: PID= 9664: Error 22 (Invalid argument)
src/users.c:130: PID= 9664: Error 22 (Invalid argument)
==9664== Invalid read of size 4
==9664==    at 0x10A020: main (users.c:389)
==9664==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9664== 
==9664== 
==9664== Process terminating with default action of signal 11 (SIGSEGV)
==9664==  Access not within mapped region at address 0x7
==9664==    at 0x10A020: main (users.c:389)
==9664==  If you believe this happened as a result of a stack
==9664==  overflow in your program's main thread (unlikely but
==9664==  possible), you can try to increase the size of the
==9664==  main thread stack using the --main-stacksize= flag.
==9664==  The main thread stack size used in this run was 8388608.
==9664== 
==9664== HEAP SUMMARY:
==9664==     in use at exit: 0 bytes in 0 blocks
==9664==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9664== 
==9664== All heap blocks were freed -- no leaks are possible
==9664== 
==9664== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9664== 
==9664== 1 errors in context 1 of 1:
==9664== Invalid read of size 4
==9664==    at 0x10A020: main (users.c:389)
==9664==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9664== 
==9664== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9663: Error 22 (Invalid argument)
src/users.c:126: PID= 9663: Error 22 (Invalid argument)
src/users.c:128: PID= 9663: Error 22 (Invalid argument)
src/users.c:130: PID= 9663: Error 22 (Invalid argument)
==9663== Invalid read of size 4
==9663==    at 0x10A020: main (users.c:389)
==9663==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9663== 
==9663== 
==9663== Process terminating with default action of signal 11 (SIGSEGV)
==9663==  Access not within mapped region at address 0x7
==9663==    at 0x10A020: main (users.c:389)
==9663==  If you believe this happened as a result of a stack
==9663==  overflow in your program's main thread (unlikely but
==9663==  possible), you can try to increase the size of the
==9663==  main thread stack using the --main-stacksize= flag.
==9663==  The main thread stack size used in this run was 8388608.
==9663== 
==9663== HEAP SUMMARY:
==9663==     in use at exit: 0 bytes in 0 blocks
==9663==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9663== 
==9663== All heap blocks were freed -- no leaks are possible
==9663== 
==9663== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9663== 
==9663== 1 errors in context 1 of 1:
==9663== Invalid read of size 4
==9663==    at 0x10A020: main (users.c:389)
==9663==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9663== 
==9663== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9652: Error 22 (Invalid argument)
src/users.c:126: PID= 9652: Error 22 (Invalid argument)
src/users.c:128: PID= 9652: Error 22 (Invalid argument)
src/users.c:130: PID= 9652: Error 22 (Invalid argument)
src/users.c:124: PID= 9613: Error 22 (Invalid argument)
src/users.c:126: PID= 9613: Error 22 (Invalid argument)
src/users.c:128: PID= 9613: Error 22 (Invalid argument)
src/users.c:130: PID= 9613: Error 22 (Invalid argument)
==9652== Invalid read of size 4
==9652==    at 0x10A020: main (users.c:389)
==9652==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9652== 
==9652== 
==9652== Process terminating with default action of signal 11 (SIGSEGV)
==9652==  Access not within mapped region at address 0x7
==9652==    at 0x10A020: main (users.c:389)
==9652==  If you believe this happened as a result of a stack
==9652==  overflow in your program's main thread (unlikely but
==9652==  possible), you can try to increase the size of the
==9652==  main thread stack using the --main-stacksize= flag.
==9652==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9608: Error 22 (Invalid argument)
src/users.c:124: PID= 9603: Error 22 (Invalid argument)
src/users.c:126: PID= 9608: Error 22 (Invalid argument)
src/users.c:128: PID= 9608: Error 22 (Invalid argument)
src/users.c:130: PID= 9608: Error 22 (Invalid argument)
src/users.c:126: PID= 9603: Error 22 (Invalid argument)
==9652== 
==9652== HEAP SUMMARY:
==9652==     in use at exit: 0 bytes in 0 blocks
==9652==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9652== 
==9652== All heap blocks were freed -- no leaks are possible
==9652== 
==9652== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9652== 
==9652== 1 errors in context 1 of 1:
==9652== Invalid read of size 4
==9652==    at 0x10A020: main (users.c:389)
==9652==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9652== 
==9652== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:128: PID= 9603: Error 22 (Invalid argument)
src/users.c:130: PID= 9603: Error 22 (Invalid argument)
==9608== Invalid read of size 4
==9608==    at 0x10A020: main (users.c:389)
==9608==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9608== 
==9608== 
==9608== Process terminating with default action of signal 11 (SIGSEGV)
==9608==  Access not within mapped region at address 0x7
==9608==    at 0x10A020: main (users.c:389)
==9608==  If you believe this happened as a result of a stack
==9608==  overflow in your program's main thread (unlikely but
==9608==  possible), you can try to increase the size of the
==9608==  main thread stack using the --main-stacksize= flag.
==9608==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9669: Error 22 (Invalid argument)
src/users.c:126: PID= 9669: Error 22 (Invalid argument)
src/users.c:128: PID= 9669: Error 22 (Invalid argument)
src/users.c:130: PID= 9669: Error 22 (Invalid argument)
==9603== Invalid read of size 4
==9603==    at 0x10A020: main (users.c:389)
==9603==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9603== 
==9603== 
==9603== Process terminating with default action of signal 11 (SIGSEGV)
==9603==  Access not within mapped region at address 0x7
==9603==    at 0x10A020: main (users.c:389)
==9603==  If you believe this happened as a result of a stack
==9603==  overflow in your program's main thread (unlikely but
==9603==  possible), you can try to increase the size of the
==9603==  main thread stack using the --main-stacksize= flag.
==9603==  The main thread stack size used in this run was 8388608.
==9608== 
==9608== HEAP SUMMARY:
==9608==     in use at exit: 0 bytes in 0 blocks
==9608==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9608== 
==9608== All heap blocks were freed -- no leaks are possible
==9608== 
==9608== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9608== 
==9608== 1 errors in context 1 of 1:
==9608== Invalid read of size 4
==9608==    at 0x10A020: main (users.c:389)
==9608==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9608== 
==9608== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9603== 
==9603== HEAP SUMMARY:
==9603==     in use at exit: 0 bytes in 0 blocks
==9603==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9603== 
==9603== All heap blocks were freed -- no leaks are possible
==9603== 
==9603== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9603== 
==9603== 1 errors in context 1 of 1:
==9603== Invalid read of size 4
==9603==    at 0x10A020: main (users.c:389)
==9603==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9603== 
==9603== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9613== Invalid read of size 4
==9613==    at 0x10A020: main (users.c:389)
==9613==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9613== 
==9613== 
==9613== Process terminating with default action of signal 11 (SIGSEGV)
==9613==  Access not within mapped region at address 0x7
==9613==    at 0x10A020: main (users.c:389)
==9613==  If you believe this happened as a result of a stack
==9613==  overflow in your program's main thread (unlikely but
==9613==  possible), you can try to increase the size of the
==9613==  main thread stack using the --main-stacksize= flag.
==9613==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9654: Error 22 (Invalid argument)
src/users.c:124: PID= 9614: Error 22 (Invalid argument)
src/users.c:126: PID= 9654: Error 22 (Invalid argument)
src/users.c:128: PID= 9654: Error 22 (Invalid argument)
src/users.c:130: PID= 9654: Error 22 (Invalid argument)
src/users.c:126: PID= 9614: Error 22 (Invalid argument)
src/users.c:128: PID= 9614: Error 22 (Invalid argument)
src/users.c:130: PID= 9614: Error 22 (Invalid argument)
==9613== 
==9613== HEAP SUMMARY:
==9613==     in use at exit: 0 bytes in 0 blocks
==9613==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9613== 
==9613== All heap blocks were freed -- no leaks are possible
==9613== 
==9613== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9613== 
==9613== 1 errors in context 1 of 1:
==9613== Invalid read of size 4
==9613==    at 0x10A020: main (users.c:389)
==9613==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9613== 
==9613== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9654== Invalid read of size 4
==9654==    at 0x10A020: main (users.c:389)
==9654==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9654== 
==9654== 
==9654== Process terminating with default action of signal 11 (SIGSEGV)
==9654==  Access not within mapped region at address 0x7
==9654==    at 0x10A020: main (users.c:389)
==9654==  If you believe this happened as a result of a stack
==9654==  overflow in your program's main thread (unlikely but
==9654==  possible), you can try to increase the size of the
==9654==  main thread stack using the --main-stacksize= flag.
==9654==  The main thread stack size used in this run was 8388608.
==9669== Invalid read of size 4
==9669==    at 0x10A020: main (users.c:389)
==9669==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9669== 
==9669== 
==9669== Process terminating with default action of signal 11 (SIGSEGV)
==9669==  Access not within mapped region at address 0x7
==9669==    at 0x10A020: main (users.c:389)
==9669==  If you believe this happened as a result of a stack
==9669==  overflow in your program's main thread (unlikely but
==9669==  possible), you can try to increase the size of the
==9669==  main thread stack using the --main-stacksize= flag.
==9669==  The main thread stack size used in this run was 8388608.
==9669== 
==9669== HEAP SUMMARY:
==9669==     in use at exit: 0 bytes in 0 blocks
==9669==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9669== 
==9669== All heap blocks were freed -- no leaks are possible
==9669== 
==9669== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9669== 
==9669== 1 errors in context 1 of 1:
==9669== Invalid read of size 4
==9669==    at 0x10A020: main (users.c:389)
==9669==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9669== 
==9669== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9614== Invalid read of size 4
==9614==    at 0x10A020: main (users.c:389)
==9614==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9614== 
==9614== 
==9614== Process terminating with default action of signal 11 (SIGSEGV)
==9614==  Access not within mapped region at address 0x7
==9614==    at 0x10A020: main (users.c:389)
==9614==  If you believe this happened as a result of a stack
==9614==  overflow in your program's main thread (unlikely but
==9614==  possible), you can try to increase the size of the
==9614==  main thread stack using the --main-stacksize= flag.
==9614==  The main thread stack size used in this run was 8388608.
==9654== 
==9654== HEAP SUMMARY:
==9654==     in use at exit: 0 bytes in 0 blocks
==9654==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9654== 
==9654== All heap blocks were freed -- no leaks are possible
==9654== 
==9654== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9654== 
==9654== 1 errors in context 1 of 1:
==9654== Invalid read of size 4
==9654==    at 0x10A020: main (users.c:389)
==9654==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9654== 
==9654== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9624: Error 22 (Invalid argument)
src/users.c:124: PID= 9659: Error 22 (Invalid argument)
src/users.c:126: PID= 9624: Error 22 (Invalid argument)
src/users.c:128: PID= 9624: Error 22 (Invalid argument)
src/users.c:130: PID= 9624: Error 22 (Invalid argument)
src/users.c:126: PID= 9659: Error 22 (Invalid argument)
src/users.c:128: PID= 9659: Error 22 (Invalid argument)
src/users.c:130: PID= 9659: Error 22 (Invalid argument)
==9624== Invalid read of size 4
==9624==    at 0x10A020: main (users.c:389)
==9624==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9624== 
==9624== 
==9624== Process terminating with default action of signal 11 (SIGSEGV)
==9624==  Access not within mapped region at address 0x7
==9624==    at 0x10A020: main (users.c:389)
==9624==  If you believe this happened as a result of a stack
==9624==  overflow in your program's main thread (unlikely but
==9624==  possible), you can try to increase the size of the
==9624==  main thread stack using the --main-stacksize= flag.
==9624==  The main thread stack size used in this run was 8388608.
==9659== Invalid read of size 4
==9659==    at 0x10A020: main (users.c:389)
==9659==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9659== 
==9659== 
==9659== Process terminating with default action of signal 11 (SIGSEGV)
==9659==  Access not within mapped region at address 0x7
==9659==    at 0x10A020: main (users.c:389)
==9659==  If you believe this happened as a result of a stack
==9659==  overflow in your program's main thread (unlikely but
==9659==  possible), you can try to increase the size of the
==9659==  main thread stack using the --main-stacksize= flag.
==9659==  The main thread stack size used in this run was 8388608.
==9614== 
==9614== HEAP SUMMARY:
==9614==     in use at exit: 0 bytes in 0 blocks
==9614==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9614== 
==9614== All heap blocks were freed -- no leaks are possible
==9614== 
==9614== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9614== 
==9614== 1 errors in context 1 of 1:
==9614== Invalid read of size 4
==9614==    at 0x10A020: main (users.c:389)
==9614==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9614== 
==9614== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9624== 
==9624== HEAP SUMMARY:
==9624==     in use at exit: 0 bytes in 0 blocks
==9624==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9624== 
==9624== All heap blocks were freed -- no leaks are possible
==9624== 
==9624== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9624== 
==9624== 1 errors in context 1 of 1:
==9624== Invalid read of size 4
==9624==    at 0x10A020: main (users.c:389)
==9624==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9624== 
==9624== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9659== 
==9659== HEAP SUMMARY:
==9659==     in use at exit: 0 bytes in 0 blocks
==9659==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9659== 
==9659== All heap blocks were freed -- no leaks are possible
==9659== 
==9659== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9659== 
==9659== 1 errors in context 1 of 1:
==9659== Invalid read of size 4
==9659==    at 0x10A020: main (users.c:389)
==9659==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9659== 
==9659== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
src/users.c:124: PID= 9653: Error 22 (Invalid argument)
src/users.c:126: PID= 9653: Error 22 (Invalid argument)
src/users.c:128: PID= 9653: Error 22 (Invalid argument)
src/users.c:130: PID= 9653: Error 22 (Invalid argument)
==9653== Invalid read of size 4
==9653==    at 0x10A020: main (users.c:389)
==9653==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9653== 
==9653== 
==9653== Process terminating with default action of signal 11 (SIGSEGV)
==9653==  Access not within mapped region at address 0x7
==9653==    at 0x10A020: main (users.c:389)
==9653==  If you believe this happened as a result of a stack
==9653==  overflow in your program's main thread (unlikely but
==9653==  possible), you can try to increase the size of the
==9653==  main thread stack using the --main-stacksize= flag.
==9653==  The main thread stack size used in this run was 8388608.
src/users.c:124: PID= 9636: Error 22 (Invalid argument)
src/users.c:126: PID= 9636: Error 22 (Invalid argument)
src/users.c:128: PID= 9636: Error 22 (Invalid argument)
src/users.c:130: PID= 9636: Error 22 (Invalid argument)
==9653== 
==9653== HEAP SUMMARY:
==9653==     in use at exit: 0 bytes in 0 blocks
==9653==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9653== 
==9653== All heap blocks were freed -- no leaks are possible
==9653== 
==9653== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9653== 
==9653== 1 errors in context 1 of 1:
==9653== Invalid read of size 4
==9653==    at 0x10A020: main (users.c:389)
==9653==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9653== 
==9653== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9636== Invalid read of size 4
==9636==    at 0x10A020: main (users.c:389)
==9636==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9636== 
==9636== 
==9636== Process terminating with default action of signal 11 (SIGSEGV)
==9636==  Access not within mapped region at address 0x7
==9636==    at 0x10A020: main (users.c:389)
==9636==  If you believe this happened as a result of a stack
==9636==  overflow in your program's main thread (unlikely but
==9636==  possible), you can try to increase the size of the
==9636==  main thread stack using the --main-stacksize= flag.
==9636==  The main thread stack size used in this run was 8388608.
==9636== 
==9636== HEAP SUMMARY:
==9636==     in use at exit: 0 bytes in 0 blocks
==9636==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==9636== 
==9636== All heap blocks were freed -- no leaks are possible
==9636== 
==9636== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
==9636== 
==9636== 1 errors in context 1 of 1:
==9636== Invalid read of size 4
==9636==    at 0x10A020: main (users.c:389)
==9636==  Address 0x7 is not stack'd, malloc'd or (recently) free'd
==9636== 
==9636== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
