.TH "src/include/common.h" 3 "Thu Jan 13 2022" "Simulazione Transazioni" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/include/common.h
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <stddef\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <sys/ipc\&.h>\fP
.br
\fC#include <sys/shm\&.h>\fP
.br
\fC#include <sys/sem\&.h>\fP
.br
\fC#include <sys/msg\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include '\&.\&./utils/debug\&.h'\fP
.br
\fC#include '\&.\&./utils/sem\&.h'\fP
.br
\fC#include '\&.\&./utils/lists\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBparameters\fP"
.br
.ti -1c
.RI "struct \fBuser_t\fP"
.br
.ti -1c
.RI "struct \fBnode_t\fP"
.br
.ti -1c
.RI "struct \fBtransaction_t\fP"
.br
.ti -1c
.RI "struct \fBmessage\fP"
.br
.ti -1c
.RI "struct \fBblock_t\fP"
.br
.ti -1c
.RI "struct \fBledger_t\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBNULL\fP   0 /* thre's a problem with NULL for some reason */"
.br
.ti -1c
.RI "#define \fB_GNU_SOURCE\fP"
.br
.ti -1c
.RI "#define \fBARRAY_SIZE\fP(x)   (sizeof(x) / sizeof((x)[0]))"
.br
.ti -1c
.RI "#define \fBRAND\fP(min,  max)   ((rand() % (max \- min + 1)) + min)"
.br
.ti -1c
.RI "#define \fBIPC_ERROR\fP   \-1"
.br
.ti -1c
.RI "#define \fBSHM_PARAMETERS\fP   1337"
.br
.ti -1c
.RI "#define \fBSHM_USERS_ARRAY\fP   1338"
.br
.ti -1c
.RI "#define \fBSHM_NODES_ARRAY\fP   1339"
.br
.ti -1c
.RI "#define \fBSHM_LEDGER\fP   1340"
.br
.ti -1c
.RI "#define \fBSEM_MASTER\fP   420"
.br
.ti -1c
.RI "#define \fBM_QUEUE_KEY\fP   0x5AD"
.br
.ti -1c
.RI "#define \fBSO_BLOCK_SIZE\fP   100     /* number of \fBtransaction\fP per \fBblock\fP*/"
.br
.ti -1c
.RI "#define \fBSO_REGISTRY_SIZE\fP   1000 /* max length of consecutive blocks */"
.br
.ti -1c
.RI "#define \fBSELF\fP   \-1"
.br
.ti -1c
.RI "#define \fBEVERYONE_BROKE\fP   '$'"
.br
.ti -1c
.RI "#define \fBUSERS_PID_ARGV\fP   (atoi(argv[1]))"
.br
.ti -1c
.RI "#define \fBNODES_PID_ARGV\fP   (atoi(argv[2]))"
.br
.ti -1c
.RI "#define \fBPARAMETERS_ARGV\fP   (atoi(argv[3]))"
.br
.ti -1c
.RI "#define \fBLEDGER_ARGV\fP   (atoi(argv[4]))"
.br
.ti -1c
.RI "#define \fBSEM_ID_ARGV\fP   (atoi(argv[5]))"
.br
.ti -1c
.RI "#define \fBWENT_BROKE\fP   1"
.br
.ti -1c
.RI "#define \fBMAX_RETRY\fP   2"
.br
.ti -1c
.RI "#define \fBERROR\fP   \-1"
.br
.ti -1c
.RI "#define \fBSUCCESS\fP   0"
.br
.ti -1c
.RI "#define \fBTEST_ERROR\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBuser_t\fP \fBuser\fP"
.br
.ti -1c
.RI "typedef struct \fBnode_t\fP \fBnode\fP"
.br
.ti -1c
.RI "typedef struct \fBtransaction_t\fP \fBtransaction\fP"
.br
.ti -1c
.RI "typedef struct \fBblock_t\fP \fBblock\fP"
.br
.ti -1c
.RI "typedef struct \fBledger_t\fP \fBledger\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBledger\fP * \fBledger_init\fP ()"
.br
.ti -1c
.RI "\fBblock\fP * \fBnew_block\fP ()"
.br
.ti -1c
.RI "void \fBadd_block\fP (\fBblock\fP)"
.br
.ti -1c
.RI "void \fBadd_transaction_to_block\fP (\fBblock\fP *, \fBtransaction\fP *, int index)"
.br
.ti -1c
.RI "void \fBadd_block_to_ledger\fP (\fBblock\fP *)"
.br
.ti -1c
.RI "void \fBfind_transaction\fP (struct timespec timestamp, pid_t sender, pid_t receiver)"
.br
.ti -1c
.RI "void \fBsearch_timestamp\fP ()"
.br
.ti -1c
.RI "void \fBsearch_sender\fP ()"
.br
.ti -1c
.RI "void \fBsearch_receiver\fP ()"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBerrno\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define _GNU_SOURCE"

.PP
Definition at line \fB28\fP of file \fBcommon\&.h\fP\&.
.SS "#define ARRAY_SIZE(x)   (sizeof(x) / sizeof((x)[0]))"

.PP
Definition at line \fB31\fP of file \fBcommon\&.h\fP\&.
.SS "#define ERROR   \-1"

.PP
Definition at line \fB58\fP of file \fBcommon\&.h\fP\&.
.SS "#define EVERYONE_BROKE   '$'"

.PP
Definition at line \fB46\fP of file \fBcommon\&.h\fP\&.
.SS "#define IPC_ERROR   \-1"

.PP
Definition at line \fB35\fP of file \fBcommon\&.h\fP\&.
.SS "#define LEDGER_ARGV   (atoi(argv[4]))"

.PP
Definition at line \fB52\fP of file \fBcommon\&.h\fP\&.
.SS "#define M_QUEUE_KEY   0x5AD"

.PP
Definition at line \fB41\fP of file \fBcommon\&.h\fP\&.
.SS "#define MAX_RETRY   2"

.PP
Definition at line \fB57\fP of file \fBcommon\&.h\fP\&.
.SS "#define NODES_PID_ARGV   (atoi(argv[2]))"

.PP
Definition at line \fB50\fP of file \fBcommon\&.h\fP\&.
.SS "#define NULL   0 /* thre's a problem with NULL for some reason */"

.PP
Definition at line \fB24\fP of file \fBcommon\&.h\fP\&.
.SS "#define PARAMETERS_ARGV   (atoi(argv[3]))"

.PP
Definition at line \fB51\fP of file \fBcommon\&.h\fP\&.
.SS "#define RAND(min, max)   ((rand() % (max \- min + 1)) + min)"

.PP
Definition at line \fB32\fP of file \fBcommon\&.h\fP\&.
.SS "#define SELF   \-1"

.PP
Definition at line \fB45\fP of file \fBcommon\&.h\fP\&.
.SS "#define SEM_ID_ARGV   (atoi(argv[5]))"

.PP
Definition at line \fB53\fP of file \fBcommon\&.h\fP\&.
.SS "#define SEM_MASTER   420"

.PP
Definition at line \fB40\fP of file \fBcommon\&.h\fP\&.
.SS "#define SHM_LEDGER   1340"

.PP
Definition at line \fB39\fP of file \fBcommon\&.h\fP\&.
.SS "#define SHM_NODES_ARRAY   1339"

.PP
Definition at line \fB38\fP of file \fBcommon\&.h\fP\&.
.SS "#define SHM_PARAMETERS   1337"

.PP
Definition at line \fB36\fP of file \fBcommon\&.h\fP\&.
.SS "#define SHM_USERS_ARRAY   1338"

.PP
Definition at line \fB37\fP of file \fBcommon\&.h\fP\&.
.SS "#define SO_BLOCK_SIZE   100     /* number of \fBtransaction\fP per \fBblock\fP*/"

.PP
Definition at line \fB43\fP of file \fBcommon\&.h\fP\&.
.SS "#define SO_REGISTRY_SIZE   1000 /* max length of consecutive blocks */"

.PP
Definition at line \fB44\fP of file \fBcommon\&.h\fP\&.
.SS "#define SUCCESS   0"

.PP
Definition at line \fB59\fP of file \fBcommon\&.h\fP\&.
.SS "#define TEST_ERROR"
\fBValue:\fP
.PP
.nf
    if (errno)                                     \
    {                                              \
        fprintf(stderr,                            \
                "%s:%d: PID=%5d: Error %d (%s)\n", \
                __FILE__,                          \
                __LINE__,                          \
                getpid(),                          \
                errno,                             \
                strerror(errno));                  \
    }
.fi
.PP
Definition at line \fB64\fP of file \fBcommon\&.h\fP\&.
.SS "#define USERS_PID_ARGV   (atoi(argv[1]))"

.PP
Definition at line \fB49\fP of file \fBcommon\&.h\fP\&.
.SS "#define WENT_BROKE   1"

.PP
Definition at line \fB56\fP of file \fBcommon\&.h\fP\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBblock_t\fP \fBblock\fP"

.SS "typedef struct \fBledger_t\fP \fBledger\fP"

.SS "typedef struct \fBnode_t\fP \fBnode\fP"

.SS "typedef struct \fBtransaction_t\fP \fBtransaction\fP"

.SS "typedef struct \fBuser_t\fP \fBuser\fP"

.SH "Function Documentation"
.PP 
.SS "void add_block (\fBblock\fP)"

.SS "void add_block_to_ledger (\fBblock\fP *)"

.SS "void add_transaction_to_block (\fBblock\fP * block, \fBtransaction\fP * newTrans, int index)"

.PP
Definition at line \fB46\fP of file \fBcommon\&.c\fP\&.
.SS "void find_transaction (struct timespec timestamp, pid_t sender, pid_t receiver)"

.SS "\fBledger\fP * ledger_init ()"

.PP
Definition at line \fB3\fP of file \fBcommon\&.c\fP\&.
.SS "\fBblock\fP * new_block ()"

.PP
Definition at line \fB24\fP of file \fBcommon\&.c\fP\&.
.SS "void search_receiver ()"

.SS "void search_sender ()"

.SS "void search_timestamp ()"

.SH "Variable Documentation"
.PP 
.SS "int errno\fC [extern]\fP"

.PP
Definition at line \fB17\fP of file \fBsem\&.c\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Simulazione Transazioni from the source code\&.
