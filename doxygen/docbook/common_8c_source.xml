<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_common_8c_source" xml:lang="en-US">
<title>common.c</title>
<indexterm><primary>src/common.c</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_common_8c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_common_8h">include/common.h</link>&quot;</emphasis>
<anchor xml:id="_common_8c_source_1l00002"/>00002 
<anchor xml:id="_common_8c_source_1l00003"/><link linkend="_common_8c_1a92d436f484409e36c57caaa0b45ae9da">00003</link> <link linkend="_structledger__t">ledger</link>&#32;*<link linkend="_common_8c_1a92d436f484409e36c57caaa0b45ae9da">ledger_init</link>()
<anchor xml:id="_common_8c_source_1l00004"/>00004 {
<anchor xml:id="_common_8c_source_1l00005"/>00005 &#32;&#32;&#32;&#32;<link linkend="_structledger__t">ledger</link>&#32;*newLedger;
<anchor xml:id="_common_8c_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;shmID;&#32;<emphasis role="comment">/*&#32;ID&#32;of&#32;&quot;ledger&quot;&#32;shared&#32;memory&#32;segment&#32;*/</emphasis>
<anchor xml:id="_common_8c_source_1l00007"/>00007 
<anchor xml:id="_common_8c_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;--&#32;LEDGER&#32;INITIALIZATION&#32;--</emphasis>
<anchor xml:id="_common_8c_source_1l00009"/>00009 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;save&#32;the&#32;ID&#32;of&#32;our&#32;new&#32;(IPC_PRIVATE)&#32;shared&#32;memory&#32;segment&#32;of&#32;size&#32;-ledger-</emphasis>
<anchor xml:id="_common_8c_source_1l00010"/>00010 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;smctl&#32;will&#32;deallocate&#32;the&#32;shared&#32;memory&#32;segment&#32;only&#32;when&#32;every&#32;process&#32;detaches&#32;it</emphasis>
<anchor xml:id="_common_8c_source_1l00011"/>00011 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*&#32;tells&#32;OS&#32;that&#32;ledger&#32;of&#32;type&#32;ledger&#32;is&#32;our&#32;shared&#32;memory&#32;of&#32;shmID</emphasis>
<anchor xml:id="_common_8c_source_1l00012"/>00012 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="_common_8c_source_1l00013"/>00013 &#32;&#32;&#32;&#32;shmID&#32;=&#32;shmget(IPC_PRIVATE,&#32;<emphasis role="keyword">sizeof</emphasis>(newLedger),&#32;0600);
<anchor xml:id="_common_8c_source_1l00014"/>00014 &#32;&#32;&#32;&#32;shmctl(shmID,&#32;IPC_RMID,&#32;<link linkend="_common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>);
<anchor xml:id="_common_8c_source_1l00015"/>00015 
<anchor xml:id="_common_8c_source_1l00016"/>00016 &#32;&#32;&#32;&#32;newLedger-&gt;<link linkend="_structledger__t_1ae8b38edd17a3a5769aea3c05f4e2b432">head</link>&#32;=&#32;<link linkend="_common_8c_1ab670b223f506d8bc9ee5286f6e37b1cd">new_block</link>();
<anchor xml:id="_common_8c_source_1l00017"/>00017 &#32;&#32;&#32;&#32;newLedger-&gt;<link linkend="_structledger__t_1a3687d896ad2d77106df256f1db753c18">registryCurrSize</link>&#32;=&#32;1;
<anchor xml:id="_common_8c_source_1l00018"/>00018 
<anchor xml:id="_common_8c_source_1l00019"/>00019 &#32;&#32;&#32;&#32;newLedger&#32;=&#32;(<link linkend="_structledger__t">ledger</link>&#32;*)shmat(shmID,&#32;<link linkend="_common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>,&#32;0);
<anchor xml:id="_common_8c_source_1l00020"/>00020 
<anchor xml:id="_common_8c_source_1l00021"/>00021 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newLedger;
<anchor xml:id="_common_8c_source_1l00022"/>00022 }
<anchor xml:id="_common_8c_source_1l00023"/>00023 
<anchor xml:id="_common_8c_source_1l00024"/><link linkend="_common_8c_1ab670b223f506d8bc9ee5286f6e37b1cd">00024</link> <link linkend="_structblock__t">block</link>&#32;*<link linkend="_common_8c_1ab670b223f506d8bc9ee5286f6e37b1cd">new_block</link>()
<anchor xml:id="_common_8c_source_1l00025"/>00025 {
<anchor xml:id="_common_8c_source_1l00026"/>00026 &#32;&#32;&#32;&#32;<link linkend="_structblock__t">block</link>&#32;*newBlock&#32;=&#32;malloc(<emphasis role="keyword">sizeof</emphasis>(<link linkend="_structblock__t">block</link>));
<anchor xml:id="_common_8c_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<link linkend="_structtransaction__t">transaction</link>&#32;reward;
<anchor xml:id="_common_8c_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis>timespec&#32;timestamp;
<anchor xml:id="_common_8c_source_1l00029"/>00029 
<anchor xml:id="_common_8c_source_1l00030"/>00030 &#32;&#32;&#32;&#32;<emphasis role="comment">/*&#32;memset(newBlock-&gt;transList,&#32;0,&#32;SO_BLOCK_SIZE);&#32;*/</emphasis>
<anchor xml:id="_common_8c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;clock_gettime(CLOCK_REALTIME,&#32;&amp;timestamp);
<anchor xml:id="_common_8c_source_1l00032"/>00032 
<anchor xml:id="_common_8c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;reward.<link linkend="_structtransaction__t_1a2aace03835c4d951b3dee117b328ef87">timestamp</link>&#32;=&#32;timestamp;
<anchor xml:id="_common_8c_source_1l00034"/>00034 &#32;&#32;&#32;&#32;reward.<link linkend="_structtransaction__t_1a36060e3785ebad7b278cb01d5159c0c5">sender</link>&#32;=&#32;<link linkend="_common_8h_1a6233123742aa307f2a5ce737acca67f0">SELF</link>;
<anchor xml:id="_common_8c_source_1l00035"/>00035 &#32;&#32;&#32;&#32;reward.<link linkend="_structtransaction__t_1a3c01e8bf1e61ee67a25113f3db1a32b8">receiver</link>&#32;=&#32;getpid();
<anchor xml:id="_common_8c_source_1l00036"/>00036 &#32;&#32;&#32;&#32;reward.<link linkend="_structtransaction__t_1a14236de313193a14b4dbdf442bcf2bb9">amount</link>&#32;=&#32;0;
<anchor xml:id="_common_8c_source_1l00037"/>00037 &#32;&#32;&#32;&#32;reward.<link linkend="_structtransaction__t_1af571e76d8e59b8452f38407799272e4a">reward</link>&#32;=&#32;0;
<anchor xml:id="_common_8c_source_1l00038"/>00038 
<anchor xml:id="_common_8c_source_1l00039"/>00039 &#32;&#32;&#32;&#32;newBlock-&gt;<link linkend="_structblock__t_1a75735b68381e6c25555bb53c163abfe9">transList</link>[0]&#32;=&#32;reward;
<anchor xml:id="_common_8c_source_1l00040"/>00040 &#32;&#32;&#32;&#32;newBlock-&gt;<link linkend="_structblock__t_1aa72742d9d7c1c8631aa36c0077f13b1d">blockIndex</link>&#32;=&#32;0;
<anchor xml:id="_common_8c_source_1l00041"/>00041 &#32;&#32;&#32;&#32;newBlock-&gt;<link linkend="_structblock__t_1a063b51ee50d55219236d2e4db6ce97a8">next</link>&#32;=&#32;<link linkend="_common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4">NULL</link>;
<anchor xml:id="_common_8c_source_1l00042"/>00042 
<anchor xml:id="_common_8c_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newBlock;
<anchor xml:id="_common_8c_source_1l00044"/>00044 }
<anchor xml:id="_common_8c_source_1l00045"/>00045 
<anchor xml:id="_common_8c_source_1l00046"/><link linkend="_common_8c_1a870e971fe7155d42f50beaa446dfd874">00046</link> <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_common_8c_1a870e971fe7155d42f50beaa446dfd874">add_transaction_to_block</link>(<link linkend="_structblock__t">block</link>&#32;*<link linkend="_structblock__t">block</link>,&#32;<link linkend="_structtransaction__t">transaction</link>&#32;*newTrans,&#32;<emphasis role="keywordtype">int</emphasis>&#32;index)
<anchor xml:id="_common_8c_source_1l00047"/>00047 {
<anchor xml:id="_common_8c_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<link linkend="_structblock__t">block</link>-&gt;<link linkend="_structblock__t_1a75735b68381e6c25555bb53c163abfe9">transList</link>[index]&#32;=&#32;*newTrans;&#32;<emphasis role="comment">/*&#32;ye&#32;probably&#32;we&#32;don&apos;t&#32;need&#32;a&#32;whole&#32;ass&#32;function&#32;for&#32;that*/</emphasis>
<anchor xml:id="_common_8c_source_1l00049"/>00049 }
</programlisting></section>
