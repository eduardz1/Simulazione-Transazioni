{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Simulazione Transazioni }Simulazione Transazioni}
{\comment Generated by doxygen1.9.3.}
{\creatim \yr2022\mo1\dy13\hr12\min9\sec43}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Simulazione Transazioni}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Thu Jan 13 2022 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b block_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ledger_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b message} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b node_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAID \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b parameters} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b semun} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b transaction_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b user_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b src/{\b common.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b master.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b nodes.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b parser.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b print.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b users.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b balance.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b common.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b master.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b nodes.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b parser.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b print.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/include/{\b users.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/utils/{\b debug.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/utils/{\b debug.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/utils/{\b lists.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/utils/{\b lists.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/utils/{\b sem.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/utils/{\b sem.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
block_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v block_t}
{\xe \v block_t}
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
\par
{
{\f2 #include <common.h>}}\par
Collaboration diagram for block_t:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structblock__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b transaction} {\b transList} [{\b SO_BLOCK_SIZE}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b blockIndex}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b block} * {\b next}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b block} * {\b prev}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 139} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v blockIndex\:block_t}
{\xe \v block_t\:blockIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int blockIndex}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 142} of file {\b common.h}.}\par
}
{\xe \v next\:block_t}
{\xe \v block_t\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b block}* next}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 143} of file {\b common.h}.}\par
}
{\xe \v prev\:block_t}
{\xe \v block_t\:prev}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b block}* prev}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 144} of file {\b common.h}.}\par
}
{\xe \v transList\:block_t}
{\xe \v block_t\:transList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b transaction} transList[{\b SO_BLOCK_SIZE}]}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 141} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b common.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ledger_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v ledger_t}
{\xe \v ledger_t}
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
\par
{
{\f2 #include <common.h>}}\par
Collaboration diagram for ledger_t:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structledger__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b block} * {\b head}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b registryCurrSize}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 148} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v head\:ledger_t}
{\xe \v ledger_t\:head}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b block}* head}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 150} of file {\b common.h}.}\par
}
{\xe \v registryCurrSize\:ledger_t}
{\xe \v ledger_t\:registryCurrSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int registryCurrSize}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 151} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b common.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
message Struct Reference\par \pard\plain 
{\tc\tcl2 \v message}
{\xe \v message}
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
\par
{
{\f2 #include <common.h>}}\par
Collaboration diagram for message:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structmessage__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b mtype}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b transaction} {\b userTrans}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 132} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v mtype\:message}
{\xe \v message\:mtype}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long mtype}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 134} of file {\b common.h}.}\par
}
{\xe \v userTrans\:message}
{\xe \v message\:userTrans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b transaction} userTrans}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 135} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b common.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
node_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v node_t}
{\xe \v node_t}
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
\par
{
{\f2 #include <common.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b available}
, {\b full}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b pid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum node_t:: \{ ... \}  {\b status}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 105} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
anonymous enum}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v available\:node_t}
{\xe \v node_t\:available}
{\qr available{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
\cell }{\cell }{\row }
{\xe \v full\:node_t}
{\xe \v node_t\:full}
{\qr full{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 108} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v pid\:node_t}
{\xe \v node_t\:pid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t pid}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 107} of file {\b common.h}.}\par
}
{\xe \v status\:node_t}
{\xe \v node_t\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum  \{ ... \}  status}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b common.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parameters Struct Reference\par \pard\plain 
{\tc\tcl2 \v parameters}
{\xe \v parameters}
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
\par
{
{\f2 #include <common.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b SO_USER_NUM}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b SO_NODES_NUM}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b SO_BUDGET_INIT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b SO_REWARD}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b SO_MIN_TRANS_GEN_NSEC}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b SO_MAX_TRANS_GEN_NSEC}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b SO_RETRY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b SO_TP_SIZE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b SO_MIN_TRANS_PROC_NSEC}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b SO_MAX_TRANS_PROC_NSEC}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b SO_SIM_SEC}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b SO_FRIENDS_NUM}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b SO_HOPS}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 77} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v SO_BUDGET_INIT\:parameters}
{\xe \v parameters\:SO_BUDGET_INIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SO_BUDGET_INIT}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b common.h}.}\par
}
{\xe \v SO_FRIENDS_NUM\:parameters}
{\xe \v parameters\:SO_FRIENDS_NUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SO_FRIENDS_NUM}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 90} of file {\b common.h}.}\par
}
{\xe \v SO_HOPS\:parameters}
{\xe \v parameters\:SO_HOPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SO_HOPS}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 91} of file {\b common.h}.}\par
}
{\xe \v SO_MAX_TRANS_GEN_NSEC\:parameters}
{\xe \v parameters\:SO_MAX_TRANS_GEN_NSEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long SO_MAX_TRANS_GEN_NSEC}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 84} of file {\b common.h}.}\par
}
{\xe \v SO_MAX_TRANS_PROC_NSEC\:parameters}
{\xe \v parameters\:SO_MAX_TRANS_PROC_NSEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long SO_MAX_TRANS_PROC_NSEC}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 88} of file {\b common.h}.}\par
}
{\xe \v SO_MIN_TRANS_GEN_NSEC\:parameters}
{\xe \v parameters\:SO_MIN_TRANS_GEN_NSEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long SO_MIN_TRANS_GEN_NSEC}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b common.h}.}\par
}
{\xe \v SO_MIN_TRANS_PROC_NSEC\:parameters}
{\xe \v parameters\:SO_MIN_TRANS_PROC_NSEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long SO_MIN_TRANS_PROC_NSEC}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 87} of file {\b common.h}.}\par
}
{\xe \v SO_NODES_NUM\:parameters}
{\xe \v parameters\:SO_NODES_NUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SO_NODES_NUM}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b common.h}.}\par
}
{\xe \v SO_RETRY\:parameters}
{\xe \v parameters\:SO_RETRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SO_RETRY}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 85} of file {\b common.h}.}\par
}
{\xe \v SO_REWARD\:parameters}
{\xe \v parameters\:SO_REWARD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char SO_REWARD}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 82} of file {\b common.h}.}\par
}
{\xe \v SO_SIM_SEC\:parameters}
{\xe \v parameters\:SO_SIM_SEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SO_SIM_SEC}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 89} of file {\b common.h}.}\par
}
{\xe \v SO_TP_SIZE\:parameters}
{\xe \v parameters\:SO_TP_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SO_TP_SIZE}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 86} of file {\b common.h}.}\par
}
{\xe \v SO_USER_NUM\:parameters}
{\xe \v parameters\:SO_USER_NUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int SO_USER_NUM}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b common.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
semun Union Reference\par \pard\plain 
{\tc\tcl2 \v semun}
{\xe \v semun}
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
\par
{
{\f2 #include <sem.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b val}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct semid_ds * {\b buf}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short * {\b array}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct seminfo * {\b __buf}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 31} of file {\b sem.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v __buf\:semun}
{\xe \v semun\:__buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct seminfo* __buf}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b sem.h}.}\par
}
{\xe \v array\:semun}
{\xe \v semun\:array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short* array}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b sem.h}.}\par
}
{\xe \v buf\:semun}
{\xe \v semun\:buf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct semid_ds* buf}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b sem.h}.}\par
}
{\xe \v val\:semun}
{\xe \v semun\:val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int val}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b sem.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this union was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/utils/{\b sem.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
transaction_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v transaction_t}
{\xe \v transaction_t}
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
\par
{
{\f2 #include <common.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b pending}
, {\b processing}
, {\b confirmed}
, {\b aborted}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct timespec {\b timestamp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b sender}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b receiver}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b amount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b reward}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum transaction_t:: \{ ... \}  {\b status}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 116} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
anonymous enum}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v pending\:transaction_t}
{\xe \v transaction_t\:pending}
{\qr pending{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
\cell }{\cell }{\row }
{\xe \v processing\:transaction_t}
{\xe \v transaction_t\:processing}
{\qr processing{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
\cell }{\cell }{\row }
{\xe \v confirmed\:transaction_t}
{\xe \v transaction_t\:confirmed}
{\qr confirmed{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
\cell }{\cell }{\row }
{\xe \v aborted\:transaction_t}
{\xe \v transaction_t\:aborted}
{\qr aborted{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 123} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v amount\:transaction_t}
{\xe \v transaction_t\:amount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int amount}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 121} of file {\b common.h}.}\par
}
{\xe \v receiver\:transaction_t}
{\xe \v transaction_t\:receiver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t receiver}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 120} of file {\b common.h}.}\par
}
{\xe \v reward\:transaction_t}
{\xe \v transaction_t\:reward}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int reward}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 122} of file {\b common.h}.}\par
}
{\xe \v sender\:transaction_t}
{\xe \v transaction_t\:sender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t sender}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 119} of file {\b common.h}.}\par
}
{\xe \v status\:transaction_t}
{\xe \v transaction_t\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum  \{ ... \}  status}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestamp\:transaction_t}
{\xe \v transaction_t\:timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct timespec timestamp}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 118} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b common.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
user_t Struct Reference\par \pard\plain 
{\tc\tcl2 \v user_t}
{\xe \v user_t}
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
\par
{
{\f2 #include <common.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum \{ {\b alive}
, {\b broke}
, {\b dead}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b pid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum user_t:: \{ ... \}  {\b status}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 94} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
anonymous enum}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v alive\:user_t}
{\xe \v user_t\:alive}
{\qr alive{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
\cell }{\cell }{\row }
{\xe \v broke\:user_t}
{\xe \v user_t\:broke}
{\qr broke{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
\cell }{\cell }{\row }
{\xe \v dead\:user_t}
{\xe \v user_t\:dead}
{\qr dead{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 97} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v pid\:user_t}
{\xe \v user_t\:pid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t pid}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 96} of file {\b common.h}.}\par
}
{\xe \v status\:user_t}
{\xe \v user_t\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum  \{ ... \}  status}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/include/{\b common.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/common.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/common.c}
{\xe \v src/common.c}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "include/common.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for common.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "common_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ledger} * {\b ledger_init} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b block} * {\b new_block} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add_transaction_to_block} ({\b block} *{\b block}, {\b transaction} *newTrans, int index)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v add_transaction_to_block\:common.c}
{\xe \v common.c\:add_transaction_to_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void add_transaction_to_block ({\b block} *  {\i block}, {\b transaction} *  {\i newTrans}, int  {\i index})}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b common.c}.}\par
}
{\xe \v ledger_init\:common.c}
{\xe \v common.c\:ledger_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ledger} * ledger_init ()}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b common.c}.}\par
}
{\xe \v new_block\:common.c}
{\xe \v common.c\:new_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b block} * new_block ()}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b common.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
common.c\par \pard\plain 
{\tc\tcl2 \v src/common.c}
{\xe \v src/common.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "include/common.h"}\par
00002 \par
00003 ledger *ledger_init()\par
00004 \{\par
00005     ledger *newLedger;\par
00006     {\cf18 int} shmID; {\cf20 /* ID of "ledger" shared memory segment */}\par
00007 \par
00008     {\cf20 /* -- LEDGER INITIALIZATION --}\par
00009 {\cf20      * save the ID of our new (IPC_PRIVATE) shared memory segment of size -ledger-}\par
00010 {\cf20      * smctl will deallocate the shared memory segment only when every process detaches it}\par
00011 {\cf20      * tells OS that ledger of type ledger is our shared memory of shmID}\par
00012 {\cf20      */}\par
00013     shmID = shmget(IPC_PRIVATE, {\cf17 sizeof}(newLedger), 0600);\par
00014     shmctl(shmID, IPC_RMID, NULL);\par
00015 \par
00016     newLedger->head = new_block();\par
00017     newLedger->registryCurrSize = 1;\par
00018 \par
00019     newLedger = (ledger *)shmat(shmID, NULL, 0);\par
00020 \par
00021     {\cf19 return} newLedger;\par
00022 \}\par
00023 \par
00024 block *new_block()\par
00025 \{\par
00026     block *newBlock = malloc({\cf17 sizeof}(block));\par
00027     transaction reward;\par
00028     {\cf17 struct }timespec timestamp;\par
00029 \par
00030     {\cf20 /* memset(newBlock->transList, 0, SO_BLOCK_SIZE); */}\par
00031     clock_gettime(CLOCK_REALTIME, &timestamp);\par
00032 \par
00033     reward.timestamp = timestamp;\par
00034     reward.sender = SELF;\par
00035     reward.receiver = getpid();\par
00036     reward.amount = 0;\par
00037     reward.reward = 0;\par
00038 \par
00039     newBlock->transList[0] = reward;\par
00040     newBlock->blockIndex = 0;\par
00041     newBlock->next = NULL;\par
00042 \par
00043     {\cf19 return} newBlock;\par
00044 \}\par
00045 \par
00046 {\cf18 void} add_transaction_to_block(block *block, transaction *newTrans, {\cf18 int} index)\par
00047 \{\par
00048     block->transList[index] = *newTrans; {\cf20 /* ye probably we don't need a whole ass function for that*/}\par
00049 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/balance.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/balance.h}
{\xe \v src/include/balance.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b balance} (int budget)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v balance\:balance.h}
{\xe \v balance.h\:balance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int balance (int  {\i budget})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1} of file {\b balance.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
balance.h\par \pard\plain 
{\tc\tcl2 \v src/include/balance.h}
{\xe \v src/include/balance.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf18 int} balance({\cf18 int} budget)\par
00002 \{\par
00003     {\cf18 int} unitoCoin_in;\par
00004     {\cf18 int} unitoCoin_out;\par
00005     {\cf18 int} unitoCoin_out_notregistered;\par
00006     {\cf18 int} curr_balance = unitoCoin_in + unitoCoin_out - unitoCoin_out_notregistered;\par
00007 \};\par
00008 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/common.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/common.h}
{\xe \v src/include/common.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stddef.h>}\par
{\f2 #include <stdint.h>}\par
{\f2 #include <unistd.h>}\par
{\f2 #include <errno.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <sys/ipc.h>}\par
{\f2 #include <sys/shm.h>}\par
{\f2 #include <sys/sem.h>}\par
{\f2 #include <sys/msg.h>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include "../utils/debug.h"}\par
{\f2 #include "../utils/sem.h"}\par
{\f2 #include "../utils/lists.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for common.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "common_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "common_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parameters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b user_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b node_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b transaction_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b message}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b block_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ledger_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NULL}\~ 0 /* thre's a problem with NULL for some reason */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b _GNU_SOURCE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ARRAY_SIZE}(x)\~ (sizeof(x) / sizeof((x)[0]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RAND}(min,  max)\~ ((rand() % (max - min + 1)) + min)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IPC_ERROR}\~ -1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHM_PARAMETERS}\~ 1337\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHM_USERS_ARRAY}\~ 1338\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHM_NODES_ARRAY}\~ 1339\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHM_LEDGER}\~ 1340\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SEM_MASTER}\~ 420\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b M_QUEUE_KEY}\~ 0x5AD\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SO_BLOCK_SIZE}\~ 100     /* number of {\b transaction} per {\b block}*/\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SO_REGISTRY_SIZE}\~ 1000 /* max length of consecutive blocks */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SELF}\~ -1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EVERYONE_BROKE}\~ '$'\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b USERS_PID_ARGV}\~ (atoi(argv[1]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NODES_PID_ARGV}\~ (atoi(argv[2]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PARAMETERS_ARGV}\~ (atoi(argv[3]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LEDGER_ARGV}\~ (atoi(argv[4]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SEM_ID_ARGV}\~ (atoi(argv[5]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WENT_BROKE}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_RETRY}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ERROR}\~ -1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SUCCESS}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_ERROR}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b user_t} {\b user}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b node_t} {\b node}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b transaction_t} {\b transaction}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b block_t} {\b block}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b ledger_t} {\b ledger}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ledger} * {\b ledger_init} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b block} * {\b new_block} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add_block} ({\b block})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add_transaction_to_block} ({\b block} *, {\b transaction} *, int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add_block_to_ledger} ({\b block} *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b find_transaction} (struct timespec timestamp, pid_t sender, pid_t receiver)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b search_timestamp} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b search_sender} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b search_receiver} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b errno}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v _GNU_SOURCE\:common.h}
{\xe \v common.h\:_GNU_SOURCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define _GNU_SOURCE}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b common.h}.}\par
}
{\xe \v ARRAY_SIZE\:common.h}
{\xe \v common.h\:ARRAY_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ARRAY_SIZE( x)\~ (sizeof(x) / sizeof((x)[0]))}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b common.h}.}\par
}
{\xe \v ERROR\:common.h}
{\xe \v common.h\:ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ERROR\~ -1}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b common.h}.}\par
}
{\xe \v EVERYONE_BROKE\:common.h}
{\xe \v common.h\:EVERYONE_BROKE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EVERYONE_BROKE\~ '$'}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b common.h}.}\par
}
{\xe \v IPC_ERROR\:common.h}
{\xe \v common.h\:IPC_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IPC_ERROR\~ -1}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b common.h}.}\par
}
{\xe \v LEDGER_ARGV\:common.h}
{\xe \v common.h\:LEDGER_ARGV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LEDGER_ARGV\~ (atoi(argv[4]))}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b common.h}.}\par
}
{\xe \v M_QUEUE_KEY\:common.h}
{\xe \v common.h\:M_QUEUE_KEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define M_QUEUE_KEY\~ 0x5AD}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b common.h}.}\par
}
{\xe \v MAX_RETRY\:common.h}
{\xe \v common.h\:MAX_RETRY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_RETRY\~ 2}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b common.h}.}\par
}
{\xe \v NODES_PID_ARGV\:common.h}
{\xe \v common.h\:NODES_PID_ARGV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NODES_PID_ARGV\~ (atoi(argv[2]))}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b common.h}.}\par
}
{\xe \v NULL\:common.h}
{\xe \v common.h\:NULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NULL\~ 0 /* thre's a problem with NULL for some reason */}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b common.h}.}\par
}
{\xe \v PARAMETERS_ARGV\:common.h}
{\xe \v common.h\:PARAMETERS_ARGV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PARAMETERS_ARGV\~ (atoi(argv[3]))}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b common.h}.}\par
}
{\xe \v RAND\:common.h}
{\xe \v common.h\:RAND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RAND( min,  max)\~ ((rand() % (max - min + 1)) + min)}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b common.h}.}\par
}
{\xe \v SELF\:common.h}
{\xe \v common.h\:SELF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SELF\~ -1}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b common.h}.}\par
}
{\xe \v SEM_ID_ARGV\:common.h}
{\xe \v common.h\:SEM_ID_ARGV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SEM_ID_ARGV\~ (atoi(argv[5]))}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b common.h}.}\par
}
{\xe \v SEM_MASTER\:common.h}
{\xe \v common.h\:SEM_MASTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SEM_MASTER\~ 420}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b common.h}.}\par
}
{\xe \v SHM_LEDGER\:common.h}
{\xe \v common.h\:SHM_LEDGER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHM_LEDGER\~ 1340}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b common.h}.}\par
}
{\xe \v SHM_NODES_ARRAY\:common.h}
{\xe \v common.h\:SHM_NODES_ARRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHM_NODES_ARRAY\~ 1339}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b common.h}.}\par
}
{\xe \v SHM_PARAMETERS\:common.h}
{\xe \v common.h\:SHM_PARAMETERS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHM_PARAMETERS\~ 1337}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b common.h}.}\par
}
{\xe \v SHM_USERS_ARRAY\:common.h}
{\xe \v common.h\:SHM_USERS_ARRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHM_USERS_ARRAY\~ 1338}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b common.h}.}\par
}
{\xe \v SO_BLOCK_SIZE\:common.h}
{\xe \v common.h\:SO_BLOCK_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SO_BLOCK_SIZE\~ 100     /* number of {\b transaction} per {\b block}*/}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b common.h}.}\par
}
{\xe \v SO_REGISTRY_SIZE\:common.h}
{\xe \v common.h\:SO_REGISTRY_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SO_REGISTRY_SIZE\~ 1000 /* max length of consecutive blocks */}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b common.h}.}\par
}
{\xe \v SUCCESS\:common.h}
{\xe \v common.h\:SUCCESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SUCCESS\~ 0}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 59} of file {\b common.h}.}\par
}
{\xe \v TEST_ERROR\:common.h}
{\xe \v common.h\:TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_ERROR}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 if} (errno)                                     \\\par
    \{                                              \\\par
        fprintf(stderr,                            \\\par
                {\cf22 "%s:%d: PID=%5d: Error %d (%s)\\n"}, \\\par
                __FILE__,                          \\\par
                __LINE__,                          \\\par
                getpid(),                          \\\par
                errno,                             \\\par
                strerror(errno));                  \\\par
    \}\par
}
{
Definition at line {\b 64} of file {\b common.h}.}\par
}
{\xe \v USERS_PID_ARGV\:common.h}
{\xe \v common.h\:USERS_PID_ARGV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define USERS_PID_ARGV\~ (atoi(argv[1]))}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b common.h}.}\par
}
{\xe \v WENT_BROKE\:common.h}
{\xe \v common.h\:WENT_BROKE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WENT_BROKE\~ 1}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b common.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v block\:common.h}
{\xe \v common.h\:block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b block_t} {\b block}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ledger\:common.h}
{\xe \v common.h\:ledger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b ledger_t} {\b ledger}}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v node\:common.h}
{\xe \v common.h\:node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b node_t} {\b node}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v transaction\:common.h}
{\xe \v common.h\:transaction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b transaction_t} {\b transaction}}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v user\:common.h}
{\xe \v common.h\:user}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b user_t} {\b user}}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v add_block\:common.h}
{\xe \v common.h\:add_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void add_block ({\b block} )}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v add_block_to_ledger\:common.h}
{\xe \v common.h\:add_block_to_ledger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void add_block_to_ledger ({\b block} * )}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v add_transaction_to_block\:common.h}
{\xe \v common.h\:add_transaction_to_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void add_transaction_to_block ({\b block} *  {\i block}, {\b transaction} *  {\i newTrans}, int  {\i index})}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b common.c}.}\par
}
{\xe \v find_transaction\:common.h}
{\xe \v common.h\:find_transaction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void find_transaction (struct timespec  {\i timestamp}, pid_t  {\i sender}, pid_t  {\i receiver})}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ledger_init\:common.h}
{\xe \v common.h\:ledger_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ledger} * ledger_init ()}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b common.c}.}\par
}
{\xe \v new_block\:common.h}
{\xe \v common.h\:new_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b block} * new_block ()}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b common.c}.}\par
}
{\xe \v search_receiver\:common.h}
{\xe \v common.h\:search_receiver}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void search_receiver ()}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v search_sender\:common.h}
{\xe \v common.h\:search_sender}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void search_sender ()}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v search_timestamp\:common.h}
{\xe \v common.h\:search_timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void search_timestamp ()}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v errno\:common.h}
{\xe \v common.h\:errno}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int errno{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b sem.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
common.h\par \pard\plain 
{\tc\tcl2 \v src/include/common.h}
{\xe \v src/include/common.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SIMULAZIONE_TRANSAZIONI_COMMON_H}\par
00002 {\cf21 #define SIMULAZIONE_TRANSAZIONI_COMMON_H}\par
00003 \par
00004 {\cf21 #include <stdlib.h>}\par
00005 {\cf21 #include <stdio.h>}\par
00006 {\cf21 #include <stddef.h>}\par
00007 {\cf21 #include <stdint.h>}\par
00008 {\cf21 #include <unistd.h>}\par
00009 {\cf21 #include <errno.h>}\par
00010 {\cf21 #include <time.h>}\par
00011 {\cf21 #include <math.h>}\par
00012 {\cf21 #include <string.h>}\par
00013 {\cf21 #include <sys/ipc.h>}\par
00014 {\cf21 #include <sys/shm.h>}\par
00015 {\cf21 #include <sys/sem.h>}\par
00016 {\cf21 #include <sys/msg.h>}\par
00017 {\cf21 #include <sys/types.h>}\par
00018 \par
00019 {\cf21 #include "../utils/debug.h"}\par
00020 {\cf21 #include "../utils/sem.h"}\par
00021 {\cf21 #include "../utils/lists.h"}\par
00022 \par
00023 {\cf21 #ifndef NULL}\par
00024 {\cf21 #define NULL 0 }{\cf20 /* thre's a problem with NULL for some reason */}{\cf21 }\par
00025 {\cf21 #endif}\par
00026 \par
00027 {\cf21 #ifndef _GNU_SOURCE}\par
00028 {\cf21 #define _GNU_SOURCE}\par
00029 {\cf21 #endif}\par
00030 \par
00031 {\cf21 #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))}\par
00032 {\cf21 #define RAND(min, max) ((rand() % (max - min + 1)) + min)}\par
00033 \par
00034 {\cf20 /* -- IPC OBJECTS -- */}\par
00035 {\cf21 #define IPC_ERROR -1}\par
00036 {\cf21 #define SHM_PARAMETERS 1337}\par
00037 {\cf21 #define SHM_USERS_ARRAY 1338}\par
00038 {\cf21 #define SHM_NODES_ARRAY 1339}\par
00039 {\cf21 #define SHM_LEDGER 1340}\par
00040 {\cf21 #define SEM_MASTER 420}\par
00041 {\cf21 #define M_QUEUE_KEY 0x5AD}\par
00042 \par
00043 {\cf21 #define SO_BLOCK_SIZE 100     }{\cf20 /* number of transaction per block*/}{\cf21 }\par
00044 {\cf21 #define SO_REGISTRY_SIZE 1000 }{\cf20 /* max length of consecutive blocks */}{\cf21 }\par
00045 {\cf21 #define SELF -1}\par
00046 {\cf21 #define EVERYONE_BROKE '$'}\par
00047 \par
00048 {\cf20 /* -- ARGV LOCATION OF IPC OBJECTS -- */}\par
00049 {\cf21 #define USERS_PID_ARGV (atoi(argv[1]))}\par
00050 {\cf21 #define NODES_PID_ARGV (atoi(argv[2]))}\par
00051 {\cf21 #define PARAMETERS_ARGV (atoi(argv[3]))}\par
00052 {\cf21 #define LEDGER_ARGV (atoi(argv[4]))}\par
00053 {\cf21 #define SEM_ID_ARGV (atoi(argv[5]))}\par
00054 \par
00055 {\cf20 /* -- USER RETURN STATUS -- */}\par
00056 {\cf21 #define WENT_BROKE 1}\par
00057 {\cf21 #define MAX_RETRY 2}\par
00058 {\cf21 #define ERROR -1}\par
00059 {\cf21 #define SUCCESS 0}\par
00060 \par
00061 {\cf17 extern} {\cf18 int} errno;\par
00062 \par
00063 {\cf21 #ifndef TEST_ERROR}\par
00064 {\cf21 #define TEST_ERROR                                 \\}\par
00065 {\cf21     if (errno)                                     \\}\par
00066 {\cf21     \{                                              \\}\par
00067 {\cf21         fprintf(stderr,                            \\}\par
00068 {\cf21                 "%s:%d: PID=%5d: Error %d (%s)\\n"}, \\\par
00069                 __FILE__,                          \\\par
00070                 __LINE__,                          \\\par
00071                 getpid(),                          \\\par
00072                 errno,                             \\\par
00073                 strerror(errno));                  \\\par
00074     \}\par
00075 {\cf21 #endif}\par
00076 \par
00077 {\cf17 struct }parameters\par
00078 \{\par
00079     {\cf18 unsigned} {\cf18 int} SO_USER_NUM;\par
00080     {\cf18 unsigned} {\cf18 int} SO_NODES_NUM;\par
00081     {\cf18 unsigned} {\cf18 int} SO_BUDGET_INIT;\par
00082     {\cf18 char} SO_REWARD; {\cf20 /* max value 100 */}\par
00083     {\cf18 unsigned} {\cf18 long} SO_MIN_TRANS_GEN_NSEC;\par
00084     {\cf18 unsigned} {\cf18 long} SO_MAX_TRANS_GEN_NSEC;\par
00085     {\cf18 unsigned} {\cf18 int} SO_RETRY;\par
00086     {\cf18 unsigned} {\cf18 int} SO_TP_SIZE;\par
00087     {\cf18 unsigned} {\cf18 long} SO_MIN_TRANS_PROC_NSEC;\par
00088     {\cf18 unsigned} {\cf18 long} SO_MAX_TRANS_PROC_NSEC;\par
00089     {\cf18 unsigned} {\cf18 int} SO_SIM_SEC;\par
00090     {\cf18 unsigned} {\cf18 int} SO_FRIENDS_NUM;\par
00091     {\cf18 unsigned} {\cf18 int} SO_HOPS;\par
00092 \};\par
00093 \par
00094 {\cf17 typedef} {\cf17 struct }user_t\par
00095 \{\par
00096     pid_t pid;\par
00097     {\cf17 enum}\par
00098     \{\par
00099         alive,\par
00100         broke,\par
00101         dead\par
00102     \} status;\par
00103 \} user;\par
00104 \par
00105 {\cf17 typedef} {\cf17 struct }node_t\par
00106 \{\par
00107     pid_t pid;\par
00108     {\cf17 enum}\par
00109     \{\par
00110         available,\par
00111         full\par
00112     \} status;\par
00113 \} node;\par
00114 \par
00115 {\cf20 /* Transaction struct */}\par
00116 {\cf17 typedef} {\cf17 struct }transaction_t\par
00117 \{\par
00118     {\cf17 struct }timespec timestamp;\par
00119     pid_t sender;\par
00120     pid_t receiver;\par
00121     {\cf18 int} amount;\par
00122     {\cf18 int} reward;\par
00123     {\cf17 enum}\par
00124     \{\par
00125         pending,\par
00126         processing,\par
00127         confirmed,\par
00128         aborted\par
00129     \} status;\par
00130 \} transaction;\par
00131 \par
00132 {\cf17 struct }message\par
00133 \{\par
00134     {\cf18 long} mtype;\par
00135     transaction userTrans;\par
00136 \};\par
00137 \par
00138 {\cf20 /* Block struct */}\par
00139 {\cf17 typedef} {\cf17 struct }block_t\par
00140 \{\par
00141     transaction transList[SO_BLOCK_SIZE];\par
00142     {\cf18 unsigned} {\cf18 int} blockIndex; {\cf20 /* when a block is written on ledger it's Index needs to be updated */}\par
00143     {\cf17 struct }block *next;\par
00144     {\cf17 struct }block *prev;\par
00145 \} block;\par
00146 \par
00147 {\cf20 /* Libro Mastro (ledger) struct */}\par
00148 {\cf17 typedef} {\cf17 struct }ledger_t\par
00149 \{\par
00150     block *head;\par
00151     {\cf18 unsigned} {\cf18 int} registryCurrSize; {\cf20 /* initialize to SO_REGISTRY_SIZE, update with every new block added */}\par
00152 \} ledger;\par
00153 \par
00154 ledger *ledger_init();\par
00155 block *new_block();\par
00156 {\cf18 void} add_block(block);\par
00157 {\cf18 void} add_transaction_to_block(block *, transaction *, {\cf18 int} index);\par
00158 {\cf18 void} add_block_to_ledger(block *);\par
00159 {\cf18 void} find_transaction({\cf17 struct} timespec timestamp, pid_t sender, pid_t receiver); {\cf20 /* NULL used to group results */}\par
00160 \par
00161 {\cf20 /* listparser.c */}\par
00162 {\cf18 void} search_timestamp();\par
00163 {\cf18 void} search_sender();\par
00164 {\cf18 void} search_receiver();\par
00165 \par
00166 {\cf21 #endif }{\cf20 /* SIMULAZIONE_TRANSAZIONI_COMMON_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/master.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/master.h}
{\xe \v src/include/master.h}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string.h>}\par
{\f2 #include <signal.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for master.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b make_arguments} (int *IPCarray, char *argv[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b spawn_user} (char *argv[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b spawn_node} (char *argv[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b shared_memory_objects_init} (int *shared_memory_objects_IDs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b semaphores_init} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b make_ipc_array} (int *IPC_objects_IDs)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b master_interrupt_handle} (int signum)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v make_arguments\:master.h}
{\xe \v master.h\:make_arguments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void make_arguments (int *  {\i IPCarray}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v make_ipc_array\:master.h}
{\xe \v master.h\:make_ipc_array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void make_ipc_array (int *  {\i IPC_objects_IDs})}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 175} of file {\b master.c}.}\par
}
{\xe \v master_interrupt_handle\:master.h}
{\xe \v master.h\:master_interrupt_handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void master_interrupt_handle (int  {\i signum})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 188} of file {\b master.c}.}\par
}
{\xe \v semaphores_init\:master.h}
{\xe \v master.h\:semaphores_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void semaphores_init ()}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 167} of file {\b master.c}.}\par
}
{\xe \v shared_memory_objects_init\:master.h}
{\xe \v master.h\:shared_memory_objects_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void shared_memory_objects_init (int *  {\i shared_memory_objects_IDs})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 111} of file {\b master.c}.}\par
}
{\xe \v spawn_node\:master.h}
{\xe \v master.h\:spawn_node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t spawn_node (char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 88} of file {\b master.c}.}\par
}
{\xe \v spawn_user\:master.h}
{\xe \v master.h\:spawn_user}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t spawn_user (char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b master.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master.h\par \pard\plain 
{\tc\tcl2 \v src/include/master.h}
{\xe \v src/include/master.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SIMULAZIONE_TRANSAZIONI_MASTER_H}\par
00002 {\cf21 #define SIMULAZIONE_TRANSAZIONI_MASTER_H}\par
00003 \par
00004 {\cf20 /*}\par
00005 {\cf20  * probabilmente tutte set macro non ci servono perche' ha pi\'F9 senso passare i}\par
00006 {\cf20  * valori come parametri in compilazione}\par
00007 {\cf20  */}\par
00008 \par
00009 {\cf20 /* libro mastro ----> linked list */}\par
00010 \par
00011 {\cf20 /*}\par
00012 {\cf20  * execve(const char *user, char *const argv[], char *const envp[])}\par
00013 {\cf20  * in user_fork to link "user" executable to the forked process, same thing for nodes}\par
00014 {\cf20  * check lesson on pipes by prof. bini, the second hour}\par
00015 {\cf20  */}\par
00016 \par
00017 {\cf20 /*}\par
00018 {\cf20  * every transaction should be noted and we need to manage inconsistency with}\par
00019 {\cf20  * semaphores maybe}\par
00020 {\cf20  */}\par
00021 \par
00022 {\cf20 /*}\par
00023 {\cf20  * get every user_pid, ask to libro_mastro}\par
00024 {\cf20  * to return it's current_budget and print}\par
00025 {\cf20  * repeat every second until simulation persists}\par
00026 {\cf20  * remember that CTRL-C should kill the simulation}\par
00027 {\cf20  */}\par
00028 \par
00029 {\cf20 /*}\par
00030 {\cf20  * need to define a kill signal for the simulation, either:}\par
00031 {\cf20  * - SO_SIM_SEC seconds have passed}\par
00032 {\cf20  * - libro_mastro is full}\par
00033 {\cf20  * - CTRL-C from stdin}\par
00034 {\cf20  */}\par
00035 \par
00036 {\cf20 /*}\par
00037 {\cf20  * end of simulation should print:}\par
00038 {\cf20  * - kill signal}\par
00039 {\cf20  * - balance of every user, as before, may need to write a funciton for that}\par
00040 {\cf20  * - balance of every node (function as before but with different parameter)}\par
00041 {\cf20  * - number of user processes aborted}\par
00042 {\cf20  * - number of blocks in the libro_mastro}\par
00043 {\cf20  * - number of transaction still in the pool, for each node}\par
00044 {\cf20  */}\par
00045 \par
00046 {\cf21 #include <string.h>}\par
00047 {\cf21 #include <signal.h>}\par
00048 \par
00049 {\cf18 void} make_arguments({\cf18 int} *IPCarray, {\cf18 char} *argv[]);\par
00050 \par
00051 pid_t spawn_user({\cf18 char} *argv[]);\par
00052 pid_t spawn_node({\cf18 char} *argv[]);\par
00053 \par
00054 {\cf18 void} shared_memory_objects_init({\cf18 int} *shared_memory_objects_IDs);\par
00055 {\cf18 void} semaphores_init();\par
00056 {\cf18 void} make_ipc_array({\cf18 int} *IPC_objects_IDs);\par
00057 \par
00058 {\cf18 void} master_interrupt_handle({\cf18 int} signum);\par
00059 \par
00060 {\cf21 #endif }{\cf20 /* SIMULAZIONE_TRANSAZIONI_MASTER_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/nodes.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/nodes.h}
{\xe \v src/include/nodes.h}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "nodes_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct timespec {\b randSleepTime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct timespec {\b sleepTimeRemaining}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v randSleepTime\:nodes.h}
{\xe \v nodes.h\:randSleepTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct timespec randSleepTime}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1} of file {\b nodes.h}.}\par
}
{\xe \v sleepTimeRemaining\:nodes.h}
{\xe \v nodes.h\:sleepTimeRemaining}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct timespec sleepTimeRemaining}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 2} of file {\b nodes.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nodes.h\par \pard\plain 
{\tc\tcl2 \v src/include/nodes.h}
{\xe \v src/include/nodes.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf17 struct }timespec randSleepTime;\par
00002 {\cf17 struct }timespec sleepTimeRemaining;\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/parser.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/parser.h}
{\xe \v src/include/parser.h}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <string.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for parser.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "parser_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "parser_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NUM_PARAMETERS}\~ 13\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CONF_FILE}\~ "conf.txt"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CONF_ERROR}\~ -1\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b parse_parameters} (struct {\b parameters} *{\b par})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assign_defaults} (struct {\b parameters} *{\b par})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CONF_ERROR\:parser.h}
{\xe \v parser.h\:CONF_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CONF_ERROR\~ -1}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b parser.h}.}\par
}
{\xe \v CONF_FILE\:parser.h}
{\xe \v parser.h\:CONF_FILE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CONF_FILE\~ "conf.txt"}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b parser.h}.}\par
}
{\xe \v NUM_PARAMETERS\:parser.h}
{\xe \v parser.h\:NUM_PARAMETERS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NUM_PARAMETERS\~ 13}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b parser.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v assign_defaults\:parser.h}
{\xe \v parser.h\:assign_defaults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assign_defaults (struct {\b parameters} *  {\i par})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b parser.c}.}\par
}
{\xe \v parse_parameters\:parser.h}
{\xe \v parser.h\:parse_parameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int parse_parameters (struct {\b parameters} *  {\i par})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b parser.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parser.h\par \pard\plain 
{\tc\tcl2 \v src/include/parser.h}
{\xe \v src/include/parser.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SIMULAZIONE_TRANSAZIONI_PARSER_H}\par
00002 {\cf21 #define SIMULAZIONE_TRANSAZIONI_PARSER_H}\par
00003 \par
00004 {\cf21 #include <stdio.h>}\par
00005 {\cf21 #include <string.h>}\par
00006 \par
00007 {\cf21 #define NUM_PARAMETERS 13}\par
00008 {\cf21 #define CONF_FILE "conf.txt"}\par
00009 {\cf21 #define CONF_ERROR -1}\par
00010 \par
00011 {\cf18 int} parse_parameters({\cf17 struct} parameters *par);\par
00012 \par
00013 {\cf18 void} assign_defaults({\cf17 struct} parameters *par);\par
00014 \par
00015 {\cf21 #endif }{\cf20 /* SIMULAZIONE_TRANSAZIONI_PARSER_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/print.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/print.h}
{\xe \v src/include/print.h}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "common.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for print.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "print_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "print_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_time_to_die} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_user_nodes_table} (pid_t {\b main}, {\b user} *{\b user}, {\b node} *nodes, struct {\b parameters} *{\b par})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_kill_signal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_user_balance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_node_balance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_num_aborted} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_num_blocks} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_transactions_still_in_pool} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b final_print} (pid_t masterPID, {\b user} *{\b usersPID}, {\b node} *{\b nodesPID}, struct {\b parameters} *{\b par})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_parameters} (struct {\b parameters} *{\b par})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_block} (FILE *fp, {\b block} *b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_transaction} (FILE *fp, {\b transaction} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_ledger} ({\b ledger} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b formatted_timestamp} (FILE *fp)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v final_print\:print.h}
{\xe \v print.h\:final_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void final_print (pid_t  {\i masterPID}, {\b user} *  {\i usersPID}, {\b node} *  {\i nodesPID}, struct {\b parameters} *  {\i par})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b print.c}.}\par
}
{\xe \v formatted_timestamp\:print.h}
{\xe \v print.h\:formatted_timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void formatted_timestamp (FILE *  {\i fp})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 157} of file {\b print.c}.}\par
}
{\xe \v print_block\:print.h}
{\xe \v print.h\:print_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_block (FILE *  {\i fp}, {\b block} *  {\i b})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 127} of file {\b print.c}.}\par
}
{\xe \v print_kill_signal\:print.h}
{\xe \v print.h\:print_kill_signal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_kill_signal ()}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_ledger\:print.h}
{\xe \v print.h\:print_ledger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_ledger ({\b ledger} *  {\i l})}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 143} of file {\b print.c}.}\par
}
{\xe \v print_node_balance\:print.h}
{\xe \v print.h\:print_node_balance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_node_balance ()}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_num_aborted\:print.h}
{\xe \v print.h\:print_num_aborted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_num_aborted ()}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_num_blocks\:print.h}
{\xe \v print.h\:print_num_blocks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_num_blocks ()}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_parameters\:print.h}
{\xe \v print.h\:print_parameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_parameters (struct {\b parameters} *  {\i par})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b print.c}.}\par
}
{\xe \v print_time_to_die\:print.h}
{\xe \v print.h\:print_time_to_die}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_time_to_die ()}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b print.c}.}\par
}
{\xe \v print_transaction\:print.h}
{\xe \v print.h\:print_transaction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_transaction (FILE *  {\i fp}, {\b transaction} *  {\i t})}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 98} of file {\b print.c}.}\par
}
{\xe \v print_transactions_still_in_pool\:print.h}
{\xe \v print.h\:print_transactions_still_in_pool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_transactions_still_in_pool ()}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_user_balance\:print.h}
{\xe \v print.h\:print_user_balance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_user_balance ()}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_user_nodes_table\:print.h}
{\xe \v print.h\:print_user_nodes_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_user_nodes_table (pid_t  {\i main}, {\b user} *  {\i user}, {\b node} *  {\i nodes}, struct {\b parameters} *  {\i par})}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b print.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
print.h\par \pard\plain 
{\tc\tcl2 \v src/include/print.h}
{\xe \v src/include/print.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SIMULAZIONE_TRANSAZIONI_PRINT_H}\par
00002 {\cf21 #define SIMULAZIONE_TRANSAZIONI_PRINT_H}\par
00003 \par
00004 {\cf21 #include "common.h"}\par
00005 \par
00006 {\cf18 void} print_time_to_die();\par
00007 {\cf18 void} print_user_nodes_table(pid_t main, user *user, node *nodes, {\cf17 struct} parameters *par); {\cf20 /* function that prints on terminal the PID of every user and node process */}\par
00008 {\cf18 void} print_kill_signal();                                                                 {\cf20 /* need to define, prints reason of termination (simTime elapsed/ledger full/every process terminated) */}\par
00009 {\cf18 void} print_user_balance();                                                                {\cf20 /* need to define, prints balance of every user */}\par
00010 {\cf18 void} print_node_balance();                                                                {\cf20 /* need to define, prints balance of every node */}\par
00011 {\cf18 void} print_num_aborted();                                                                 {\cf20 /* need to define, prints num of processes aborted */}\par
00012 {\cf18 void} print_num_blocks();                                                                  {\cf20 /* need to define, prints num of blocks saved in the ledger */}\par
00013 {\cf18 void} print_transactions_still_in_pool();                                                  {\cf20 /* need to define, prints num of transactions still in the pool of each node */}\par
00014 \par
00015 {\cf18 void} final_print(pid_t masterPID, user *usersPID, node *nodesPID, {\cf17 struct} parameters *par);\par
00016 {\cf18 void} print_parameters({\cf17 struct} parameters *par);\par
00017 \par
00018 {\cf20 /* formatting ledger and blocks */}\par
00019 {\cf18 void} print_block(FILE *fp, block *b);\par
00020 {\cf18 void} print_transaction(FILE *fp, transaction *t);\par
00021 {\cf18 void} print_ledger(ledger *l);\par
00022 \par
00023 {\cf18 void} formatted_timestamp(FILE *fp);\par
00024 \par
00025 {\cf21 #endif }{\cf20 /* SIMULAZIONE_TRANSAZIONI_PRINT_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/include/users.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/include/users.h}
{\xe \v src/include/users.h}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <signal.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <time.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for users.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "users_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "users_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SLEEP_TIME_SET}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SLEEP}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b user_transactions_handle} (int signum)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b user_interrupt_handle} (int signum)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_pid_userIndex} (int PID_toSearch)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b get_random_userPID} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b get_random_nodePID} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b queue_to_pid} (pid_t nodePID)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b transaction_init} (pid_t nodePID, int amount, int reward)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b send_transaction} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v SLEEP\:users.h}
{\xe \v users.h\:SLEEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SLEEP}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     clock_nanosleep(CLOCK_REALTIME, TIMER_ABSTIME, &randSleepTime, &sleepTimeRemaining); \\\par
    clock_nanosleep(CLOCK_REALTIME, TIMER_ABSTIME, &sleepTimeRemaining, NULL);\par
}
{
Definition at line {\b 14} of file {\b users.h}.}\par
}
{\xe \v SLEEP_TIME_SET\:users.h}
{\xe \v users.h\:SLEEP_TIME_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SLEEP_TIME_SET}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     randSleepTime.tv_sec = 0; \\\par
    randSleepTime.tv_nsec = RAND(par->SO_MIN_TRANS_GEN_NSEC, par->SO_MAX_TRANS_GEN_NSEC);\par
}
{
Definition at line {\b 10} of file {\b users.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v get_pid_userIndex\:users.h}
{\xe \v users.h\:get_pid_userIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int get_pid_userIndex (int  {\i PID_toSearch})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b users.c}.}\par
}
{\xe \v get_random_nodePID\:users.h}
{\xe \v users.h\:get_random_nodePID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t get_random_nodePID ()}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b users.c}.}\par
}
{\xe \v get_random_userPID\:users.h}
{\xe \v users.h\:get_random_userPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t get_random_userPID ()}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b users.c}.}\par
}
{\xe \v queue_to_pid\:users.h}
{\xe \v users.h\:queue_to_pid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void queue_to_pid (pid_t  {\i nodePID})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 138} of file {\b users.c}.}\par
}
{\xe \v send_transaction\:users.h}
{\xe \v users.h\:send_transaction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int send_transaction ()}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 176} of file {\b users.c}.}\par
}
{\xe \v transaction_init\:users.h}
{\xe \v users.h\:transaction_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void transaction_init (pid_t  {\i nodePID}, int  {\i amount}, int  {\i reward})}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 146} of file {\b users.c}.}\par
}
{\xe \v user_interrupt_handle\:users.h}
{\xe \v users.h\:user_interrupt_handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void user_interrupt_handle (int  {\i signum})}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 227} of file {\b users.c}.}\par
}
{\xe \v user_transactions_handle\:users.h}
{\xe \v users.h\:user_transactions_handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void user_transactions_handle (int  {\i signum})}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 217} of file {\b users.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
users.h\par \pard\plain 
{\tc\tcl2 \v src/include/users.h}
{\xe \v src/include/users.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SIMULAZIONE_TRANSAZIONI_USERS_H}\par
00002 {\cf21 #define SIMULAZIONE_TRANSAZIONI_USERS_H}\par
00003 \par
00004 {\cf21 #include <signal.h>}\par
00005 {\cf21 #include <stdlib.h>}\par
00006 {\cf21 #include <time.h>}\par
00007 {\cf21 #include <signal.h>}\par
00008 \par
00009 {\cf20 /* sets sleep time with nsec precision for trans_gen */}\par
00010 {\cf21 #define SLEEP_TIME_SET        \\}\par
00011 {\cf21     randSleepTime.tv_sec = 0; \\}\par
00012 {\cf21     randSleepTime.tv_nsec = RAND(par->SO_MIN_TRANS_GEN_NSEC, par->SO_MAX_TRANS_GEN_NSEC);}\par
00013 \par
00014 {\cf21 #define SLEEP                                                                            \\}\par
00015 {\cf21     clock_nanosleep(CLOCK_REALTIME, TIMER_ABSTIME, &randSleepTime, &sleepTimeRemaining); \\}\par
00016 {\cf21     clock_nanosleep(CLOCK_REALTIME, TIMER_ABSTIME, &sleepTimeRemaining, NULL);}\par
00017 \par
00018 \par
00019 {\cf18 void} user_transactions_handle({\cf18 int} signum);\par
00020 {\cf18 void} user_interrupt_handle({\cf18 int} signum);\par
00021 \par
00022 {\cf18 int} get_pid_userIndex({\cf18 int} PID_toSearch);\par
00023 pid_t get_random_userPID();\par
00024 pid_t get_random_nodePID();\par
00025 \par
00026 {\cf18 void} queue_to_pid(pid_t nodePID);\par
00027 {\cf18 void} transaction_init(pid_t nodePID, {\cf18 int} amount, {\cf18 int} reward);\par
00028 {\cf18 int} send_transaction();\par
00029 \par
00030 {\cf21 #endif }{\cf20 /* SIMULAZIONE_TRANSAZIONI_USERS_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/master.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/master.c}
{\xe \v src/master.c}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "include/common.h"}\par
{\f2 #include "include/master.h"}\par
{\f2 #include "include/print.h"}\par
{\f2 #include "include/parser.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for master.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "master_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHM_NUM}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SEM_NUM}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IPC_NUM}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b USER_NAME}\~ "./users"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NODE_NAME}\~ "./nodes"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b make_arguments} (int *IPC_array, char **argv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b spawn_user} (char *userArgv[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b spawn_node} (char *nodeArgv[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b shared_memory_objects_init} (int *shmArray)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b semaphores_init} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b make_ipc_array} (int *IPC_array)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b master_interrupt_handle} (int signum)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parameters} * {\b par}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b user} * {\b usersPID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b node} * {\b nodesPID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ledger} * {\b mainLedger}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b semID}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v IPC_NUM\:master.c}
{\xe \v master.c\:IPC_NUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IPC_NUM\~ 8}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 8} of file {\b master.c}.}\par
}
{\xe \v NODE_NAME\:master.c}
{\xe \v master.c\:NODE_NAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NODE_NAME\~ "./nodes"}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 11} of file {\b master.c}.}\par
}
{\xe \v SEM_NUM\:master.c}
{\xe \v master.c\:SEM_NUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SEM_NUM\~ 1}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b master.c}.}\par
}
{\xe \v SHM_NUM\:master.c}
{\xe \v master.c\:SHM_NUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHM_NUM\~ 4}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 6} of file {\b master.c}.}\par
}
{\xe \v USER_NAME\:master.c}
{\xe \v master.c\:USER_NAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define USER_NAME\~ "./users"}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 10} of file {\b master.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:master.c}
{\xe \v master.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 210} of file {\b master.c}.}\par
}
{\xe \v make_arguments\:master.c}
{\xe \v master.c\:make_arguments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void make_arguments (int *  {\i IPC_array}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b master.c}.}\par
}
{\xe \v make_ipc_array\:master.c}
{\xe \v master.c\:make_ipc_array}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void make_ipc_array (int *  {\i IPC_array})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 175} of file {\b master.c}.}\par
}
{\xe \v master_interrupt_handle\:master.c}
{\xe \v master.c\:master_interrupt_handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void master_interrupt_handle (int  {\i signum})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 188} of file {\b master.c}.}\par
}
{\xe \v semaphores_init\:master.c}
{\xe \v master.c\:semaphores_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void semaphores_init ()}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 167} of file {\b master.c}.}\par
}
{\xe \v shared_memory_objects_init\:master.c}
{\xe \v master.c\:shared_memory_objects_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void shared_memory_objects_init (int *  {\i shmArray})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 111} of file {\b master.c}.}\par
}
{\xe \v spawn_node\:master.c}
{\xe \v master.c\:spawn_node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t spawn_node (char *  {\i nodeArgv}[])}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 88} of file {\b master.c}.}\par
}
{\xe \v spawn_user\:master.c}
{\xe \v master.c\:spawn_user}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t spawn_user (char *  {\i userArgv}[])}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b master.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mainLedger\:master.c}
{\xe \v master.c\:mainLedger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ledger}* mainLedger}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b master.c}.}\par
}
{\xe \v nodesPID\:master.c}
{\xe \v master.c\:nodesPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b node}* nodesPID}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b master.c}.}\par
}
{\xe \v par\:master.c}
{\xe \v master.c\:par}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b parameters}* par}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b master.c}.}\par
}
{\xe \v semID\:master.c}
{\xe \v master.c\:semID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int semID}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b master.c}.}\par
}
{\xe \v usersPID\:master.c}
{\xe \v master.c\:usersPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b user}* usersPID}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b master.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
master.c\par \pard\plain 
{\tc\tcl2 \v src/master.c}
{\xe \v src/master.c}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "include/common.h"}\par
00002 {\cf21 #include "include/master.h"}\par
00003 {\cf21 #include "include/print.h"}\par
00004 {\cf21 #include "include/parser.h"}\par
00005 \par
00006 {\cf21 #define SHM_NUM 4}\par
00007 {\cf21 #define SEM_NUM 1}\par
00008 {\cf21 #define IPC_NUM 8}\par
00009 \par
00010 {\cf21 #define USER_NAME "./users"}\par
00011 {\cf21 #define NODE_NAME "./nodes"}\par
00012 \par
00013 {\cf20 /*}\par
00014 {\cf20  ======================}\par
00015 {\cf20  || GLOBAL VARIABLES ||}\par
00016 {\cf20  ======================}\par
00017 {\cf20  */}\par
00018 \par
00019 {\cf20 /* parameters of simulation */}\par
00020 {\cf17 struct }parameters *par;\par
00021 user *usersPID;\par
00022 node *nodesPID;\par
00023 ledger *mainLedger;\par
00024 \par
00025 {\cf18 int} semID;\par
00026 \par
00027 {\cf20 /*extern int usersPrematurelyDead = 0;*/}\par
00028 \par
00029 {\cf20 /*}\par
00030 {\cf20  ======================}\par
00031 {\cf20  ||    FUNCTIONS     ||}\par
00032 {\cf20  ======================}\par
00033 {\cf20  */}\par
00034 \par
00035 {\cf20 /* make argv array with IPC IDs for user and nodes */}\par
00036 {\cf18 void} make_arguments({\cf18 int} *IPC_array, {\cf18 char} **argv)\par
00037 \{\par
00038     {\cf18 char} *uPID_array = malloc(3 * {\cf17 sizeof}(IPC_array[0]) + 1);\par
00039     {\cf18 char} *nPID_array = malloc(3 * {\cf17 sizeof}(IPC_array[0]) + 1);\par
00040     {\cf18 char} *parameters = malloc(3 * {\cf17 sizeof}(IPC_array[0]) + 1);\par
00041     {\cf18 char} *ledger = malloc(3 * {\cf17 sizeof}(IPC_array[0]) + 1);\par
00042     {\cf18 char} *semID = malloc(3 * {\cf17 sizeof}(IPC_array[0]) + 1);\par
00043 \par
00044     sprintf(uPID_array, {\cf22 "%d"}, IPC_array[0]);\par
00045     sprintf(nPID_array, {\cf22 "%d"}, IPC_array[1]);\par
00046     sprintf(parameters, {\cf22 "%d"}, IPC_array[2]);\par
00047     sprintf(ledger, {\cf22 "%d"}, IPC_array[3]);\par
00048     sprintf(semID, {\cf22 "%d"}, IPC_array[4]);\par
00049 \par
00050     argv[0] = USER_NAME; {\cf20 /* need nodes to have a different name but not a priority */}\par
00051     argv[1] = uPID_array;\par
00052     TRACE(({\cf22 ":master: argv[uPID] = %s\\n"}, uPID_array))\par
00053     argv[2] = nPID_array;\par
00054     TRACE(({\cf22 ":master: argv[nPID] = %s\\n"}, nPID_array))\par
00055     argv[3] = parameters;\par
00056     TRACE(({\cf22 ":master: argv[par] = %s\\n"}, parameters))\par
00057     argv[4] = ledger;\par
00058     TRACE(({\cf22 ":master: argv[ledger] = %s\\n"}, ledger))\par
00059     argv[5] = semID;\par
00060     TRACE(({\cf22 ":master: argv[sem] = %s\\n"}, semID))\par
00061     argv[8] = NULL; {\cf20 /* Terminating argv with NULL value */}\par
00062 \}\par
00063 \par
00064 {\cf20 /* fork and execve a "./users" */}\par
00065 pid_t spawn_user({\cf18 char} *userArgv[])\par
00066 \{\par
00067     pid_t myPID = fork();\par
00068     TRACE(({\cf22 ":master: argv values: %s %s %s %s %s %s\\n"}, userArgv[0], userArgv[1], userArgv[2], userArgv[3], userArgv[4], userArgv[5]))\par
00069     {\cf19 switch} (myPID)\par
00070     \{\par
00071     {\cf19 case} -1: {\cf20 /* Error case */}\par
00072         printf({\cf22 "-- Error forking for user\\n"});\par
00073         {\cf19 break};\par
00074 \par
00075     {\cf19 case} 0: {\cf20 /* Child case */}\par
00076         TRACE(({\cf22 ":master: Spawning user\\n"}));\par
00077         execve(USER_NAME, userArgv, NULL);\par
00078         TEST_ERROR\par
00079         TRACE(({\cf22 "!! Message that should never be seen\\n"}));\par
00080         {\cf19 break};\par
00081 \par
00082     {\cf19 default}:\par
00083         {\cf19 return} myPID;\par
00084     \}\par
00085 \}\par
00086 \par
00087 {\cf20 /* fork and execve a "./nodes" */}\par
00088 pid_t spawn_node({\cf18 char} *nodeArgv[])\par
00089 \{\par
00090     pid_t myPID = fork();\par
00091     TRACE(({\cf22 ":master: argv values: %s %s %s %s %s %s\\n"}, nodeArgv[0], nodeArgv[1], nodeArgv[2], nodeArgv[3], nodeArgv[4], nodeArgv[5]))\par
00092     {\cf19 switch} (myPID)\par
00093     \{\par
00094     {\cf19 case} -1: {\cf20 /* Error case */}\par
00095         printf({\cf22 "!! Error forking for node\\n"});\par
00096         {\cf19 break};\par
00097 \par
00098     {\cf19 case} 0: {\cf20 /* Child case */}\par
00099         TRACE(({\cf22 ":master: Spawning node\\n"}));\par
00100         execve(NODE_NAME, nodeArgv, NULL);\par
00101         TEST_ERROR\par
00102         TRACE(({\cf22 "!! Message that should never be seen\\n"}));\par
00103         {\cf19 break};\par
00104 \par
00105     {\cf19 default}:\par
00106         {\cf19 return} myPID;\par
00107     \}\par
00108 \}\par
00109 \par
00110 {\cf20 /* attach usersPID, nodesPID, par and mainLedger to shared memory, returns an array with respective IDs */}\par
00111 {\cf18 void} shared_memory_objects_init({\cf18 int} *shmArray)\par
00112 \{\par
00113     {\cf20 /* shared memory segments IDs */}\par
00114     {\cf18 int} usersPID_ID;\par
00115     {\cf18 int} nodesPID_ID;\par
00116     {\cf18 int} mainLedger_ID;\par
00117     {\cf18 int} par_ID;\par
00118 \par
00119     {\cf20 /* parameters init and read from conf file */}\par
00120     par_ID = shmget(SHM_PARAMETERS, {\cf17 sizeof}(par), 0600 | IPC_CREAT | IPC_EXCL);\par
00121     TEST_ERROR\par
00122     par = ({\cf17 struct }parameters *)shmat(par_ID, NULL, 0);\par
00123     {\cf19 if} (parse_parameters(par) == CONF_ERROR)\par
00124     \{\par
00125         TRACE(({\cf22 "-- Error reading conf file, defaulting to conf#1\\n"}));\par
00126     \}\par
00127     {\cf19 else}\par
00128     \{\par
00129         TRACE(({\cf22 "-- Conf file read successful\\n"}));\par
00130     \}\par
00131 {\cf21 #ifdef DEBUG}\par
00132     print_parameters(par);\par
00133 {\cf21 #endif}\par
00134     {\cf20 /* (users_t) and (nodes_t) arrays */}\par
00135     usersPID_ID = shmget(SHM_USERS_ARRAY,\par
00136                          (par->SO_USER_NUM) * {\cf17 sizeof}(user),\par
00137                          0600 | IPC_CREAT | IPC_EXCL);\par
00138     TEST_ERROR\par
00139     nodesPID_ID = shmget(SHM_NODES_ARRAY,\par
00140                          (par->SO_NODES_NUM) * {\cf17 sizeof}(node),\par
00141                          0600 | IPC_CREAT | IPC_EXCL);\par
00142     TEST_ERROR\par
00143     usersPID = (user *)shmat(usersPID_ID, NULL, 0);\par
00144     nodesPID = (node *)shmat(nodesPID_ID, NULL, 0);\par
00145 \par
00146     {\cf20 /* mainLedger */}\par
00147     mainLedger_ID = shmget(SHM_LEDGER,\par
00148                            (par->SO_NODES_NUM) * {\cf17 sizeof}(node),\par
00149                            0600 | IPC_CREAT | IPC_EXCL);\par
00150     TEST_ERROR\par
00151     mainLedger = (ledger *)shmat(mainLedger_ID, NULL, 0);\par
00152 \par
00153     {\cf20 /* mark for deallocation so that they are automatically}\par
00154 {\cf20      * removed once master dies}\par
00155 {\cf20      */}\par
00156     shmctl(usersPID_ID, IPC_RMID, NULL);\par
00157     shmctl(nodesPID_ID, IPC_RMID, NULL);\par
00158     shmctl(par_ID, IPC_RMID, NULL);\par
00159     shmctl(mainLedger_ID, IPC_RMID, NULL);\par
00160 \par
00161     shmArray[0] = usersPID_ID;\par
00162     shmArray[1] = nodesPID_ID;\par
00163     shmArray[2] = par_ID;\par
00164     shmArray[3] = mainLedger_ID;\par
00165 \}\par
00166 \par
00167 {\cf18 void} semaphores_init()\par
00168 \{\par
00169     semID = semget(SEM_MASTER, 1, 0600 | IPC_CREAT | IPC_EXCL);\par
00170     TEST_ERROR\par
00171     TRACE(({\cf22 ":master: semID is %d\\n"}, semID));\par
00172 \}\par
00173 \par
00174 {\cf20 /* makes an array with every IPC object ID */}\par
00175 {\cf18 void} make_ipc_array({\cf18 int} *IPC_array)\par
00176 \{\par
00177     {\cf18 int} shmIDs[SHM_NUM]; {\cf20 /* array containing every shared memory ID */}\par
00178     {\cf18 int} semIDs[1] = \{0\};\par
00179 \par
00180     shared_memory_objects_init(shmIDs);\par
00181     semIDs[0] = semID;\par
00182     {\cf20 /* semaphores_init(semIDs); */}\par
00183     memcpy(IPC_array, shmIDs, SHM_NUM * {\cf17 sizeof}({\cf18 int}));\par
00184     memcpy(IPC_array + SHM_NUM, shmIDs, SEM_NUM * {\cf17 sizeof}({\cf18 int}));\par
00185 \}\par
00186 \par
00187 {\cf20 /* CTRL-C handler */}\par
00188 {\cf18 void} master_interrupt_handle({\cf18 int} signum)\par
00189 \{\par
00190     write(1, {\cf22 "::Master:: SIGINT ricevuto\\n"}, 28);\par
00191     killpg(0, SIGINT);\par
00192 \par
00193     {\cf20 /* just to avoid printing before everyone has finished*/}\par
00194     sleep(1);\par
00195     final_print(getpid(), usersPID, nodesPID, par);\par
00196 \par
00197     {\cf20 /*}\par
00198 {\cf20     int status;}\par
00199 {\cf20 }\par
00200 {\cf20     while (wait(&status) != -1)}\par
00201 {\cf20     \{}\par
00202 {\cf20         status >> 8; /* no idea about what it does please help *}\par
00203 {\cf20     \} }\par
00204 {\cf20     */}\par
00205 \par
00206     semctl(semID, 1, IPC_RMID);\par
00207     exit(0);\par
00208 \}\par
00209 \par
00210 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
00211 \{\par
00212     pid_t myPID = getpid();\par
00213 \par
00214     {\cf18 int} uCounter, nCounter, returnVal;\par
00215     {\cf18 int} simTime;\par
00216     {\cf18 int} ipcObjectsIDs[IPC_NUM];\par
00217     {\cf18 char} **argvSpawns = malloc(8*32);\par
00218 \par
00219     {\cf17 struct }sigaction sa;\par
00220     {\cf17 struct }sembuf sops;\par
00221 \par
00222     semaphores_init();\par
00223     make_ipc_array(ipcObjectsIDs);\par
00224     make_arguments(ipcObjectsIDs, argvSpawns);\par
00225     mainLedger = ledger_init();\par
00226 \par
00227     simTime = par->SO_SIM_SEC;\par
00228 \par
00229     {\cf20 /* -- SIGNAL HANDLER --}\par
00230 {\cf20      * first set all bytes of sigation to 0}\par
00231 {\cf20      * then initialize sa.handler to a pointer to the function interrupt_handle}\par
00232 {\cf20      * then set the handler to handle SIGINT signals ((struct sigaction *oldact) = NULL)}\par
00233 {\cf20      */}\par
00234     bzero(&sa, {\cf17 sizeof}(sa));\par
00235     sa.sa_handler = master_interrupt_handle;\par
00236     sigaction(SIGINT, &sa, NULL);\par
00237 \par
00238     {\cf19 for} (nCounter = 0; nCounter < par->SO_NODES_NUM; nCounter++)\par
00239     \{\par
00240         LOCK\par
00241             nodesPID[nCounter]\par
00242                 .status = available;\par
00243         nodesPID[nCounter].pid = spawn_node(argvSpawns);\par
00244         UNLOCK\par
00245         {\cf19 if} (getpid() != myPID)\par
00246         \{\par
00247             {\cf19 return};\par
00248         \}\par
00249     \}\par
00250 \par
00251     {\cf20 /*usersPrematurelyDead = 0;*/}\par
00252     {\cf19 for} (uCounter = 0; uCounter < par->SO_USER_NUM; uCounter++)\par
00253     \{\par
00254         LOCK\par
00255             usersPID[uCounter]\par
00256                 .status = alive;\par
00257         usersPID[uCounter].pid = spawn_user(argvSpawns);\par
00258         UNLOCK\par
00259         {\cf19 if} (getpid() != myPID)\par
00260         \{\par
00261             {\cf19 switch} (returnVal = wait(NULL))\par
00262             \{\par
00263             {\cf19 case} MAX_RETRY:\par
00264                 {\cf20 /* change status in usersPID */}\par
00265                 printf({\cf22 "User %d has died because of too many retries :(\\n"}, getpid());\par
00266                 {\cf19 break};\par
00267             \}\par
00268 \par
00269             {\cf19 return};\par
00270         \}\par
00271     \}\par
00272 \par
00273     sleep(simTime);\par
00274 \par
00275     print_time_to_die();\par
00276     killpg(0, SIGINT); {\cf20 /* our sigint handler needs to do quite a lot of things to print the wall of test below */}\par
00277 \par
00278     {\cf19 return} 0;\par
00279 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/nodes.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/nodes.c}
{\xe \v src/nodes.c}
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <time.h>}\par
{\f2 #include "include/nodes.h"}\par
{\f2 #include "include/common.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for nodes.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "nodes_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parameters} * {\b par}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b user} * {\b usersPID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b node} * {\b nodesPID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ledger} * {\b mainLedger}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b semID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b queueID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b myPID}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v main\:nodes.c}
{\xe \v nodes.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b nodes.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v mainLedger\:nodes.c}
{\xe \v nodes.c\:mainLedger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ledger}* mainLedger}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b nodes.c}.}\par
}
{\xe \v myPID\:nodes.c}
{\xe \v nodes.c\:myPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t myPID}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b nodes.c}.}\par
}
{\xe \v nodesPID\:nodes.c}
{\xe \v nodes.c\:nodesPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b node}* nodesPID}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b nodes.c}.}\par
}
{\xe \v par\:nodes.c}
{\xe \v nodes.c\:par}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b parameters}* par}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b nodes.c}.}\par
}
{\xe \v queueID\:nodes.c}
{\xe \v nodes.c\:queueID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int queueID}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b nodes.c}.}\par
}
{\xe \v semID\:nodes.c}
{\xe \v nodes.c\:semID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int semID}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b nodes.c}.}\par
}
{\xe \v usersPID\:nodes.c}
{\xe \v nodes.c\:usersPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b user}* usersPID}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b nodes.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nodes.c\par \pard\plain 
{\tc\tcl2 \v src/nodes.c}
{\xe \v src/nodes.c}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <time.h>}\par
00002 {\cf21 #include "include/nodes.h"}\par
00003 {\cf21 #include "include/common.h"}\par
00004 \par
00005 {\cf20 /* transaction pool==transaction's array */}\par
00006 \par
00007 {\cf20 /*}\par
00008 {\cf20  ======================}\par
00009 {\cf20  || GLOBAL VARIABLES ||}\par
00010 {\cf20  ======================}\par
00011 {\cf20  */}\par
00012 \par
00013 {\cf20 /* parameters of simulation */}\par
00014 {\cf17 struct }parameters *par;\par
00015 user *usersPID;\par
00016 node *nodesPID;\par
00017 ledger *mainLedger;\par
00018 \par
00019 {\cf18 int} semID;\par
00020 {\cf18 int} queueID;\par
00021 \par
00022 pid_t myPID;\par
00023 \par
00024 {\cf20 /*void Node()}\par
00025 {\cf20 \{}\par
00026 {\cf20     int t_pool[SO_TP_SIZE];}\par
00027 {\cf20     checkTpFull(t_pool[SO_TP_SIZE]);}\par
00028 {\cf20     arrayProcesser();}\par
00029 {\cf20     createBlock();}\par
00030 {\cf20 \}}\par
00031 {\cf20 }\par
00032 {\cf20 int checkTpFull(int t_pool[SO_TP_SIZE])}\par
00033 {\cf20 \{}\par
00034 {\cf20     if (t_pool[SO_TP_SIZE] == SO_TP_SIZE)}\par
00035 {\cf20     \{}\par
00036 {\cf20         return 0;}\par
00037 {\cf20     \}}\par
00038 {\cf20 \}}\par
00039 {\cf20 }\par
00040 {\cf20 void arrayProcesser()}\par
00041 {\cf20 \{}\par
00042 {\cf20     int i = 0;}\par
00043 {\cf20     for (i; i < SO_TP_SIZE - 1; i++)}\par
00044 {\cf20     \{}\par
00045 {\cf20     \}}\par
00046 {\cf20 \}}\par
00047 {\cf20 }\par
00048 {\cf20 int createBlock()}\par
00049 {\cf20 \{}\par
00050 {\cf20 \}}\par
00051 {\cf20 }\par
00052 {\cf20 int sleepMethod(int argc, char *argv[])}\par
00053 {\cf20 \{}\par
00054 {\cf20     randSleepTime.tv_sec = 0;}\par
00055 {\cf20     randSleepTime.tv_nsec = RAND(SO_MIN_TRANS_PROC_NSEC, SO_MAX_TRANS_PROC_NSEC);}\par
00056 {\cf20 \}*/}\par
00057 \par
00058 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
00059 \{\par
00060     {\cf18 int} myPID = getpid();\par
00061     printf({\cf22 "Node %d has finished\\n"}, myPID);\par
00062     {\cf19 return} 0;\par
00063 \par
00064     queueID = msgget(myPID, IPC_CREAT | 0600);\par
00065 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/parser.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/parser.c}
{\xe \v src/parser.c}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "include/common.h"}\par
{\f2 #include "utils/debug.h"}\par
{\f2 #include "include/parser.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for parser.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "parser_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assign_defaults} (struct {\b parameters} *{\b par})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b parse_parameters} (struct {\b parameters} *{\b par})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v assign_defaults\:parser.c}
{\xe \v parser.c\:assign_defaults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assign_defaults (struct {\b parameters} *  {\i par})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b parser.c}.}\par
}
{\xe \v parse_parameters\:parser.c}
{\xe \v parser.c\:parse_parameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int parse_parameters (struct {\b parameters} *  {\i par})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b parser.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parser.c\par \pard\plain 
{\tc\tcl2 \v src/parser.c}
{\xe \v src/parser.c}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "include/common.h"}\par
00002 {\cf21 #include "utils/debug.h"}\par
00003 {\cf21 #include "include/parser.h"}\par
00004 \par
00005 {\cf20 /*enum paramID}\par
00006 {\cf20 \{}\par
00007 {\cf20     SO_USER_NUM,}\par
00008 {\cf20     SO_NODES_NUM,}\par
00009 {\cf20     SO_NUM_FRIENDS,}\par
00010 {\cf20     SO_SIM_SEC,}\par
00011 {\cf20     SO_HOPS,}\par
00012 {\cf20     SO_BUDGET_INIT,}\par
00013 {\cf20     SO_REWARD,}\par
00014 {\cf20     SO_MIN_TRANS_GEN_NSEC,}\par
00015 {\cf20     SO_MAX_TRANS_GEN_NSEC,}\par
00016 {\cf20     SO_RETRY,}\par
00017 {\cf20     SO_TP_SIZE,}\par
00018 {\cf20     SO_MIN_TRANS_PROC_NSEC,}\par
00019 {\cf20     SO_MAX_TRANS_PROC_NSEC}\par
00020 {\cf20 \};}\par
00021 {\cf20 }\par
00022 {\cf20 struct parameters}\par
00023 {\cf20 \{}\par
00024 {\cf20     char *string;}\par
00025 {\cf20     enum paramID id;}\par
00026 {\cf20 \} paramList[] = \{}\par
00027 {\cf20     \{"SO_USER_NUM", SO_USER_NUM\},}\par
00028 {\cf20     \{"SO_NODES_NUM", SO_NODES_NUM\},}\par
00029 {\cf20     \{"SO_NUM_FRIENDS", SO_NUM_FRIENDS\},}\par
00030 {\cf20     \{"SO_SIM_SEC", SO_SIM_SEC\},}\par
00031 {\cf20     \{"SO_HOPS", SO_HOPS\},}\par
00032 {\cf20     \{"SO_BUDGET_INIT", SO_BUDGET_INIT\},}\par
00033 {\cf20     \{"SO_REWARD", SO_REWARD\},}\par
00034 {\cf20     \{"SO_MIN_TRANS_GEN_NSEC", SO_MIN_TRANS_GEN_NSEC\},}\par
00035 {\cf20     \{"SO_MAX_TRANS_GEN_NSEC", SO_MAX_TRANS_GEN_NSEC\},}\par
00036 {\cf20     \{"SO_RETRY", SO_RETRY\},}\par
00037 {\cf20     \{"SO_TP_SIZE", SO_TP_SIZE\},}\par
00038 {\cf20     \{"SO_MIN_TRANS_PROC_NSEC", SO_MIN_TRANS_PROC_NSEC\},}\par
00039 {\cf20     \{"SO_MAX_TRANS_PROC_NSEC", SO_MAX_TRANS_PROC_NSEC\}\};*/}\par
00040 \par
00041 {\cf18 void} assign_defaults({\cf17 struct} parameters *par)\par
00042 \{\par
00043     par->SO_USER_NUM = 100;\par
00044     par->SO_NODES_NUM = 10;\par
00045     par->SO_BUDGET_INIT = 1000;\par
00046     par->SO_REWARD = 1;\par
00047     par->SO_MIN_TRANS_GEN_NSEC = 100000000;\par
00048     par->SO_MAX_TRANS_GEN_NSEC = 200000000;\par
00049     par->SO_RETRY = 20;\par
00050     par->SO_TP_SIZE = 1000;\par
00051     par->SO_MIN_TRANS_PROC_NSEC = 100000000;\par
00052     par->SO_MAX_TRANS_PROC_NSEC = 200000000;\par
00053     par->SO_SIM_SEC = 10;\par
00054     par->SO_FRIENDS_NUM = 3;\par
00055     par->SO_HOPS = 10;\par
00056 \}\par
00057 \par
00058 {\cf18 int} parse_parameters({\cf17 struct} parameters *par)\par
00059 \{\par
00060     FILE *fp;\par
00061 \par
00062     {\cf20 /*enum paramID tokensE;*/}\par
00063 \par
00064     {\cf20 /* longer than NUM_PARAMETERS to account for comments and such */}\par
00065     {\cf18 char} buffer[128];\par
00066     {\cf18 int} i = 0;\par
00067 \par
00068     {\cf18 char} *tokens[NUM_PARAMETERS];\par
00069     {\cf18 unsigned} {\cf18 long} values[NUM_PARAMETERS]; {\cf20 /* downcast is easy, upcast not so much */}\par
00070 \par
00071     {\cf20 /*struct parameters *par = malloc(sizeof(struct parameters));*/}\par
00072     assign_defaults(par);\par
00073     TRACE(({\cf22 ":parser: assigned defaults\\n"}));\par
00074 \par
00075     fp = fopen(CONF_FILE, {\cf22 "r"});\par
00076     {\cf19 if} (fp == NULL)\par
00077         {\cf19 return} CONF_ERROR; {\cf20 /* default config */}\par
00078 \par
00079     {\cf19 while} (fgets(buffer, 127, fp))\par
00080     \{\par
00081         tokens[i] = malloc(64);\par
00082         {\cf20 /*values[i] = malloc(sizeof(int));*/}\par
00083 \par
00084         sscanf(buffer, {\cf22 "%s %lu"}, tokens[i], &values[i]);\par
00085 \par
00086         i++;\par
00087     \}\par
00088 \par
00089     {\cf19 for} (i = 0; i < NUM_PARAMETERS; i++)\par
00090     \{\par
00091         {\cf20 /*switch(tokensE)\{}\par
00092 {\cf20             case SO_USER_NUM:}\par
00093 {\cf20             case SO_NODES_NUM:}\par
00094 {\cf20             case SO_NUM_FRIENDS:}\par
00095 {\cf20             case SO_SIM_SEC:}\par
00096 {\cf20             case SO_HOPS:}\par
00097 {\cf20             case SO_BUDGET_INIT:}\par
00098 {\cf20             case SO_REWARD:}\par
00099 {\cf20             case SO_MIN_TRANS_GEN_NSEC:}\par
00100 {\cf20             case SO_MAX_TRANS_GEN_NSEC:}\par
00101 {\cf20             case SO_RETRY:}\par
00102 {\cf20             case SO_TP_SIZE:}\par
00103 {\cf20             case SO_MIN_TRANS_PROC_NSEC:}\par
00104 {\cf20             case SO_MAX_TRANS_PROC_NSEC:}\par
00105 {\cf20             default:}\par
00106 {\cf20             break;}\par
00107 {\cf20         \} it can be implemented in a nicer to look at way, but not now */}\par
00108 \par
00109         {\cf20 /*printf("%s\\n",tokens[i]);*/}\par
00110 \par
00111         {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_USER_NUM"}))\par
00112         \{\par
00113             par->SO_USER_NUM = values[i];\par
00114         \}\par
00115         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_NODES_NUM"}))\par
00116         \{\par
00117             par->SO_NODES_NUM = values[i];\par
00118         \}\par
00119         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_BUDGET_INIT"}))\par
00120         \{\par
00121             par->SO_BUDGET_INIT = values[i];\par
00122         \}\par
00123         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_REWARD"}))\par
00124         \{\par
00125             {\cf20 /* given that it is a char it's very easy to get it out of bound,}\par
00126 {\cf20              * I prefer straight up normalizing it rather than resetting everything}\par
00127 {\cf20              * because of ERANGE}\par
00128 {\cf20              */}\par
00129             {\cf19 if} (values[i] >= 0 && values[i] <= 100)\par
00130                 par->SO_REWARD = values[i];\par
00131             {\cf19 else}\par
00132                 printf({\cf22 ":parser: SO_REWARD incorrect value, resetting default\\n"});\par
00133         \}\par
00134         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_MIN_TRANS_GEN_NSEC"}))\par
00135         \{\par
00136             par->SO_MIN_TRANS_GEN_NSEC = values[i];\par
00137         \}\par
00138         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_MAX_TRANS_GEN_NSEC"}))\par
00139         \{\par
00140             par->SO_MAX_TRANS_GEN_NSEC = values[i];\par
00141         \}\par
00142         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_RETRY"}))\par
00143         \{\par
00144             par->SO_RETRY = values[i];\par
00145         \}\par
00146         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_TP_SIZE"}))\par
00147         \{\par
00148             par->SO_TP_SIZE = values[i];\par
00149         \}\par
00150         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_MIN_TRANS_PROC_NSEC"}))\par
00151         \{\par
00152             par->SO_MIN_TRANS_PROC_NSEC = values[i];\par
00153         \}\par
00154         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_MAX_TRANS_PROC_NSEC"}))\par
00155         \{\par
00156             par->SO_MAX_TRANS_PROC_NSEC = values[i];\par
00157         \}\par
00158         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_SIM_SEC"}))\par
00159         \{\par
00160             par->SO_SIM_SEC = values[i];\par
00161         \}\par
00162         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_FRIENDS_NUM"}))\par
00163         \{\par
00164             par->SO_FRIENDS_NUM = values[i];\par
00165         \}\par
00166         {\cf19 else} {\cf19 if} (!strcmp(tokens[i], {\cf22 "SO_HOPS"}))\par
00167         \{\par
00168             par->SO_HOPS = values[i];\par
00169         \}\par
00170     \}\par
00171 \par
00172     {\cf20 /* -- CONF ERRORS CORRECTION -- */}\par
00173     {\cf19 if} (errno == ERANGE)\par
00174     \{\par
00175         TRACE(({\cf22 ":parser: one or multiple values out of bound, resetting defaults\\n"}));\par
00176         assign_defaults(par);\par
00177     \}\par
00178     {\cf19 if} (par->SO_MIN_TRANS_GEN_NSEC > par->SO_MAX_TRANS_GEN_NSEC)\par
00179     \{\par
00180         TRACE(({\cf22 ":parser: SO_MIN_TRANS_GEN_NSEC greater than SO_MAX_TRANS_GEN_NSEC, will be normalized\\n"}));\par
00181         par->SO_MIN_TRANS_GEN_NSEC = par->SO_MAX_TRANS_GEN_NSEC;\par
00182     \}\par
00183     {\cf19 if} (par->SO_MIN_TRANS_PROC_NSEC > par->SO_MAX_TRANS_PROC_NSEC)\par
00184     \{\par
00185         TRACE(({\cf22 ":parser: SO_MIN_TRANS_PROC_NSEC greater than SO_MAX_TRANS_PROC_NSEC, will be normalized\\n"}));\par
00186         par->SO_MIN_TRANS_PROC_NSEC = par->SO_MAX_TRANS_PROC_NSEC;\par
00187     \}\par
00188 \par
00189     TRACE(({\cf22 "--------------------------------------------\\n----------- Configuration input ------------\\n"}));\par
00190     {\cf19 for} (i = 0; i < NUM_PARAMETERS; i++)\par
00191     \{\par
00192         TRACE(({\cf22 "%s %lu\\n"}, tokens[i], values[i]));\par
00193         free(tokens[i]);\par
00194     \}\par
00195     TRACE(({\cf22 "--------------------------------------------\\n"}));\par
00196 \par
00197     fclose(fp);\par
00198 \par
00199     {\cf19 return} 0;\par
00200 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/print.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/print.c}
{\xe \v src/print.c}
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "include/common.h"}\par
{\f2 #include "include/print.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for print.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "print_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_time_to_die} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_user_nodes_table} (pid_t mainPID, {\b user} *userPID, {\b node} *nodePID, struct {\b parameters} *{\b par})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_kill_signal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_user_balance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_node_balance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_num_aborted} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_num_blocks} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_transactions_still_in_pool} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b final_print} (pid_t masterPID, {\b user} *{\b usersPID}, {\b node} *{\b nodesPID}, struct {\b parameters} *{\b par})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_parameters} (struct {\b parameters} *{\b par})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_transaction} (FILE *fp, {\b transaction} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_block} (FILE *fp, {\b block} *b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_ledger} ({\b ledger} *l)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b formatted_timestamp} (FILE *fp)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v final_print\:print.c}
{\xe \v print.c\:final_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void final_print (pid_t  {\i masterPID}, {\b user} *  {\i usersPID}, {\b node} *  {\i nodesPID}, struct {\b parameters} *  {\i par})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b print.c}.}\par
}
{\xe \v formatted_timestamp\:print.c}
{\xe \v print.c\:formatted_timestamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void formatted_timestamp (FILE *  {\i fp})}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 157} of file {\b print.c}.}\par
}
{\xe \v print_block\:print.c}
{\xe \v print.c\:print_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_block (FILE *  {\i fp}, {\b block} *  {\i b})}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 127} of file {\b print.c}.}\par
}
{\xe \v print_kill_signal\:print.c}
{\xe \v print.c\:print_kill_signal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_kill_signal ()}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_ledger\:print.c}
{\xe \v print.c\:print_ledger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_ledger ({\b ledger} *  {\i l})}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 143} of file {\b print.c}.}\par
}
{\xe \v print_node_balance\:print.c}
{\xe \v print.c\:print_node_balance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_node_balance ()}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_num_aborted\:print.c}
{\xe \v print.c\:print_num_aborted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_num_aborted ()}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_num_blocks\:print.c}
{\xe \v print.c\:print_num_blocks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_num_blocks ()}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_parameters\:print.c}
{\xe \v print.c\:print_parameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_parameters (struct {\b parameters} *  {\i par})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b print.c}.}\par
}
{\xe \v print_time_to_die\:print.c}
{\xe \v print.c\:print_time_to_die}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_time_to_die ()}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 7} of file {\b print.c}.}\par
}
{\xe \v print_transaction\:print.c}
{\xe \v print.c\:print_transaction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_transaction (FILE *  {\i fp}, {\b transaction} *  {\i t})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 98} of file {\b print.c}.}\par
}
{\xe \v print_transactions_still_in_pool\:print.c}
{\xe \v print.c\:print_transactions_still_in_pool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_transactions_still_in_pool ()}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_user_balance\:print.c}
{\xe \v print.c\:print_user_balance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_user_balance ()}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_user_nodes_table\:print.c}
{\xe \v print.c\:print_user_nodes_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_user_nodes_table (pid_t  {\i mainPID}, {\b user} *  {\i userPID}, {\b node} *  {\i nodePID}, struct {\b parameters} *  {\i par})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b print.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
print.c\par \pard\plain 
{\tc\tcl2 \v src/print.c}
{\xe \v src/print.c}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 \par
00002 {\cf21 #include "include/common.h"}\par
00003 {\cf21 #include "include/print.h"}\par
00004 \par
00005 {\cf20 /* #define HYPHEN "--------" */}\par
00006 \par
00007 {\cf18 void} print_time_to_die()\par
00008 \{\par
00009     printf({\cf22 "\\n***********************\\n|| The time has come ||\\n***********************\\n\\n"});\par
00010 \}\par
00011 \par
00012 {\cf18 void} print_user_nodes_table(pid_t mainPID, user *userPID, node *nodePID, {\cf17 struct} parameters *par)\par
00013 \{\par
00014     {\cf18 int} userNum = par->SO_USER_NUM;\par
00015     {\cf18 int} nodesNum = par->SO_NODES_NUM;\par
00016 \par
00017     printf({\cf22 "\\n ------- Master Process PID is %d ----------\\n"}, mainPID);\par
00018     printf({\cf22 "|                                             |\\n"});\par
00019     printf({\cf22 " - Type ------- PID --------- Status ---------\\n"});\par
00020     printf({\cf22 " ---------------------------------------------\\n"});\par
00021     {\cf19 while} (userNum--)\par
00022     \{\par
00023         printf({\cf22 "|  User         %d            %d             |\\n"}, userPID[userNum].pid, userPID[userNum].status);\par
00024     \}\par
00025     printf({\cf22 " ---------------------------------------------\\n"});\par
00026     {\cf19 while} (nodesNum--)\par
00027     \{\par
00028         printf({\cf22 "|  Node         %d            %d             |\\n"}, nodePID[nodesNum].pid, nodePID[nodesNum].status);\par
00029     \}\par
00030     printf({\cf22 " ---------------------------------------------\\n"});\par
00031 \}\par
00032 \par
00033 {\cf18 void} print_kill_signal();\par
00034 {\cf18 void} print_user_balance();\par
00035 {\cf18 void} print_node_balance();\par
00036 {\cf18 void} print_num_aborted();\par
00037 {\cf18 void} print_num_blocks();\par
00038 {\cf18 void} print_transactions_still_in_pool();\par
00039 \par
00040 {\cf18 void} final_print(pid_t masterPID, user *usersPID, node *nodesPID, {\cf17 struct} parameters *par)\par
00041 \{\par
00042     print_user_nodes_table(masterPID, usersPID, nodesPID, par);\par
00043     {\cf20 /*print_kill_signal();}\par
00044 {\cf20     print_user_balance();}\par
00045 {\cf20     print_node_balance();*}\par
00046 {\cf20     print_num_aborted();}\par
00047 {\cf20     /*}\par
00048 {\cf20     print_num_blocks();}\par
00049 {\cf20     print_transactions_still_in_pool();*/}\par
00050 \}\par
00051 \par
00052 {\cf18 void} print_parameters({\cf17 struct} parameters *par)\par
00053 \{\par
00054     printf({\cf22 "--------------------------------------------\\n----------- Configuration value ------------\\n"});\par
00055     printf({\cf22 "SO_USER_NUM->%u\\n"}, par->SO_USER_NUM);\par
00056     printf({\cf22 "SO_NODES_NUM->%u\\n"}, par->SO_NODES_NUM);\par
00057     printf({\cf22 "SO_BUDGET_INIT->%u\\n"}, par->SO_BUDGET_INIT);\par
00058     printf({\cf22 "SO_REWARD->%u\\n"}, par->SO_REWARD);\par
00059     printf({\cf22 "SO_MIN_TRANS_GEN_NSEC->%lu\\n"}, par->SO_MIN_TRANS_GEN_NSEC);\par
00060     printf({\cf22 "SO_MAX_TRANS_GEN_NSEC->%lu\\n"}, par->SO_MAX_TRANS_GEN_NSEC);\par
00061     printf({\cf22 "SO_RETRY->%u\\n"}, par->SO_RETRY);\par
00062     printf({\cf22 "SO_TP_SIZE->%u\\n"}, par->SO_TP_SIZE);\par
00063     printf({\cf22 "SO_MIN_TRANS_PROC_NSEC->%lu\\n"}, par->SO_MIN_TRANS_PROC_NSEC);\par
00064     printf({\cf22 "SO_MAX_TRANS_PROC_NSEC->%lu\\n"}, par->SO_MAX_TRANS_PROC_NSEC);\par
00065     printf({\cf22 "SO_SIM_SEC->%u\\n"}, par->SO_SIM_SEC);\par
00066     printf({\cf22 "SO_FRIENDS_NUM->%u\\n"}, par->SO_FRIENDS_NUM);\par
00067     printf({\cf22 "SO_HOPS->%u\\n"}, par->SO_HOPS);\par
00068     printf({\cf22 "--------------------------------------------\\n"});\par
00069 \}\par
00070 \par
00071 {\cf20 /*void print_kill_signal(mainPID, userPid /* other process *)}\par
00072 {\cf20 \{}\par
00073 {\cf20     printf("-----PROCESS PID NUM %d KILL----", mainPID);}\par
00074 {\cf20 \}}\par
00075 {\cf20 void print_user_balance(int balance)}\par
00076 {\cf20 \{}\par
00077 {\cf20     printf("-----CURRENT BALANCE IS:%d-----", balance);}\par
00078 {\cf20 \}}\par
00079 {\cf20 }\par
00080 {\cf20 void print_node_balance(int balamce)}\par
00081 {\cf20 \{}\par
00082 {\cf20     printf("----CURRENT NODE BALANCE IS:%d", balance);}\par
00083 {\cf20 \} */}\par
00084 {\cf20 /*void print_num_aborted()}\par
00085 {\cf20 \{}\par
00086 {\cf20     printf("\\n-- Num of aborted users: %d\\n", usersPrematurelyDead);}\par
00087 {\cf20 \}}\par
00088 {\cf20 /*}\par
00089 {\cf20 void print_num_blocks()}\par
00090 {\cf20 \{}\par
00091 {\cf20     printf("---TOTAL BLOCK:%d");}\par
00092 {\cf20 \}}\par
00093 {\cf20 void print_transactions_still_in_pool()}\par
00094 {\cf20 \{}\par
00095 {\cf20     printf("----TOTAL TRANSACTION STILL IN POLL:%d----");}\par
00096 {\cf20 \}*/}\par
00097 \par
00098 {\cf18 void} print_transaction(FILE *fp, transaction *t)\par
00099 \{\par
00100     {\cf18 char} tmp[10];\par
00101     {\cf19 switch} (t->status)\par
00102     \{\par
00103     {\cf19 case} pending:\par
00104         strcpy(tmp, {\cf22 "pending"});\par
00105         {\cf19 break};\par
00106     {\cf19 case} aborted:\par
00107         strcpy(tmp, {\cf22 "aborted"});\par
00108         {\cf19 break};\par
00109     {\cf19 case} confirmed:\par
00110         strcpy(tmp, {\cf22 "confirmed"});\par
00111         {\cf19 break};\par
00112     {\cf19 case} processing:\par
00113         strcpy(tmp, {\cf22 "confirmed"});\par
00114         {\cf19 break};\par
00115     \}\par
00116 \par
00117     fprintf(fp, {\cf22 " -------------------------- \\n"});\par
00118     formatted_timestamp(fp);\par
00119     fprintf(fp, {\cf22 "    %s"}, tmp);\par
00120     fprintf(fp, {\cf22 "|  %d --> %d\\n"}, t->sender, t->receiver);\par
00121     fprintf(fp, {\cf22 "|  Amount:    %d\\n"}, t->amount);\par
00122     fprintf(fp, {\cf22 "|  Reward:    %d\\n"}, t->reward);\par
00123     fprintf(fp, {\cf22 "|  Reward:    %d\\n"}, t->reward);\par
00124     fprintf(fp, {\cf22 " -------------------------- \\n"});\par
00125 \}\par
00126 \par
00127 {\cf18 void} print_block(FILE *fp, block *b)\par
00128 \{\par
00129     {\cf18 int} i;\par
00130     block *curr;\par
00131 \par
00132     {\cf19 for} (curr = b; curr != NULL; curr = (block*)curr->next)\par
00133     \{\par
00134         fprintf(fp, {\cf22 "= %.3d =======================\\n"}, b->blockIndex);\par
00135         {\cf19 for} (i = 0; i < SO_BLOCK_SIZE; i++)\par
00136         \{\par
00137             print_transaction(fp, &(b->transList[i]));\par
00138         \}\par
00139         fprintf(fp, {\cf22 "============================\\n"});\par
00140     \}\par
00141 \}\par
00142 \par
00143 {\cf18 void} print_ledger(ledger *l)\par
00144 \{\par
00145     FILE *fp = fopen({\cf22 "ledger.txt"}, {\cf22 "w"});\par
00146     {\cf19 if} (fp == NULL)\par
00147     \{\par
00148         printf({\cf22 ":print: coudln't open file pointer ledger.txt\\n"});\par
00149     \}\par
00150 \par
00151     fprintf(fp, {\cf22 "Registry Real Size is %d blocks\\n"}, l->registryCurrSize);\par
00152     print_block(fp, l->head);\par
00153     fclose(fp);\par
00154 \}\par
00155 \par
00156 {\cf20 /* print without /n */}\par
00157 {\cf18 void} formatted_timestamp(FILE *fp)\par
00158 \{\par
00159     printf({\cf22 "Hey"});\par
00160     {\cf20 /*clock_t tic = clock();}\par
00161 {\cf20     clock_t start = clock();}\par
00162 {\cf20     clock_t stop = clock();}\par
00163 {\cf20 }\par
00164 {\cf20     time_t rawtime;}\par
00165 {\cf20     time_t now;}\par
00166 {\cf20     struct tm *info;}\par
00167 {\cf20     struct tm *today;}\par
00168 {\cf20     double elapsed;}\par
00169 {\cf20     char buf[128];}\par
00170 {\cf20 }\par
00171 {\cf20     time(&now);}\par
00172 {\cf20     today = localtime(&now);}\par
00173 {\cf20     strftime(buf, 128, "%Y/%m/%d", today);}\par
00174 {\cf20     printf("%s\\n", buf);}\par
00175 {\cf20 }\par
00176 {\cf20     elapsed = (double)(stop - start) * 1000.0 / CLOCKS_PER_SEC; /* time ./a.out*/}\par
00177 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/users.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/users.c}
{\xe \v src/users.c}
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "include/common.h"}\par
{\f2 #include "include/users.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for users.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "users_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REWARD}(amount,  reward)\~ (ceil(((reward * (amount)) / 100.0)))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b get_pid_userIndex} (int PID_toSearch)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b get_random_userPID} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b get_random_nodePID} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update_status} (int statusToSet)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b attach_ipc_objects} (char **argv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b queue_to_pid} (pid_t nodePID)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b transaction_init} (pid_t userPID, int amount, int reward)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b signal_handlers_init} (struct sigaction *saUSR1, struct sigaction *saINT)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b send_transaction} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b user_transactions_handle} (int signum)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b user_interrupt_handle} (int signum)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char *argv[])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parameters} * {\b par}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b user} * {\b usersPID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b node} * {\b nodesPID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ledger} * {\b mainLedger}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b semID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b queueID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b currBalance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pid_t {\b myPID}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b outGoingTransactions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b transaction} {\b currTrans}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v REWARD\:users.c}
{\xe \v users.c\:REWARD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REWARD( amount,  reward)\~ (ceil(((reward * (amount)) / 100.0)))}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4} of file {\b users.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v attach_ipc_objects\:users.c}
{\xe \v users.c\:attach_ipc_objects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void attach_ipc_objects (char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 120} of file {\b users.c}.}\par
}
{\xe \v get_pid_userIndex\:users.c}
{\xe \v users.c\:get_pid_userIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int get_pid_userIndex (int  {\i PID_toSearch})}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b users.c}.}\par
}
{\xe \v get_random_nodePID\:users.c}
{\xe \v users.c\:get_random_nodePID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t get_random_nodePID ()}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b users.c}.}\par
}
{\xe \v get_random_userPID\:users.c}
{\xe \v users.c\:get_random_userPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t get_random_userPID ()}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b users.c}.}\par
}
{\xe \v main\:users.c}
{\xe \v users.c\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char *  {\i argv}[])}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 233} of file {\b users.c}.}\par
}
{\xe \v queue_to_pid\:users.c}
{\xe \v users.c\:queue_to_pid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void queue_to_pid (pid_t  {\i nodePID})}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 138} of file {\b users.c}.}\par
}
{\xe \v send_transaction\:users.c}
{\xe \v users.c\:send_transaction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int send_transaction ()}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 176} of file {\b users.c}.}\par
}
{\xe \v signal_handlers_init\:users.c}
{\xe \v users.c\:signal_handlers_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void signal_handlers_init (struct sigaction *  {\i saUSR1}, struct sigaction *  {\i saINT})}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 160} of file {\b users.c}.}\par
}
{\xe \v transaction_init\:users.c}
{\xe \v users.c\:transaction_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void transaction_init (pid_t  {\i userPID}, int  {\i amount}, int  {\i reward})}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 146} of file {\b users.c}.}\par
}
{\xe \v update_status\:users.c}
{\xe \v users.c\:update_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void update_status (int  {\i statusToSet})}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 101} of file {\b users.c}.}\par
}
{\xe \v user_interrupt_handle\:users.c}
{\xe \v users.c\:user_interrupt_handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void user_interrupt_handle (int  {\i signum})}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 227} of file {\b users.c}.}\par
}
{\xe \v user_transactions_handle\:users.c}
{\xe \v users.c\:user_transactions_handle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void user_transactions_handle (int  {\i signum})}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 217} of file {\b users.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v currBalance\:users.c}
{\xe \v users.c\:currBalance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int currBalance}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b users.c}.}\par
}
{\xe \v currTrans\:users.c}
{\xe \v users.c\:currTrans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b transaction} currTrans}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b users.c}.}\par
}
{\xe \v mainLedger\:users.c}
{\xe \v users.c\:mainLedger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ledger}* mainLedger}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b users.c}.}\par
}
{\xe \v myPID\:users.c}
{\xe \v users.c\:myPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pid_t myPID}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b users.c}.}\par
}
{\xe \v nodesPID\:users.c}
{\xe \v users.c\:nodesPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b node}* nodesPID}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b users.c}.}\par
}
{\xe \v outGoingTransactions\:users.c}
{\xe \v users.c\:outGoingTransactions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int outGoingTransactions}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b users.c}.}\par
}
{\xe \v par\:users.c}
{\xe \v users.c\:par}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b parameters}* par}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b users.c}.}\par
}
{\xe \v queueID\:users.c}
{\xe \v users.c\:queueID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int queueID}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b users.c}.}\par
}
{\xe \v semID\:users.c}
{\xe \v users.c\:semID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int semID}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b users.c}.}\par
}
{\xe \v usersPID\:users.c}
{\xe \v users.c\:usersPID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b user}* usersPID}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b users.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
users.c\par \pard\plain 
{\tc\tcl2 \v src/users.c}
{\xe \v src/users.c}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "include/common.h"}\par
00002 {\cf21 #include "include/users.h"}\par
00003 \par
00004 {\cf21 #define REWARD(amount, reward) (ceil(((reward * (amount)) / 100.0)))}\par
00005 {\cf20 /*}\par
00006 {\cf20  * NON active wait, the time is equivalent to the}\par
00007 {\cf20  * verification algorithms that happen in "real" blockchains}\par
00008 {\cf20  */}\par
00009 \par
00010 {\cf20 /*}\par
00011 {\cf20  * Need to implement a way to send s transaction}\par
00012 {\cf20  * signal, we can utilize a user defined signal}\par
00013 {\cf20  * handler.}\par
00014 {\cf20  * We also need to account for the signal SIGINT (CTRL-C).}\par
00015 {\cf20  * Maybe we can implement some sort of graphic way to visualize}\par
00016 {\cf20  * child processes (nodes and user) so that we can choose}\par
00017 {\cf20  * the PID on which to send the signal to.}\par
00018 {\cf20  * -- user-defined signal handlers are inherited by the child processes --}\par
00019 {\cf20  * so it's better to handle them in the master program}\par
00020 {\cf20  */}\par
00021 \par
00022 {\cf20 /* void wait_for_incoming_transaction() */}\par
00023 \par
00024 {\cf20 /*}\par
00025 {\cf20  ======================}\par
00026 {\cf20  || GLOBAL VARIABLES ||}\par
00027 {\cf20  ======================}\par
00028 {\cf20  */}\par
00029 \par
00030 {\cf20 /* parameters of simulation */}\par
00031 {\cf17 struct }parameters *par;\par
00032 user *usersPID;\par
00033 node *nodesPID;\par
00034 ledger *mainLedger;\par
00035 \par
00036 {\cf18 int} semID;\par
00037 {\cf18 int} queueID;\par
00038 \par
00039 {\cf18 int} currBalance;\par
00040 pid_t myPID;\par
00041 {\cf18 int} outGoingTransactions; {\cf20 /* accumulate amount of transactions sent but yet to be received */}\par
00042 transaction currTrans;\par
00043 \par
00044 {\cf20 /*}\par
00045 {\cf20  ======================}\par
00046 {\cf20  ||    FUNCTIONS     ||}\par
00047 {\cf20  ======================}\par
00048 {\cf20  */}\par
00049 \par
00050 {\cf20 /* returns index of where user with PID_toSearch is located in usersPID[] */}\par
00051 {\cf18 int} get_pid_userIndex({\cf18 int} PID_toSearch)\par
00052 \{\par
00053     {\cf18 int} i;\par
00054 \par
00055     {\cf19 for} (i = 0; i < par->SO_USER_NUM; i++)\par
00056     \{\par
00057         {\cf19 if} (usersPID[i].pid == myPID)\par
00058             {\cf19 return} i;\par
00059     \}\par
00060 \par
00061     {\cf19 return} -1;\par
00062 \}\par
00063 \par
00064 {\cf20 /* returns a random PID of a non-dead user from usersPID[] */}\par
00065 pid_t get_random_userPID()\par
00066 \{\par
00067     {\cf18 int} index;\par
00068     pid_t val = 0;\par
00069 \par
00070     {\cf19 do}\par
00071     \{\par
00072         index = RAND(0, par->SO_USER_NUM - 1);\par
00073         TRACE(({\cf22 ":user: %d index is %d\\n"}, myPID, index))\par
00074         TRACE(({\cf22 ":users: %d usersPID[%d]\\n"}, myPID, index));\par
00075         {\cf19 if} (usersPID[index].status != dead)\par
00076             val = usersPID[index].pid;\par
00077     \} {\cf19 while} (!val);\par
00078 \par
00079     {\cf19 return} val;\par
00080 \}\par
00081 \par
00082 {\cf20 /* returns a random PID of an available node from nodesPID[] */}\par
00083 pid_t get_random_nodePID()\par
00084 \{\par
00085     {\cf18 int} index;\par
00086     pid_t val = 0;\par
00087 \par
00088     {\cf19 do}\par
00089     \{\par
00090         index = RAND(0, par->SO_NODES_NUM - 1);\par
00091         TRACE(({\cf22 ":user: %d index is %d\\n"}, myPID, index))\par
00092         TRACE(({\cf22 ":users: %d nodesPID[%d]\\n"}, myPID, index));\par
00093         {\cf19 if} (nodesPID[index].status == available)\par
00094             val = nodesPID[index].pid;\par
00095     \} {\cf19 while} (!val);\par
00096 \par
00097     {\cf19 return} val;\par
00098 \}\par
00099 \par
00100 {\cf20 /* safely updates status of user to statusToSet: 0 alive, 1 broke, 2 dead */}\par
00101 {\cf18 void} update_status({\cf18 int} statusToSet)\par
00102 \{\par
00103     {\cf18 int} i = get_pid_userIndex(myPID);\par
00104     {\cf19 if} (i == -1)\par
00105     \{\par
00106         TRACE(({\cf22 ":users: %d failed to find myself in usersPID[]"}, myPID));\par
00107     \}\par
00108 \par
00109     sem_reserve(semID, 1);\par
00110     usersPID[i].status = statusToSet;\par
00111     {\cf19 if} (statusToSet == 2)\par
00112     \{\par
00113         {\cf20 /*usersPrematurelyDead++;*/}\par
00114         TRACE(({\cf22 ":users: dead increased\\n"}));\par
00115     \}\par
00116     sem_release(semID, 1);\par
00117 \}\par
00118 \par
00119 {\cf20 /* attaches ipc objects based on IDs passed via arguments */}\par
00120 {\cf18 void} attach_ipc_objects({\cf18 char} **argv)\par
00121 \{\par
00122     par = shmat(PARAMETERS_ARGV, NULL, 0);\par
00123     TRACE(({\cf22 ":users %d par->SO_RETRY %d\\n"}, myPID, par->SO_RETRY))\par
00124     TEST_ERROR\par
00125     usersPID = shmat(USERS_PID_ARGV, NULL, 0);\par
00126     TRACE(({\cf22 ":users: %d usersPID[0] = %d, usersPID[3] = %d\\n"}, myPID, usersPID[0], usersPID[3]))\par
00127     TEST_ERROR\par
00128     nodesPID = shmat(NODES_PID_ARGV, NULL, 0);\par
00129     TRACE(({\cf22 ":users: %d nodesPID[0] = %d, nodesPID[3] = %d\\n"}, myPID, nodesPID[0], nodesPID[3]))\par
00130     TEST_ERROR\par
00131     mainLedger = shmat(LEDGER_ARGV, NULL, 0);\par
00132     TEST_ERROR\par
00133     semID = SEM_ID_ARGV;\par
00134     TRACE(({\cf22 ":users: %d semID is %d\\n"}, myPID, semID));\par
00135 \}\par
00136 \par
00137 {\cf20 /* use nodePID as key for msgget and check for errors */}\par
00138 {\cf18 void} queue_to_pid(pid_t nodePID)\par
00139 \{\par
00140     queueID = msgget(nodePID, IPC_CREAT | 0600);\par
00141     TEST_ERROR\par
00142     TRACE(({\cf22 ":users: %d -> %d queueID %d\\n"}, myPID, nodePID, queueID))\par
00143 \}\par
00144 \par
00145 {\cf20 /* initializes transaction values and sets it to pending */}\par
00146 {\cf18 void} transaction_init(pid_t userPID, {\cf18 int} amount, {\cf18 int} reward)\par
00147 \{\par
00148     {\cf17 struct }timespec exactTime;\par
00149 \par
00150     currTrans.sender = myPID;\par
00151     currTrans.receiver = userPID;\par
00152     currTrans.amount = amount;\par
00153     currTrans.reward = reward;\par
00154     currTrans.status = pending;\par
00155     clock_gettime(CLOCK_REALTIME, &exactTime);\par
00156     currTrans.timestamp = exactTime;\par
00157 \}\par
00158 \par
00159 {\cf20 /* initializes signal handlers for SIGINT and SIGUSR1 */}\par
00160 {\cf18 void} signal_handlers_init({\cf17 struct} sigaction *saUSR1, {\cf17 struct} sigaction *saINT)\par
00161 \{\par
00162     {\cf20 /* -- SIGNAL HANDLERS --}\par
00163 {\cf20      * first set all bytes of sigation to 0}\par
00164 {\cf20      * then initialize sa.handler to a pointer to}\par
00165 {\cf20      * the function user_transaction/interrupt_handle}\par
00166 {\cf20      * then set the handler to handle SIUSR1/SIGINT signals}\par
00167 {\cf20      * ((struct sigaction *oldact) = NULL)}\par
00168 {\cf20      */}\par
00169     saUSR1->sa_handler = user_transactions_handle;\par
00170     saINT->sa_handler = user_interrupt_handle;\par
00171     sigaction(SIGUSR1, saUSR1, NULL);\par
00172     sigaction(SIGINT, saINT, NULL);\par
00173 \}\par
00174 \par
00175 {\cf20 /* send transaction currTrans to user userPID via node nodePID */}\par
00176 {\cf18 int} send_transaction()\par
00177 \{\par
00178     msgsnd(queueID, &currTrans, {\cf17 sizeof}(transaction), 0);\par
00179     TEST_ERROR\par
00180     currBalance -= (currTrans.amount + currTrans.reward);\par
00181     outGoingTransactions += (currTrans.amount + currTrans.reward);\par
00182     {\cf19 switch} (errno)\par
00183     \{\par
00184     {\cf19 case} EACCES:\par
00185         printf({\cf22 ":users %d no write permission on queue\\n"}, myPID);\par
00186         {\cf19 break};\par
00187     {\cf19 case} EAGAIN:\par
00188         printf({\cf22 ":users: %d queue full\\n"}, myPID); {\cf20 /* keep if we decide to use IPC_NOWAIT */}\par
00189         {\cf19 break};\par
00190     {\cf19 case} EFAULT:\par
00191         printf({\cf22 ":users: %d address pointed by msgp inaccessible\\n"}, myPID);\par
00192         {\cf19 break};\par
00193     {\cf19 case} EIDRM:\par
00194         printf({\cf22 ":users: %d message queue removed\\n"}, myPID);\par
00195         {\cf19 break};\par
00196     {\cf19 case} EINTR:\par
00197         TRACE(({\cf22 ":users: %d signal caught when waiting for queue to free\\n"}, myPID));\par
00198         {\cf19 break};\par
00199     {\cf19 case} EINVAL:\par
00200         printf({\cf22 ":users: %d invalid  msqid  value,  or nonpositive mtype value, or invalid msgsz value\\n"}, myPID);\par
00201         {\cf19 break};\par
00202     {\cf19 case} ENOMEM:\par
00203         printf({\cf22 ":users: %d system out of memory\\n"}, myPID); {\cf20 /* should basically never happen I hope */}\par
00204         {\cf19 break};\par
00205     {\cf19 default}:\par
00206         TRACE(({\cf22 "Transaction sent\\n"}))\par
00207         {\cf19 return} SUCCESS;\par
00208     \}\par
00209     currTrans.status = aborted;\par
00210     currBalance += (currTrans.amount + currTrans.reward);\par
00211     outGoingTransactions -= (currTrans.amount + currTrans.reward);\par
00212     {\cf20 /* we can then track this type of aborted transactions but rn there's no need to */}\par
00213     {\cf19 return} ERROR;\par
00214 \}\par
00215 \par
00216 {\cf20 /* SIGUSR1 handler, sends a transaction */}\par
00217 {\cf18 void} user_transactions_handle({\cf18 int} signum)\par
00218 \{\par
00219     write(1, {\cf22 "::User:: SIGUSR1 received\\n"}, 27);\par
00220     {\cf19 if} (currBalance > 2)\par
00221         send_transaction(); {\cf20 /* we're calling a printf which is not thread safe, need to fix somehow*/}\par
00222     {\cf19 else}\par
00223         write(1, {\cf22 "::User:: sorry balance too low\\n"}, 32);\par
00224 \}\par
00225 \par
00226 {\cf20 /* CTRL-C handler */}\par
00227 {\cf18 void} user_interrupt_handle({\cf18 int} signum)\par
00228 \{\par
00229     write(1, {\cf22 "::User:: SIGINT received\\n"}, 26);\par
00230     exit(0);\par
00231 \}\par
00232 \par
00233 {\cf18 int} main({\cf18 int} argc, {\cf18 char} *argv[])\par
00234 \{\par
00235     {\cf18 int} amount, reward, retry;\par
00236     pid_t userPID, nodePID;\par
00237 \par
00238     {\cf17 struct }timespec randSleepTime;\par
00239     {\cf17 struct }timespec sleepTimeRemaining;\par
00240 \par
00241     {\cf17 struct }sembuf sops;\par
00242     {\cf17 struct }message transMsg;\par
00243 \par
00244     {\cf17 struct }sigaction saUSR1;\par
00245     {\cf17 struct }sigaction saINT;\par
00246     bzero(&saUSR1, {\cf17 sizeof}(saUSR1));\par
00247     bzero(&saINT, {\cf17 sizeof}(saINT));\par
00248 \par
00249     myPID = getpid(); {\cf20 /* set myPID value */}\par
00250     TRACE(({\cf22 ":users: %d USERS_PID_ARGV %d\\n"}, myPID, USERS_PID_ARGV))\par
00251     TRACE(({\cf22 ":users: %d NODES_PID_ARGV %d\\n"}, myPID, NODES_PID_ARGV))\par
00252     TRACE(({\cf22 ":users: %d PARAMETERS_ARGV %d\\n"}, myPID, PARAMETERS_ARGV))\par
00253     TRACE(({\cf22 ":users: %d LEDGER_ARGV %d\\n"}, myPID, LEDGER_ARGV))\par
00254     TRACE(({\cf22 ":users: %d SEM_ID_PID_ARGV %d\\n"}, myPID, SEM_ID_ARGV))\par
00255 \par
00256     {\cf19 if} (argc == 0)\par
00257     \{\par
00258         printf({\cf22 ":users: %d, no arguments passed, can't continue like this any more :C\\n"}, myPID);\par
00259         {\cf19 return} ERROR;\par
00260     \}\par
00261 \par
00262     srand(time(NULL)); {\cf20 /* initialize rand function */}\par
00263 \par
00264     attach_ipc_objects(argv);\par
00265     signal_handlers_init(&saUSR1, &saINT);\par
00266     transMsg.mtype = atol({\cf22 "transaction"});\par
00267 \par
00268     retry = par->SO_RETRY;\par
00269     {\cf19 while} (1)\par
00270     \{\par
00271         SLEEP_TIME_SET\par
00272         {\cf20 /*}\par
00273 {\cf20          * save the time unslept when interrupted by SIGUSR1}\par
00274 {\cf20          * so that we can't force transactions at a much greater speed}\par
00275 {\cf20          * better to save it into a separate struct because clock_nanosleep}\par
00276 {\cf20          * will not update it if the sleep is not interrupted}\par
00277 {\cf20          */}\par
00278         bzero(&sleepTimeRemaining, {\cf17 sizeof}(sleepTimeRemaining));\par
00279 \par
00280         currBalance = 100 {\cf20 /*balance(myPID)*/};\par
00281         {\cf19 if} (currBalance >= 2)\par
00282         \{\par
00283             userPID = get_random_userPID();\par
00284             nodePID = get_random_nodePID();\par
00285 \par
00286             amount = RAND(2, currBalance);\par
00287             reward = REWARD(amount, par->SO_REWARD);\par
00288             amount -= reward;\par
00289 \par
00290             queue_to_pid(nodePID);\par
00291             transaction_init(userPID, amount, reward);\par
00292             {\cf19 if} (send_transaction() == 0)\par
00293                 retry = par->SO_RETRY;\par
00294             {\cf19 else}\par
00295                 retry--;\par
00296 \par
00297             {\cf19 if} (retry == 0)\par
00298             \{\par
00299                 update_status(2);\par
00300                 {\cf19 return} MAX_RETRY;\par
00301             \}\par
00302             SLEEP\par
00303         \}\par
00304         {\cf19 else}\par
00305         \{\par
00306             printf({\cf22 ":users: %d went broke :/\\n"}, myPID);\par
00307             update_status(1);\par
00308 \par
00309             {\cf20 /*wait_for_incoming_transaction(); ///////// */}\par
00310         \}\par
00311     \}\par
00312 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/utils/debug.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/utils/debug.c}
{\xe \v src/utils/debug.c}
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "debug.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for debug.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "debug_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dbg_printf} (const char *fmt,...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v dbg_printf\:debug.c}
{\xe \v debug.c\:dbg_printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dbg_printf (const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b debug.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
debug.c\par \pard\plain 
{\tc\tcl2 \v src/utils/debug.c}
{\xe \v src/utils/debug.c}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "debug.h"}\par
00002 \par
00003 {\cf18 void} dbg_printf({\cf17 const} {\cf18 char} *fmt, ...)\par
00004 \{\par
00005     va_list args;\par
00006     va_start(args, fmt);\par
00007     vfprintf(stderr, fmt, args);\par
00008     va_end(args);\par
00009 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/utils/debug.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/utils/debug.h}
{\xe \v src/utils/debug.h}
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdarg.h>}\par
{\f2 #include <stdio.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for debug.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "debug_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "debug_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TRACE}(x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dbg_printf} (const char *fmt,...)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TRACE\:debug.h}
{\xe \v debug.h\:TRACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TRACE( x)}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 12} of file {\b debug.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v dbg_printf\:debug.h}
{\xe \v debug.h\:dbg_printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dbg_printf (const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 3} of file {\b debug.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
debug.h\par \pard\plain 
{\tc\tcl2 \v src/utils/debug.h}
{\xe \v src/utils/debug.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SIMULAZIONE_TRANSAZIONI_DEBUG_H}\par
00002 {\cf21 #define SIMULAZIONE_TRANSAZIONI_DEBUG_H}\par
00003 \par
00004 {\cf21 #include <stdarg.h>}\par
00005 {\cf21 #include <stdio.h>}\par
00006 {\cf20 /* kudos to https://stackoverflow.com/questions/1644868/define-macro-for-debug-printing-in-c/1644898#1644898?newreg=f3d84f0e4a0846b6ab71f2eac2374d70 */}\par
00007 \par
00008 {\cf18 void} dbg_printf({\cf17 const} {\cf18 char} *fmt, ...);\par
00009 {\cf21 #ifdef DEBUG}\par
00010 {\cf21 #define TRACE(x) dbg_printf x;}\par
00011 {\cf21 #else}\par
00012 {\cf21 #define TRACE(x)}\par
00013 {\cf21 #endif}\par
00014 \par
00015 {\cf21 #endif }{\cf20 /* SIMULAZIONE_TRANSAZIONI_DEBUG_H */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/utils/lists.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/utils/lists.c}
{\xe \v src/utils/lists.c}
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lists.c\par \pard\plain 
{\tc\tcl2 \v src/utils/lists.c}
{\xe \v src/utils/lists.c}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid }
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/utils/lists.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/utils/lists.h}
{\xe \v src/utils/lists.h}
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "lists_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lists.h\par \pard\plain 
{\tc\tcl2 \v src/utils/lists.h}
{\xe \v src/utils/lists.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid }
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/utils/sem.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/utils/sem.c}
{\xe \v src/utils/sem.c}
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "sem.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for sem.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sem_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST_ERROR}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sem_set_val} (int sem_id, int sem_num, int sem_val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sem_reserve} (int sem_id, int sem_num)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sem_release} (int sem_id, int sem_num)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sem_getall} (char *my_string, int sem_id)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b errno}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v TEST_ERROR\:sem.c}
{\xe \v sem.c\:TEST_ERROR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST_ERROR}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 if} (errno)                                     \\\par
    \{                                              \\\par
        fprintf(stderr,                            \\\par
                {\cf22 "%s:%d: PID=%5d: Error %d (%s)\\n"}, \\\par
                __FILE__,                          \\\par
                __LINE__,                          \\\par
                getpid(),                          \\\par
                errno,                             \\\par
                strerror(errno));                  \\\par
    \}\par
}
{
Definition at line {\b 4} of file {\b sem.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v sem_getall\:sem.c}
{\xe \v sem.c\:sem_getall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sem_getall (char *  {\i my_string}, int  {\i sem_id})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b sem.c}.}\par
}
{\xe \v sem_release\:sem.c}
{\xe \v sem.c\:sem_release}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sem_release (int  {\i sem_id}, int  {\i sem_num})}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b sem.c}.}\par
}
{\xe \v sem_reserve\:sem.c}
{\xe \v sem.c\:sem_reserve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sem_reserve (int  {\i sem_id}, int  {\i sem_num})}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b sem.c}.}\par
}
{\xe \v sem_set_val\:sem.c}
{\xe \v sem.c\:sem_set_val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sem_set_val (int  {\i sem_id}, int  {\i sem_num}, int  {\i sem_val})}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b sem.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v errno\:sem.c}
{\xe \v sem.c\:errno}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int errno}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b sem.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sem.c\par \pard\plain 
{\tc\tcl2 \v src/utils/sem.c}
{\xe \v src/utils/sem.c}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include "sem.h"}\par
00002 \par
00003 {\cf21 #ifndef TEST_ERROR}\par
00004 {\cf21 #define TEST_ERROR                                 \\}\par
00005 {\cf21     if (errno)                                     \\}\par
00006 {\cf21     \{                                              \\}\par
00007 {\cf21         fprintf(stderr,                            \\}\par
00008 {\cf21                 "%s:%d: PID=%5d: Error %d (%s)\\n"}, \\\par
00009                 __FILE__,                          \\\par
00010                 __LINE__,                          \\\par
00011                 getpid(),                          \\\par
00012                 errno,                             \\\par
00013                 strerror(errno));                  \\\par
00014     \}\par
00015 {\cf21 #endif}\par
00016 \par
00017 {\cf18 int} errno;\par
00018 \par
00019 {\cf20 /* Set a semaphore to a user defined value */}\par
00020 {\cf18 int} sem_set_val({\cf18 int} sem_id, {\cf18 int} sem_num, {\cf18 int} sem_val)\par
00021 \{\par
00022     {\cf19 return} semctl(sem_id, sem_num, SETVAL, sem_val);\par
00023 \}\par
00024 \par
00025 {\cf20 /* Try to access the resource */}\par
00026 {\cf18 int} sem_reserve({\cf18 int} sem_id, {\cf18 int} sem_num)\par
00027 \{\par
00028     {\cf17 struct }sembuf sops;\par
00029 \par
00030     sops.sem_num = sem_num;\par
00031     sops.sem_op = -1;\par
00032     sops.sem_flg = 0;\par
00033     {\cf19 return} semop(sem_id, &sops, 1);\par
00034 \}\par
00035 \par
00036 {\cf20 /* Release the resource */}\par
00037 {\cf18 int} sem_release({\cf18 int} sem_id, {\cf18 int} sem_num)\par
00038 \{\par
00039     {\cf17 struct }sembuf sops;\par
00040 \par
00041     sops.sem_num = sem_num;\par
00042     sops.sem_op = 1;\par
00043     sops.sem_flg = 0;\par
00044 \par
00045     {\cf19 return} semop(sem_id, &sops, 1);\par
00046 \}\par
00047 \par
00048 {\cf20 /* Print all semaphore values to a string */}\par
00049 {\cf18 int} sem_getall({\cf18 char} *my_string, {\cf18 int} sem_id)\par
00050 \{\par
00051     {\cf17 union }semun arg; {\cf20 /* man semctl per vedere def della union  */}\par
00052     {\cf18 unsigned} {\cf18 short} *sem_vals, i;\par
00053     {\cf18 unsigned} {\cf18 long} num_sem;\par
00054     {\cf18 char} cur_str[10];\par
00055     {\cf17 struct }semid_ds my_ds;\par
00056 \par
00057     {\cf20 /* Get the number of semaphores */}\par
00058     arg.buf = &my_ds;\par
00059     semctl(sem_id, 0, IPC_STAT, arg);\par
00060     TEST_ERROR;\par
00061     num_sem = arg.buf->sem_nsems;\par
00062 \par
00063     {\cf20 /* Get the values of all semaphores */}\par
00064     sem_vals = malloc({\cf17 sizeof}(*sem_vals) * num_sem);\par
00065     arg.array = sem_vals;\par
00066     semctl(sem_id, 0, GETALL, arg);\par
00067 \par
00068     {\cf20 /* Initialize the string. MUST be allocated by the caller */}\par
00069     my_string[0] = 0;\par
00070     {\cf19 for} (i = 0; i < num_sem; i++)\par
00071     \{\par
00072         sprintf(cur_str, {\cf22 "%d "}, sem_vals[i]);\par
00073         strcat(my_string, cur_str);\par
00074     \}\par
00075 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/utils/sem.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/utils/sem.h}
{\xe \v src/utils/sem.h}
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <sys/types.h>}\par
{\f2 #include <sys/ipc.h>}\par
{\f2 #include <sys/sem.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <errno.h>}\par
{\f2 #include <unistd.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for sem.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sem_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "sem_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union {\b semun}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LOCK}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UNLOCK}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sem_set_val} (int sem_id, int sem_num, int sem_val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sem_reserve} (int sem_id, int sem_num)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sem_release} (int sem_id, int sem_num)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sem_getall} (char *my_string, int sem_id)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v LOCK\:sem.h}
{\xe \v sem.h\:LOCK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LOCK}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     sops.sem_num = 1;           \\\par
    sops.sem_op = -1;           \\\par
    sops.sem_flg = 0;           \\\par
    semop(semID, &sops, 1);\par
}
{
Definition at line {\b 14} of file {\b sem.h}.}\par
}
{\xe \v UNLOCK\:sem.h}
{\xe \v sem.h\:UNLOCK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UNLOCK}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     sops.sem_num = 1;           \\\par
    sops.sem_op = 1;            \\\par
    sops.sem_flg = 0;           \\\par
    semop(semID, &sops, 1);\par
}
{
Definition at line {\b 19} of file {\b sem.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v sem_getall\:sem.h}
{\xe \v sem.h\:sem_getall}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sem_getall (char *  {\i my_string}, int  {\i sem_id})}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b sem.c}.}\par
}
{\xe \v sem_release\:sem.h}
{\xe \v sem.h\:sem_release}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sem_release (int  {\i sem_id}, int  {\i sem_num})}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b sem.c}.}\par
}
{\xe \v sem_reserve\:sem.h}
{\xe \v sem.h\:sem_reserve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sem_reserve (int  {\i sem_id}, int  {\i sem_num})}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b sem.c}.}\par
}
{\xe \v sem_set_val\:sem.h}
{\xe \v sem.h\:sem_set_val}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sem_set_val (int  {\i sem_id}, int  {\i sem_num}, int  {\i sem_val})}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b sem.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
sem.h\par \pard\plain 
{\tc\tcl2 \v src/utils/sem.h}
{\xe \v src/utils/sem.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef SIMULAZIONE_TRANSAZIONI_SEM_H}\par
00002 {\cf21 #define SIMULAZIONE_TRANSAZIONI_SEM_H}\par
00003 \par
00004 {\cf21 #include <sys/types.h>}\par
00005 {\cf21 #include <sys/ipc.h>}\par
00006 {\cf21 #include <sys/sem.h>}\par
00007 {\cf21 #include <string.h>}\par
00008 {\cf21 #include <stdio.h>}\par
00009 {\cf21 #include <stdlib.h>}\par
00010 {\cf21 #include <errno.h>}\par
00011 {\cf21 #include <unistd.h>}\par
00012 \par
00013 {\cf20 /* from prof. Schifanella examples */}\par
00014 {\cf21 #define LOCK                    \\}\par
00015 {\cf21     sops.sem_num = 1;           \\}\par
00016 {\cf21     sops.sem_op = -1;           \\}\par
00017 {\cf21     sops.sem_flg = 0;           \\}\par
00018 {\cf21     semop(semID, &sops, 1);}\par
00019 {\cf21 #define UNLOCK                  \\}\par
00020 {\cf21     sops.sem_num = 1;           \\}\par
00021 {\cf21     sops.sem_op = 1;            \\}\par
00022 {\cf21     sops.sem_flg = 0;           \\}\par
00023 {\cf21     semop(semID, &sops, 1);}\par
00024 \par
00025 {\cf20 /* from prof. Bini examples */}\par
00026 \par
00027 {\cf20 /*}\par
00028 {\cf20  * The following union must be defined as required by the semctl man}\par
00029 {\cf20  * page}\par
00030 {\cf20  */}\par
00031 {\cf17 union }semun \{\par
00032     {\cf18 int}              val;    {\cf20 /* Value for SETVAL */}\par
00033     {\cf17 struct }semid_ds *buf;    {\cf20 /* Buffer for IPC_STAT, IPC_SET */}\par
00034     {\cf18 unsigned} {\cf18 short}  *array;  {\cf20 /* Array for GETALL, SETALL */}\par
00035     {\cf17 struct }seminfo  *__buf;  {\cf20 /* Buffer for IPC_INFO}\par
00036 {\cf20                     (Linux-specific) */}\par
00037 \};\par
00038 \par
00039 \par
00040 {\cf20 /*}\par
00041 {\cf20  * Set a semaphore to a user defined value}\par
00042 {\cf20  * INPUT:}\par
00043 {\cf20  * - sem_id: the ID of the semaphore IPC object}\par
00044 {\cf20  * - sem_num: the position of the semaphore in the array}\par
00045 {\cf20  * - sem_val: the initialization value of the semaphore}\par
00046 {\cf20  * RESULT:}\par
00047 {\cf20  * - the selected semaphore is initialized to the given value}\par
00048 {\cf20  * - the returned value is the same as the invoked semctl}\par
00049 {\cf20  */}\par
00050 {\cf18 int} sem_set_val({\cf18 int} sem_id, {\cf18 int} sem_num, {\cf18 int} sem_val);\par
00051 \par
00052 {\cf20 /*}\par
00053 {\cf20  * Try to access the resource}\par
00054 {\cf20  * INPUT:}\par
00055 {\cf20  * - sem_id: the ID of the semaphore IPC object}\par
00056 {\cf20  * - sem_num: the position of the semaphore in the array}\par
00057 {\cf20  * RESULT}\par
00058 {\cf20  * - if the resource is available (semaphore value > 0), the semaphore}\par
00059 {\cf20  *   is decremented by one}\par
00060 {\cf20  * - if the resource is not available (semaphore value == 0), the}\par
00061 {\cf20  *   process is blocked until the resource becomes available again}\par
00062 {\cf20  * - the returned value is the same as the invoked semop}\par
00063 {\cf20  */}\par
00064 {\cf18 int} sem_reserve({\cf18 int} sem_id, {\cf18 int} sem_num);\par
00065 \par
00066 {\cf20 /*}\par
00067 {\cf20  * Release the resource}\par
00068 {\cf20  * INPUT:}\par
00069 {\cf20  * - sem_id: the ID of the semaphore IPC object}\par
00070 {\cf20  * - sem_num: the position of the semaphore in the array}\par
00071 {\cf20  * RESULT:}\par
00072 {\cf20  * - the semaphore value is incremented by one. This may unblock some}\par
00073 {\cf20  *   process}\par
00074 {\cf20  * - the returned value is the same as the invoked semop}\par
00075 {\cf20  */}\par
00076 {\cf18 int} sem_release({\cf18 int} sem_id, {\cf18 int} sem_num);\par
00077 \par
00078 {\cf20 /*}\par
00079 {\cf20  * Print all semaphore values to a string. my_string MUST be}\par
00080 {\cf20  * previously allocated}\par
00081 {\cf20  */}\par
00082 {\cf18 int} sem_getall({\cf18 char} * my_string, {\cf18 int} sem_id);\par
00083 \par
00084 \par
00085 {\cf21 #endif }{\cf20 /* SIMULAZIONE_TRANSAZIONI_SEM_H */}{\cf21 }\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
