<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="users_8h" kind="file" language="C++">
    <compoundname>users.h</compoundname>
    <includes local="no">signal.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">time.h</includes>
    <includedby refid="users_8c" local="yes">src/users.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/include/users.h</label>
        <link refid="users_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>signal.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>src/include/users.h</label>
        <link refid="users_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>src/users.c</label>
        <link refid="users_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="users_8h_1a42693010975aeff6d524880e8ca2c717" prot="public" static="no">
        <name>SLEEP_TIME_SET</name>
        <initializer>    randSleepTime.tv_sec = 0; \
    randSleepTime.tv_nsec = <ref refid="common_8h_1a0d7644a795aa2dd33f01ef184f3f672a" kindref="member">RAND</ref>(<ref refid="users_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>-&gt;SO_MIN_TRANS_GEN_NSEC, <ref refid="users_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>-&gt;SO_MAX_TRANS_GEN_NSEC);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/users.h" line="10" column="9" bodyfile="src/include/users.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="users_8h_1a44e89d523436fcbbf2c56e4fb335d509" prot="public" static="no">
        <name>SLEEP</name>
        <initializer>    clock_nanosleep(CLOCK_REALTIME, TIMER_ABSTIME, &amp;<ref refid="nodes_8h_1a3a6bc37f09273282c75d2fcc8b27f09e" kindref="member">randSleepTime</ref>, &amp;<ref refid="nodes_8h_1a45ff1b670dbcc1a3ff3c2657aba0b66b" kindref="member">sleepTimeRemaining</ref>); \
    clock_nanosleep(CLOCK_REALTIME, TIMER_ABSTIME, &amp;<ref refid="nodes_8h_1a45ff1b670dbcc1a3ff3c2657aba0b66b" kindref="member">sleepTimeRemaining</ref>, <ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/users.h" line="14" column="9" bodyfile="src/include/users.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="users_8h_1a2419f7ac6a2d2282e04a8535b4b5c2f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void user_transactions_handle</definition>
        <argsstring>(int signum)</argsstring>
        <name>user_transactions_handle</name>
        <param>
          <type>int</type>
          <declname>signum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/users.h" line="19" column="6" bodyfile="src/users.c" bodystart="217" bodyend="224" declfile="src/include/users.h" declline="19" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="users_8h_1a9aab3bf870349762f604cebd8633aea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void user_interrupt_handle</definition>
        <argsstring>(int signum)</argsstring>
        <name>user_interrupt_handle</name>
        <param>
          <type>int</type>
          <declname>signum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/users.h" line="20" column="6" bodyfile="src/users.c" bodystart="227" bodyend="231" declfile="src/include/users.h" declline="20" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="users_8h_1a7f41cf6401b33c2055d553d8315decaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_pid_userIndex</definition>
        <argsstring>(int PID_toSearch)</argsstring>
        <name>get_pid_userIndex</name>
        <param>
          <type>int</type>
          <declname>PID_toSearch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/users.h" line="22" column="5" bodyfile="src/users.c" bodystart="51" bodyend="62" declfile="src/include/users.h" declline="22" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="users_8h_1aaf15d0912c5fa42321118d1c652551d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pid_t</type>
        <definition>pid_t get_random_userPID</definition>
        <argsstring>()</argsstring>
        <name>get_random_userPID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/users.h" line="23" column="7" bodyfile="src/users.c" bodystart="65" bodyend="80" declfile="src/include/users.h" declline="23" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="users_8h_1a7a26cf1c5a9c15d42c4f3caeaa179b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pid_t</type>
        <definition>pid_t get_random_nodePID</definition>
        <argsstring>()</argsstring>
        <name>get_random_nodePID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/users.h" line="24" column="7" bodyfile="src/users.c" bodystart="83" bodyend="98" declfile="src/include/users.h" declline="24" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="users_8h_1a9cceef0ffc7483e71c1cc4652a05cc1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void queue_to_pid</definition>
        <argsstring>(pid_t nodePID)</argsstring>
        <name>queue_to_pid</name>
        <param>
          <type>pid_t</type>
          <declname>nodePID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/users.h" line="26" column="6" bodyfile="src/users.c" bodystart="138" bodyend="143" declfile="src/include/users.h" declline="26" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="users_8h_1a1e2d07708f3abf72150e65545e8bef23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void transaction_init</definition>
        <argsstring>(pid_t nodePID, int amount, int reward)</argsstring>
        <name>transaction_init</name>
        <param>
          <type>pid_t</type>
          <declname>nodePID</declname>
        </param>
        <param>
          <type>int</type>
          <declname>amount</declname>
        </param>
        <param>
          <type>int</type>
          <declname>reward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/users.h" line="27" column="6" bodyfile="src/users.c" bodystart="146" bodyend="157" declfile="src/include/users.h" declline="27" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="users_8h_1af881b5c5f39090e7fc6c5c5d6630c7cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int send_transaction</definition>
        <argsstring>()</argsstring>
        <name>send_transaction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/include/users.h" line="28" column="5" bodyfile="src/users.c" bodystart="176" bodyend="214" declfile="src/include/users.h" declline="28" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SIMULAZIONE_TRANSAZIONI_USERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMULAZIONE_TRANSAZIONI_USERS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sets<sp/>sleep<sp/>time<sp/>with<sp/>nsec<sp/>precision<sp/>for<sp/>trans_gen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="users_8h_1a42693010975aeff6d524880e8ca2c717" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLEEP_TIME_SET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>randSleepTime.tv_sec<sp/>=<sp/>0;<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>randSleepTime.tv_nsec<sp/>=<sp/>RAND(par-&gt;SO_MIN_TRANS_GEN_NSEC,<sp/>par-&gt;SO_MAX_TRANS_GEN_NSEC);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="users_8h_1a44e89d523436fcbbf2c56e4fb335d509" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SLEEP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>clock_nanosleep(CLOCK_REALTIME,<sp/>TIMER_ABSTIME,<sp/>&amp;randSleepTime,<sp/>&amp;sleepTimeRemaining);<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>clock_nanosleep(CLOCK_REALTIME,<sp/>TIMER_ABSTIME,<sp/>&amp;sleepTimeRemaining,<sp/>NULL);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="users_8h_1a2419f7ac6a2d2282e04a8535b4b5c2f9" kindref="member">user_transactions_handle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signum);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="users_8h_1a9aab3bf870349762f604cebd8633aea5" kindref="member">user_interrupt_handle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signum);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="users_8h_1a7f41cf6401b33c2055d553d8315decaa" kindref="member">get_pid_userIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PID_toSearch);</highlight></codeline>
<codeline lineno="23"><highlight class="normal">pid_t<sp/><ref refid="users_8h_1aaf15d0912c5fa42321118d1c652551d2" kindref="member">get_random_userPID</ref>();</highlight></codeline>
<codeline lineno="24"><highlight class="normal">pid_t<sp/><ref refid="users_8h_1a7a26cf1c5a9c15d42c4f3caeaa179b0e" kindref="member">get_random_nodePID</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="users_8h_1a9cceef0ffc7483e71c1cc4652a05cc1c" kindref="member">queue_to_pid</ref>(pid_t<sp/>nodePID);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="users_8h_1a1e2d07708f3abf72150e65545e8bef23" kindref="member">transaction_init</ref>(pid_t<sp/>nodePID,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>amount,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>reward);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="users_8h_1af881b5c5f39090e7fc6c5c5d6630c7cb" kindref="member">send_transaction</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SIMULAZIONE_TRANSAZIONI_USERS_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/include/users.h"/>
  </compounddef>
</doxygen>
