<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.3" xml:lang="en-US">
  <compounddef id="master_8c" kind="file" language="C++">
    <compoundname>master.c</compoundname>
    <includes refid="common_8h" local="yes">include/common.h</includes>
    <includes refid="master_8h" local="yes">include/master.h</includes>
    <includes refid="print_8h" local="yes">include/print.h</includes>
    <includes refid="parser_8h" local="yes">include/parser.h</includes>
    <incdepgraph>
      <node id="2">
        <label>include/common.h</label>
        <link refid="common_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>include/master.h</label>
        <link refid="master_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>include/parser.h</label>
        <link refid="parser_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>include/print.h</label>
        <link refid="print_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/master.c</label>
        <link refid="master_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>../utils/debug.h</label>
        <link refid="debug_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>../utils/lists.h</label>
        <link refid="lists_8h"/>
      </node>
      <node id="19">
        <label>../utils/sem.h</label>
        <link refid="sem_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>errno.h</label>
      </node>
      <node id="10">
        <label>math.h</label>
      </node>
      <node id="22">
        <label>signal.h</label>
      </node>
      <node id="18">
        <label>stdarg.h</label>
      </node>
      <node id="5">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
      <node id="12">
        <label>sys/ipc.h</label>
      </node>
      <node id="15">
        <label>sys/msg.h</label>
      </node>
      <node id="14">
        <label>sys/sem.h</label>
      </node>
      <node id="13">
        <label>sys/shm.h</label>
      </node>
      <node id="16">
        <label>sys/types.h</label>
      </node>
      <node id="9">
        <label>time.h</label>
      </node>
      <node id="7">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="master_8c_1a153c8fd37ad2953f8ea58a227f97eb9d" prot="public" static="no">
        <name>SHM_NUM</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="6" column="9" bodyfile="src/master.c" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="master_8c_1a337d58ae606f3a5ec19972a7cbc4348f" prot="public" static="no">
        <name>SEM_NUM</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="7" column="9" bodyfile="src/master.c" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="master_8c_1a7c551e7044ac9e4c3b9bd15add5824f5" prot="public" static="no">
        <name>IPC_NUM</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="8" column="9" bodyfile="src/master.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="master_8c_1af55e8c51eb649983dc307ddf43a46ee6" prot="public" static="no">
        <name>USER_NAME</name>
        <initializer>&quot;./users&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="10" column="9" bodyfile="src/master.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="master_8c_1a8cc8d559acdd2f74085b20977182d5b7" prot="public" static="no">
        <name>NODE_NAME</name>
        <initializer>&quot;./nodes&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="11" column="9" bodyfile="src/master.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="master_8c_1a963935917aae796fbb8f2728703adf04" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structparameters" kindref="compound">parameters</ref> *</type>
        <definition>struct parameters* par</definition>
        <argsstring></argsstring>
        <name>par</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="20" column="17" bodyfile="src/master.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="master_8c_1af667a518a4feef7b7540ebac0cd618cf" prot="public" static="no" mutable="no">
        <type><ref refid="common_8h_1a75285f7670649ccfb5ccbbc952a15bfd" kindref="member">user</ref> *</type>
        <definition>user* usersPID</definition>
        <argsstring></argsstring>
        <name>usersPID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="21" column="6" bodyfile="src/master.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="master_8c_1a803b35477f039b41487c3b1abee12b80" prot="public" static="no" mutable="no">
        <type><ref refid="common_8h_1a85b4f4124a5616dea92c9e8a221a8db5" kindref="member">node</ref> *</type>
        <definition>node* nodesPID</definition>
        <argsstring></argsstring>
        <name>nodesPID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="22" column="6" bodyfile="src/master.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="master_8c_1a61246e5e608d3240fbbee97c978af351" prot="public" static="no" mutable="no">
        <type><ref refid="common_8h_1af8b2bdfa2bfa44284c83a9d6994b13f1" kindref="member">ledger</ref> *</type>
        <definition>ledger* mainLedger</definition>
        <argsstring></argsstring>
        <name>mainLedger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="23" column="8" bodyfile="src/master.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="master_8c_1ae520355298e7bac453a556eeab7df45f" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int semID</definition>
        <argsstring></argsstring>
        <name>semID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="25" column="5" bodyfile="src/master.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="master_8c_1a0a7e9839ec9892b7a45bcc5fa69dd988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_arguments</definition>
        <argsstring>(int *IPC_array, char **argv)</argsstring>
        <name>make_arguments</name>
        <param>
          <type>int *</type>
          <declname>IPC_array</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="36" column="6" bodyfile="src/master.c" bodystart="36" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="master_8c_1ae58c1750af2fc1502557fa91b9258315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pid_t</type>
        <definition>pid_t spawn_user</definition>
        <argsstring>(char *userArgv[])</argsstring>
        <name>spawn_user</name>
        <param>
          <type>char *</type>
          <declname>userArgv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="65" column="7" bodyfile="src/master.c" bodystart="65" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="master_8c_1ab9c901d29850514f861a3760fffd505f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>pid_t</type>
        <definition>pid_t spawn_node</definition>
        <argsstring>(char *nodeArgv[])</argsstring>
        <name>spawn_node</name>
        <param>
          <type>char *</type>
          <declname>nodeArgv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="88" column="7" bodyfile="src/master.c" bodystart="88" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="master_8c_1a402674278f054cd8161d84815dcdd7cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void shared_memory_objects_init</definition>
        <argsstring>(int *shmArray)</argsstring>
        <name>shared_memory_objects_init</name>
        <param>
          <type>int *</type>
          <declname>shmArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="111" column="6" bodyfile="src/master.c" bodystart="111" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="master_8c_1a808faa6034b867dc92c3878d95cec5d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void semaphores_init</definition>
        <argsstring>()</argsstring>
        <name>semaphores_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="167" column="6" bodyfile="src/master.c" bodystart="167" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="master_8c_1ac58bbbc0433b1fd55eff29fd2040e88c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void make_ipc_array</definition>
        <argsstring>(int *IPC_array)</argsstring>
        <name>make_ipc_array</name>
        <param>
          <type>int *</type>
          <declname>IPC_array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="175" column="6" bodyfile="src/master.c" bodystart="175" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="master_8c_1a6732beb5ef32cd411a23cf0d8c915e37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void master_interrupt_handle</definition>
        <argsstring>(int signum)</argsstring>
        <name>master_interrupt_handle</name>
        <param>
          <type>int</type>
          <declname>signum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="188" column="6" bodyfile="src/master.c" bodystart="188" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="master_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/master.c" line="210" column="5" bodyfile="src/master.c" bodystart="210" bodyend="279"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="common_8h" kindref="compound">include/common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="master_8h" kindref="compound">include/master.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="print_8h" kindref="compound">include/print.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="parser_8h" kindref="compound">include/parser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="master_8c_1a153c8fd37ad2953f8ea58a227f97eb9d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHM_NUM<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="master_8c_1a337d58ae606f3a5ec19972a7cbc4348f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEM_NUM<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="master_8c_1a7c551e7044ac9e4c3b9bd15add5824f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IPC_NUM<sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="master_8c_1af55e8c51eb649983dc307ddf43a46ee6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USER_NAME<sp/>&quot;./users&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="master_8c_1a8cc8d559acdd2f74085b20977182d5b7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NODE_NAME<sp/>&quot;./nodes&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>======================</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>||<sp/>GLOBAL<sp/>VARIABLES<sp/>||</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>======================</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>parameters<sp/>of<sp/>simulation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="master_8c_1a963935917aae796fbb8f2728703adf04" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparameters" kindref="compound">parameters</ref><sp/>*<ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>;</highlight></codeline>
<codeline lineno="21" refid="master_8c_1af667a518a4feef7b7540ebac0cd618cf" refkind="member"><highlight class="normal"><ref refid="structuser__t" kindref="compound">user</ref><sp/>*<ref refid="master_8c_1af667a518a4feef7b7540ebac0cd618cf" kindref="member">usersPID</ref>;</highlight></codeline>
<codeline lineno="22" refid="master_8c_1a803b35477f039b41487c3b1abee12b80" refkind="member"><highlight class="normal"><ref refid="structnode__t" kindref="compound">node</ref><sp/>*<ref refid="master_8c_1a803b35477f039b41487c3b1abee12b80" kindref="member">nodesPID</ref>;</highlight></codeline>
<codeline lineno="23" refid="master_8c_1a61246e5e608d3240fbbee97c978af351" refkind="member"><highlight class="normal"><ref refid="structledger__t" kindref="compound">ledger</ref><sp/>*<ref refid="master_8c_1a61246e5e608d3240fbbee97c978af351" kindref="member">mainLedger</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="master_8c_1ae520355298e7bac453a556eeab7df45f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="master_8c_1ae520355298e7bac453a556eeab7df45f" kindref="member">semID</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*extern<sp/>int<sp/>usersPrematurelyDead<sp/>=<sp/>0;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>======================</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>||<sp/><sp/><sp/><sp/>FUNCTIONS<sp/><sp/><sp/><sp/><sp/>||</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>======================</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>make<sp/>argv<sp/>array<sp/>with<sp/>IPC<sp/>IDs<sp/>for<sp/>user<sp/>and<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="master_8c_1a0a7e9839ec9892b7a45bcc5fa69dd988" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="master_8c_1a0a7e9839ec9892b7a45bcc5fa69dd988" kindref="member">make_arguments</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*IPC_array,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uPID_array<sp/>=<sp/>malloc(3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(IPC_array[0])<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nPID_array<sp/>=<sp/>malloc(3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(IPC_array[0])<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structparameters" kindref="compound">parameters</ref><sp/>=<sp/>malloc(3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(IPC_array[0])<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structledger__t" kindref="compound">ledger</ref><sp/>=<sp/>malloc(3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(IPC_array[0])<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="master_8c_1ae520355298e7bac453a556eeab7df45f" kindref="member">semID</ref><sp/>=<sp/>malloc(3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(IPC_array[0])<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(uPID_array,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>IPC_array[0]);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(nPID_array,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>IPC_array[1]);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(<ref refid="structparameters" kindref="compound">parameters</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>IPC_array[2]);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(<ref refid="structledger__t" kindref="compound">ledger</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>IPC_array[3]);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(<ref refid="master_8c_1ae520355298e7bac453a556eeab7df45f" kindref="member">semID</ref>,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>IPC_array[4]);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>argv[0]<sp/>=<sp/><ref refid="master_8c_1af55e8c51eb649983dc307ddf43a46ee6" kindref="member">USER_NAME</ref>;<sp/></highlight><highlight class="comment">/*<sp/>need<sp/>nodes<sp/>to<sp/>have<sp/>a<sp/>different<sp/>name<sp/>but<sp/>not<sp/>a<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>argv[1]<sp/>=<sp/>uPID_array;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;:master:<sp/>argv[uPID]<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>uPID_array))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>argv[2]<sp/>=<sp/>nPID_array;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;:master:<sp/>argv[nPID]<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>nPID_array))</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>argv[3]<sp/>=<sp/><ref refid="structparameters" kindref="compound">parameters</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;:master:<sp/>argv[par]<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structparameters" kindref="compound">parameters</ref>))</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>argv[4]<sp/>=<sp/><ref refid="common_8h_1af8b2bdfa2bfa44284c83a9d6994b13f1" kindref="member">ledger</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;:master:<sp/>argv[ledger]<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="structledger__t" kindref="compound">ledger</ref>))</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>argv[5]<sp/>=<sp/><ref refid="master_8c_1ae520355298e7bac453a556eeab7df45f" kindref="member">semID</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;:master:<sp/>argv[sem]<sp/>=<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="master_8c_1ae520355298e7bac453a556eeab7df45f" kindref="member">semID</ref>))</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>argv[8]<sp/>=<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Terminating<sp/>argv<sp/>with<sp/>NULL<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fork<sp/>and<sp/>execve<sp/>a<sp/>&quot;./users&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="master_8h_1a9f9715b418947b3d25eaa102b494b7eb" refkind="member"><highlight class="normal">pid_t<sp/><ref refid="master_8c_1ae58c1750af2fc1502557fa91b9258315" kindref="member">spawn_user</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*userArgv[])</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_t<sp/><ref refid="nodes_8c_1af97c23712a0bab92e0ca95694e85282e" kindref="member">myPID</ref><sp/>=<sp/>fork();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;:master:<sp/>argv<sp/>values:<sp/>%s<sp/>%s<sp/>%s<sp/>%s<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>userArgv[0],<sp/>userArgv[1],<sp/>userArgv[2],<sp/>userArgv[3],<sp/>userArgv[4],<sp/>userArgv[5]))</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="nodes_8c_1af97c23712a0bab92e0ca95694e85282e" kindref="member">myPID</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:<sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;--<sp/>Error<sp/>forking<sp/>for<sp/>user\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">/*<sp/>Child<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;:master:<sp/>Spawning<sp/>user\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execve(<ref refid="master_8c_1af55e8c51eb649983dc307ddf43a46ee6" kindref="member">USER_NAME</ref>,<sp/>userArgv,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1a8251bcdfc5c83845e0834adf211de033" kindref="member">TEST_ERROR</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;!!<sp/>Message<sp/>that<sp/>should<sp/>never<sp/>be<sp/>seen\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nodes_8c_1af97c23712a0bab92e0ca95694e85282e" kindref="member">myPID</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fork<sp/>and<sp/>execve<sp/>a<sp/>&quot;./nodes&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="master_8h_1ac4c522e4371812b5b4e5fd7982c58dd3" refkind="member"><highlight class="normal">pid_t<sp/><ref refid="master_8c_1ab9c901d29850514f861a3760fffd505f" kindref="member">spawn_node</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nodeArgv[])</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_t<sp/><ref refid="nodes_8c_1af97c23712a0bab92e0ca95694e85282e" kindref="member">myPID</ref><sp/>=<sp/>fork();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;:master:<sp/>argv<sp/>values:<sp/>%s<sp/>%s<sp/>%s<sp/>%s<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>nodeArgv[0],<sp/>nodeArgv[1],<sp/>nodeArgv[2],<sp/>nodeArgv[3],<sp/>nodeArgv[4],<sp/>nodeArgv[5]))</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="nodes_8c_1af97c23712a0bab92e0ca95694e85282e" kindref="member">myPID</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>-1:<sp/></highlight><highlight class="comment">/*<sp/>Error<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;!!<sp/>Error<sp/>forking<sp/>for<sp/>node\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="comment">/*<sp/>Child<sp/>case<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;:master:<sp/>Spawning<sp/>node\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execve(<ref refid="master_8c_1a8cc8d559acdd2f74085b20977182d5b7" kindref="member">NODE_NAME</ref>,<sp/>nodeArgv,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="common_8h_1a8251bcdfc5c83845e0834adf211de033" kindref="member">TEST_ERROR</ref></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;!!<sp/>Message<sp/>that<sp/>should<sp/>never<sp/>be<sp/>seen\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="nodes_8c_1af97c23712a0bab92e0ca95694e85282e" kindref="member">myPID</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>attach<sp/>usersPID,<sp/>nodesPID,<sp/>par<sp/>and<sp/>mainLedger<sp/>to<sp/>shared<sp/>memory,<sp/>returns<sp/>an<sp/>array<sp/>with<sp/>respective<sp/>IDs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="master_8h_1af65ef707ebfa9cc135e6d466c75dbda8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="master_8c_1a402674278f054cd8161d84815dcdd7cc" kindref="member">shared_memory_objects_init</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*shmArray)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shared<sp/>memory<sp/>segments<sp/>IDs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>usersPID_ID;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodesPID_ID;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mainLedger_ID;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>par_ID;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>parameters<sp/>init<sp/>and<sp/>read<sp/>from<sp/>conf<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>par_ID<sp/>=<sp/>shmget(<ref refid="common_8h_1a682c31ec4c2347e42bb80ea43ccb4438" kindref="member">SHM_PARAMETERS</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>),<sp/>0600<sp/>|<sp/>IPC_CREAT<sp/>|<sp/>IPC_EXCL);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a8251bcdfc5c83845e0834adf211de033" kindref="member">TEST_ERROR</ref></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structparameters" kindref="compound">parameters</ref><sp/>*)shmat(par_ID,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="parser_8h_1aa51f83495fd93bbb234b08030216c91a" kindref="member">parse_parameters</ref>(<ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>)<sp/>==<sp/><ref refid="parser_8h_1ad223dab1d6a66f81b6b0c6c268a19a3f" kindref="member">CONF_ERROR</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;--<sp/>Error<sp/>reading<sp/>conf<sp/>file,<sp/>defaulting<sp/>to<sp/>conf#1\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;--<sp/>Conf<sp/>file<sp/>read<sp/>successful\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8h_1a7632b11ea6036c833f5c2cd3cd0bb087" kindref="member">print_parameters</ref>(<ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(users_t)<sp/>and<sp/>(nodes_t)<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>usersPID_ID<sp/>=<sp/>shmget(<ref refid="common_8h_1a3baba14bf322fc6a6367f5ae6795d440" kindref="member">SHM_USERS_ARRAY</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>-&gt;<ref refid="structparameters_1a1a7bfa0882f03d573b4e419d02f041f8" kindref="member">SO_USER_NUM</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structuser__t" kindref="compound">user</ref>),</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0600<sp/>|<sp/>IPC_CREAT<sp/>|<sp/>IPC_EXCL);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a8251bcdfc5c83845e0834adf211de033" kindref="member">TEST_ERROR</ref></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>nodesPID_ID<sp/>=<sp/>shmget(<ref refid="common_8h_1a55de6fde37952d6cbbf28f2ed2299ace" kindref="member">SHM_NODES_ARRAY</ref>,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>-&gt;<ref refid="structparameters_1a379d08051847c4f98268a27001b06261" kindref="member">SO_NODES_NUM</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structnode__t" kindref="compound">node</ref>),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0600<sp/>|<sp/>IPC_CREAT<sp/>|<sp/>IPC_EXCL);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a8251bcdfc5c83845e0834adf211de033" kindref="member">TEST_ERROR</ref></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="master_8c_1af667a518a4feef7b7540ebac0cd618cf" kindref="member">usersPID</ref><sp/>=<sp/>(<ref refid="structuser__t" kindref="compound">user</ref><sp/>*)shmat(usersPID_ID,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="master_8c_1a803b35477f039b41487c3b1abee12b80" kindref="member">nodesPID</ref><sp/>=<sp/>(<ref refid="structnode__t" kindref="compound">node</ref><sp/>*)shmat(nodesPID_ID,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mainLedger<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>mainLedger_ID<sp/>=<sp/>shmget(<ref refid="common_8h_1a5de1e6971273cfe0a7fdd4570401eb53" kindref="member">SHM_LEDGER</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>-&gt;<ref refid="structparameters_1a379d08051847c4f98268a27001b06261" kindref="member">SO_NODES_NUM</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structnode__t" kindref="compound">node</ref>),</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0600<sp/>|<sp/>IPC_CREAT<sp/>|<sp/>IPC_EXCL);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a8251bcdfc5c83845e0834adf211de033" kindref="member">TEST_ERROR</ref></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="master_8c_1a61246e5e608d3240fbbee97c978af351" kindref="member">mainLedger</ref><sp/>=<sp/>(<ref refid="structledger__t" kindref="compound">ledger</ref><sp/>*)shmat(mainLedger_ID,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mark<sp/>for<sp/>deallocation<sp/>so<sp/>that<sp/>they<sp/>are<sp/>automatically</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>removed<sp/>once<sp/>master<sp/>dies</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>shmctl(usersPID_ID,<sp/>IPC_RMID,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>shmctl(nodesPID_ID,<sp/>IPC_RMID,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>shmctl(par_ID,<sp/>IPC_RMID,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>shmctl(mainLedger_ID,<sp/>IPC_RMID,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>shmArray[0]<sp/>=<sp/>usersPID_ID;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>shmArray[1]<sp/>=<sp/>nodesPID_ID;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>shmArray[2]<sp/>=<sp/>par_ID;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>shmArray[3]<sp/>=<sp/>mainLedger_ID;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="master_8h_1a808faa6034b867dc92c3878d95cec5d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="master_8c_1a808faa6034b867dc92c3878d95cec5d0" kindref="member">semaphores_init</ref>()</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="master_8c_1ae520355298e7bac453a556eeab7df45f" kindref="member">semID</ref><sp/>=<sp/>semget(<ref refid="common_8h_1a1abb954531733b3c7b64d0d78a75df2a" kindref="member">SEM_MASTER</ref>,<sp/>1,<sp/>0600<sp/>|<sp/>IPC_CREAT<sp/>|<sp/>IPC_EXCL);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="common_8h_1a8251bcdfc5c83845e0834adf211de033" kindref="member">TEST_ERROR</ref></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="debug_8h_1a494d31903e7b0333dfa03b0778679113" kindref="member">TRACE</ref>((</highlight><highlight class="stringliteral">&quot;:master:<sp/>semID<sp/>is<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="master_8c_1ae520355298e7bac453a556eeab7df45f" kindref="member">semID</ref>));</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>makes<sp/>an<sp/>array<sp/>with<sp/>every<sp/>IPC<sp/>object<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="master_8h_1af39360a8f6b9dda80c2adfe9f456f75e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="master_8c_1ac58bbbc0433b1fd55eff29fd2040e88c" kindref="member">make_ipc_array</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*IPC_array)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shmIDs[<ref refid="master_8c_1a153c8fd37ad2953f8ea58a227f97eb9d" kindref="member">SHM_NUM</ref>];<sp/></highlight><highlight class="comment">/*<sp/>array<sp/>containing<sp/>every<sp/>shared<sp/>memory<sp/>ID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>semIDs[1]<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="master_8c_1a402674278f054cd8161d84815dcdd7cc" kindref="member">shared_memory_objects_init</ref>(shmIDs);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>semIDs[0]<sp/>=<sp/><ref refid="master_8c_1ae520355298e7bac453a556eeab7df45f" kindref="member">semID</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>semaphores_init(semIDs);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(IPC_array,<sp/>shmIDs,<sp/><ref refid="master_8c_1a153c8fd37ad2953f8ea58a227f97eb9d" kindref="member">SHM_NUM</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(IPC_array<sp/>+<sp/><ref refid="master_8c_1a153c8fd37ad2953f8ea58a227f97eb9d" kindref="member">SHM_NUM</ref>,<sp/>shmIDs,<sp/><ref refid="master_8c_1a337d58ae606f3a5ec19972a7cbc4348f" kindref="member">SEM_NUM</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CTRL-C<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="master_8h_1a6732beb5ef32cd411a23cf0d8c915e37" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="master_8c_1a6732beb5ef32cd411a23cf0d8c915e37" kindref="member">master_interrupt_handle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>signum)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>write(1,<sp/></highlight><highlight class="stringliteral">&quot;::Master::<sp/>SIGINT<sp/>ricevuto\n&quot;</highlight><highlight class="normal">,<sp/>28);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>killpg(0,<sp/>SIGINT);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>just<sp/>to<sp/>avoid<sp/>printing<sp/>before<sp/>everyone<sp/>has<sp/>finished*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(1);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8h_1a3210b536ef064414b1736cd2e9b7d3bd" kindref="member">final_print</ref>(getpid(),<sp/><ref refid="master_8c_1af667a518a4feef7b7540ebac0cd618cf" kindref="member">usersPID</ref>,<sp/><ref refid="master_8c_1a803b35477f039b41487c3b1abee12b80" kindref="member">nodesPID</ref>,<sp/><ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/><sp/><sp/><sp/>int<sp/>status;</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>(wait(&amp;status)<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>&gt;&gt;<sp/>8;<sp/>/*<sp/>no<sp/>idea<sp/>about<sp/>what<sp/>it<sp/>does<sp/>please<sp/>help<sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>semctl(<ref refid="master_8c_1ae520355298e7bac453a556eeab7df45f" kindref="member">semID</ref>,<sp/>1,<sp/>IPC_RMID);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="master_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="master_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>pid_t<sp/><ref refid="nodes_8c_1af97c23712a0bab92e0ca95694e85282e" kindref="member">myPID</ref><sp/>=<sp/>getpid();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uCounter,<sp/>nCounter,<sp/>returnVal;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>simTime;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ipcObjectsIDs[<ref refid="master_8c_1a7c551e7044ac9e4c3b9bd15add5824f5" kindref="member">IPC_NUM</ref>];</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argvSpawns<sp/>=<sp/>malloc(8*32);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>sa;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sembuf<sp/>sops;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="master_8c_1a808faa6034b867dc92c3878d95cec5d0" kindref="member">semaphores_init</ref>();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="master_8c_1ac58bbbc0433b1fd55eff29fd2040e88c" kindref="member">make_ipc_array</ref>(ipcObjectsIDs);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="master_8c_1a0a7e9839ec9892b7a45bcc5fa69dd988" kindref="member">make_arguments</ref>(ipcObjectsIDs,<sp/>argvSpawns);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="master_8c_1a61246e5e608d3240fbbee97c978af351" kindref="member">mainLedger</ref><sp/>=<sp/><ref refid="common_8c_1a92d436f484409e36c57caaa0b45ae9da" kindref="member">ledger_init</ref>();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>simTime<sp/>=<sp/><ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>-&gt;<ref refid="structparameters_1a86c91cb21e43e2f92651c149f93f0dc5" kindref="member">SO_SIM_SEC</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>--<sp/>SIGNAL<sp/>HANDLER<sp/>--</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>first<sp/>set<sp/>all<sp/>bytes<sp/>of<sp/>sigation<sp/>to<sp/>0</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>then<sp/>initialize<sp/>sa.handler<sp/>to<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>function<sp/>interrupt_handle</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>then<sp/>set<sp/>the<sp/>handler<sp/>to<sp/>handle<sp/>SIGINT<sp/>signals<sp/>((struct<sp/>sigaction<sp/>*oldact)<sp/>=<sp/>NULL)</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero(&amp;sa,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sa));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>sa.sa_handler<sp/>=<sp/><ref refid="master_8c_1a6732beb5ef32cd411a23cf0d8c915e37" kindref="member">master_interrupt_handle</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>sigaction(SIGINT,<sp/>&amp;sa,<sp/><ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(nCounter<sp/>=<sp/>0;<sp/>nCounter<sp/>&lt;<sp/><ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>-&gt;<ref refid="structparameters_1a379d08051847c4f98268a27001b06261" kindref="member">SO_NODES_NUM</ref>;<sp/>nCounter++)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sem_8h_1a0376b2ead2de10bb7ab6a4d21ec304e9" kindref="member">LOCK</ref></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="master_8c_1a803b35477f039b41487c3b1abee12b80" kindref="member">nodesPID</ref>[nCounter]</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structnode__t_1a3298103f7912ec98c0f00205b2ac218d" kindref="member">status</ref><sp/>=<sp/>available;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="master_8c_1a803b35477f039b41487c3b1abee12b80" kindref="member">nodesPID</ref>[nCounter].<ref refid="structnode__t_1ae0d46a978d5cd6707411f276ad869b9c" kindref="member">pid</ref><sp/>=<sp/><ref refid="master_8c_1ab9c901d29850514f861a3760fffd505f" kindref="member">spawn_node</ref>(argvSpawns);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sem_8h_1ac82effb31e82e32254efc8b57251d59e" kindref="member">UNLOCK</ref></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getpid()<sp/>!=<sp/><ref refid="nodes_8c_1af97c23712a0bab92e0ca95694e85282e" kindref="member">myPID</ref>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*usersPrematurelyDead<sp/>=<sp/>0;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uCounter<sp/>=<sp/>0;<sp/>uCounter<sp/>&lt;<sp/><ref refid="master_8c_1a963935917aae796fbb8f2728703adf04" kindref="member">par</ref>-&gt;<ref refid="structparameters_1a1a7bfa0882f03d573b4e419d02f041f8" kindref="member">SO_USER_NUM</ref>;<sp/>uCounter++)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sem_8h_1a0376b2ead2de10bb7ab6a4d21ec304e9" kindref="member">LOCK</ref></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="master_8c_1af667a518a4feef7b7540ebac0cd618cf" kindref="member">usersPID</ref>[uCounter]</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="structuser__t_1a2f25fcb4ca138820780f3fc6ee156d17" kindref="member">status</ref><sp/>=<sp/>alive;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="master_8c_1af667a518a4feef7b7540ebac0cd618cf" kindref="member">usersPID</ref>[uCounter].<ref refid="structuser__t_1ae0d46a978d5cd6707411f276ad869b9c" kindref="member">pid</ref><sp/>=<sp/><ref refid="master_8c_1ae58c1750af2fc1502557fa91b9258315" kindref="member">spawn_user</ref>(argvSpawns);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sem_8h_1ac82effb31e82e32254efc8b57251d59e" kindref="member">UNLOCK</ref></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(getpid()<sp/>!=<sp/><ref refid="nodes_8c_1af97c23712a0bab92e0ca95694e85282e" kindref="member">myPID</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(returnVal<sp/>=<sp/>wait(<ref refid="common_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="common_8h_1a01c3892c16d6330e486637967ab0289b" kindref="member">MAX_RETRY</ref>:</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>change<sp/>status<sp/>in<sp/>usersPID<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;User<sp/>%d<sp/>has<sp/>died<sp/>because<sp/>of<sp/>too<sp/>many<sp/>retries<sp/>:(\n&quot;</highlight><highlight class="normal">,<sp/>getpid());</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(simTime);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="print_8h_1abba0d38395714b105fe448566b916b24" kindref="member">print_time_to_die</ref>();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>killpg(0,<sp/>SIGINT);<sp/></highlight><highlight class="comment">/*<sp/>our<sp/>sigint<sp/>handler<sp/>needs<sp/>to<sp/>do<sp/>quite<sp/>a<sp/>lot<sp/>of<sp/>things<sp/>to<sp/>print<sp/>the<sp/>wall<sp/>of<sp/>test<sp/>below<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/master.c"/>
  </compounddef>
</doxygen>
